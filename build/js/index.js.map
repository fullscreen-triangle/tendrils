{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///index.js","webpack:///webpack/bootstrap 3cb7d113ab61cca9fbac?45b6*","webpack:///./~/lodash/isObject.js?7044*","webpack:///./~/lodash/_root.js?b96f*","webpack:///./~/lodash/_freeGlobal.js?0283*","webpack:///./~/lodash/_baseGetTag.js?0736*","webpack:///./~/lodash/_Symbol.js?122e*","webpack:///./~/lodash/_getRawTag.js?bb37*","webpack:///./~/lodash/_objectToString.js?c267*","webpack:///./~/gl-matrix/dist/gl-matrix.js?1683*","webpack:///./~/gl-shader/index.js?3c16*","webpack:///./~/gl-shader/lib/create-uniforms.js?def5*","webpack:///./~/gl-shader/lib/reflect.js?728f*","webpack:///./~/gl-shader/lib/GLError.js?9025*","webpack:///./~/gl-shader/lib/create-attributes.js?f674*","webpack:///./~/gl-shader/lib/shader-cache.js?498a*","webpack:///./~/gl-format-compiler-error/index.js?e5ef*","webpack:///./~/sprintf-js/src/sprintf.js?00a2*","webpack:///(webpack)/buildin/amd-define.js?0bba*","webpack:///./~/gl-constants/lookup.js?c0ed*","webpack:///./~/gl-constants/1.0/numbers.js?38a9*","webpack:///./~/glsl-shader-name/index.js?bcfc*","webpack:///./~/glsl-tokenizer/string.js?90b9*","webpack:///./~/glsl-tokenizer/index.js?bb83*","webpack:///./~/glsl-tokenizer/lib/literals.js?8690*","webpack:///./~/glsl-tokenizer/lib/operators.js?ad32*","webpack:///./~/glsl-tokenizer/lib/builtins.js?d692*","webpack:///./~/glsl-tokenizer/lib/literals-300es.js?6c4a*","webpack:///./~/glsl-tokenizer/lib/builtins-300es.js?8b02*","webpack:///./~/atob-lite/atob-browser.js?57e8*","webpack:///./~/add-line-numbers/index.js?7cea*","webpack:///./~/pad-left/index.js?3e66*","webpack:///./~/repeat-string/index.js?fa87*","webpack:///./~/weakmap-shim/index.js?d4a6*","webpack:///./~/weakmap-shim/create-store.js?9e49*","webpack:///./~/weakmap-shim/hidden-store.js?5543*","webpack:///./~/gl-shader/lib/runtime-reflect.js?dfe7*","webpack:///./src/utils/index.js?bb1d*","webpack:///./src/timer.js?16e5*","webpack:///./src/index.js?83f0*","webpack:///./~/gl-fbo/fbo.js?54de*","webpack:///./~/gl-texture2d/texture.js?46a0*","webpack:///./~/ndarray/ndarray.js?88f2*","webpack:///./~/iota-array/iota.js?97ce*","webpack:///./~/is-buffer/index.js?9210*","webpack:///./~/ndarray-ops/ndarray-ops.js?c37a*","webpack:///./~/cwise-compiler/compiler.js?e21a*","webpack:///./~/cwise-compiler/lib/thunk.js?0f27*","webpack:///./~/cwise-compiler/lib/compile.js?7ad2*","webpack:///./~/uniq/uniq.js?79b6*","webpack:///./~/typedarray-pool/pool.js?4087*","webpack:///./~/buffer/index.js?a765*","webpack:///./~/base64-js/index.js?df94*","webpack:///./~/ieee754/index.js?4072*","webpack:///./~/buffer/~/isarray/index.js?bacc*","webpack:///./~/bit-twiddle/twiddle.js?26e6*","webpack:///./~/dup/dup.js?156f*","webpack:///./src/particles.js?0de6*","webpack:///./~/gl-geometry/index.js?39fe*","webpack:///./~/gl-geometry/normalize.js?02fc*","webpack:///./~/array-pack-2d/index.js?ed6f*","webpack:///./~/array-pack-2d/~/dtype/index.js?8934*","webpack:///./~/is-typedarray/index.js?b494*","webpack:///./~/gl-buffer/buffer.js?4cce*","webpack:///./~/isndarray/index.js?826f*","webpack:///./~/dtype/index.js?9ed8*","webpack:///./~/gl-to-dtype/index.js?16fd*","webpack:///./~/gl-vao/vao.js?54e9*","webpack:///./~/gl-vao/lib/vao-native.js?1ca4*","webpack:///./~/gl-vao/lib/do-bind.js?6600*","webpack:///./~/gl-vao/lib/vao-emulated.js?d303*","webpack:///./~/lodash/isFunction.js?b408*","webpack:///./src/screen/index.js?a690*","webpack:///./~/gl-big-triangle/index.js?9944*","webpack:///./src/screen/index.vert?cdba*","webpack:///./src/spawn/init/cpu.js?487d*","webpack:///./src/const/inert.js?7efe*","webpack:///./src/utils/aspect.js?0e0c*","webpack:///./src/logic.frag?a268*","webpack:///./src/render/index.vert?48e5*","webpack:///./src/render/index.frag?8329*","webpack:///./src/flow/index.vert?edb0*","webpack:///./src/flow/index.frag?b9ac*","webpack:///./src/screen/index.frag?4f9f*","webpack:///./src/screen/copy.frag?0ddc*","webpack:///./src/index.main.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","isObject","value","type","freeGlobal","freeSelf","self","Object","Function","global","baseGetTag","undefined","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","Symbol","toStringTag","isOwn","hasOwnProperty","tag","unmasked","e","result","nativeObjectToString","objectProto","prototype","toString","t","n","r","a","i","l","d","o","defineProperty","enumerable","get","__esModule","create","bind","default","s","setMatrixArrayType","ARRAY_TYPE","toRadian","equals","Math","abs","max","EPSILON","Float32Array","Array","RANDOM","random","PI","u","sqrt","f","M","forEach","sqrLen","len","sqrDist","dist","div","mul","sub","clone","fromValues","copy","set","add","subtract","multiply","divide","ceil","floor","min","round","scale","scaleAndAdd","distance","squaredDistance","length","squaredLength","negate","inverse","normalize","dot","lerp","transformMat4","transformQuat","h","str","exactEquals","v","cross","hermite","bezier","cos","sin","transformMat3","b","rotateX","rotateY","rotateZ","angle","acos","setAxes","sqlerp","rotationTo","identity","setAxisAngle","getAxisAngle","calculateW","slerp","invert","conjugate","fromMat3","fromEuler","P","A","E","O","transpose","R","y","q","x","_","Y","L","S","adjoint","determinant","translate","rotate","w","I","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","getTranslation","getScaling","getRotation","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","N","g","T","fromQuat","frustum","perspective","tan","perspectiveFromFieldOfView","upDegrees","downDegrees","leftDegrees","rightDegrees","ortho","lookAt","targetTo","frob","pow","multiplyScalar","multiplyScalarAndAdd","fromMat4","fromMat2d","normalFromMat4","projection","transformMat2","transformMat2d","setReal","getReal","fromRotationTranslationValues","getDual","setDual","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","LDU","vec4","vec3","vec2","quat2","quat","mat4","mat3","mat2d","mat2","glMatrix","Shader","gl","lastAttribCount","_vref","_fref","_relink","vertShader","fragShader","program","attributes","uniforms","types","compareAttributes","name","createShader","vertSource","fragSource","shader","update","createUniformWrapper","createAttributeWrapper","makeReflect","shaderCache","runtime","GLError","proto","newAttribCount","getProgramParameter","ACTIVE_ATTRIBUTES","oldAttribCount","enableVertexAttribArray","disableVertexAttribArray","useProgram","dispose","relink","wrapper","attributeNames","attributeLocations","uniformLocations","getUniformLocation","arguments","obj","vertex","fragment","pvref","VERTEX_SHADER","pfref","FRAGMENT_SHADER","testProgram","createProgram","attachShader","linkProgram","LINK_STATUS","errLog","getProgramInfoLog","deleteProgram","slice","sort","attributeUnpacked","attr","indexOf","size","charAt","locVector","j","push","location","isArray","locations","curLocation","makeVector","fill","makeGetter","index","proc","makePropSetter","path","vidx","charCodeAt","enumerateIndices","prefix","indices","prop","tprefix","parseInt","apply","makeSetter","code","item","idx","join","defaultValue","storeProperty","child","processObject","configurable","coallesced","coallesceUniforms","makeReflectTypes","useIndex","parts","split","k","rawError","shortMessage","longMessage","message","stack","Error","constructor","ShaderAttribute","dimension","constFunc","_gl","_wrapper","_index","_locations","_dimension","_constFunc","addVectorAttribute","constFuncArgs","varNames","addMatrixAttribute","attrs","pointer","normalized","stride","offset","FLOAT","vertexAttribPointer","scratch","vertexAttrib","loc","locs","x0","x1","x2","x3","ShaderReference","src","programs","count","cache","ContextCache","shaders","compileShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fmt","formatCompilerError","console","warn","short","long","vshader","fshader","attribs","bindAttribLocation","getCache","ctxCache","CACHE","getShaderReference","vref","fref","getProgram","weakMap","WeakMap","SHADER_COUNTER","deleteShader","isShader","shaderObj","token","prog","isProgram","shaderName","typeName","glConstants","longForm","sprintf","shortForm","errorStrings","errors","errorString","lineNo","isNaN","lines","addLineNumbers","line","substr","trim","__WEBPACK_AMD_DEFINE_RESULT__","key","sprintf_format","sprintf_parse","vsprintf","argv","concat","parse_tree","arg","ph","pad","pad_character","pad_length","is_positive","sign","cursor","tree_length","output","keys","param_no","re","not_type","test","not_primitive","numeric_arg","TypeError","number","String","fromCharCode","JSON","stringify","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","toLowerCase","valueOf","toUpperCase","json","replace","pad_char","repeat","align","sprintf_cache","match","_fmt","arg_names","text","exec","modulo","placeholder","SyntaxError","field_list","replacement_field","field_match","key_access","index_access","not_string","not_bool","not_json","window","gl10","0","1","2","3","4","5","6","256","512","513","514","515","516","517","518","519","768","769","770","771","772","773","774","775","776","1024","1028","1029","1032","1280","1281","1282","1285","1286","2304","2305","2849","2884","2885","2886","2928","2929","2930","2931","2932","2960","2961","2962","2963","2964","2965","2966","2967","2968","2978","3024","3042","3088","3089","3106","3107","3317","3333","3379","3386","3408","3410","3411","3412","3413","3414","3415","3553","4352","4353","4354","5120","5121","5122","5123","5124","5125","5126","5386","5890","6401","6402","6406","6407","6408","6409","6410","7680","7681","7682","7683","7936","7937","7938","9728","9729","9984","9985","9986","9987","10240","10241","10242","10243","10497","10752","16384","32769","32770","32771","32772","32773","32774","32777","32778","32779","32819","32820","32823","32824","32854","32855","32873","32926","32928","32936","32937","32938","32939","32968","32969","32970","32971","33071","33170","33189","33306","33635","33648","33901","33902","33984","33985","33986","33987","33988","33989","33990","33991","33992","33993","33994","33995","33996","33997","33998","33999","34000","34001","34002","34003","34004","34005","34006","34007","34008","34009","34010","34011","34012","34013","34014","34015","34016","34024","34041","34055","34056","34067","34068","34069","34070","34071","34072","34073","34074","34076","34338","34339","34340","34341","34342","34373","34466","34467","34660","34661","34816","34817","34818","34819","34877","34921","34922","34930","34962","34963","34964","34965","34975","35040","35044","35048","35632","35633","35660","35661","35663","35664","35665","35666","35667","35668","35669","35670","35671","35672","35673","35674","35675","35676","35678","35680","35712","35713","35714","35715","35716","35717","35718","35719","35720","35721","35722","35724","35725","36003","36004","36005","36006","36007","36048","36049","36050","36051","36053","36054","36055","36057","36061","36064","36096","36128","36160","36161","36162","36163","36164","36168","36176","36177","36178","36179","36180","36181","36194","36336","36337","36338","36339","36340","36341","36346","36347","36348","36349","37440","37441","37442","37443","37444","getName","tokens","tokenize","data","b64","atob","tokenizeString","opt","generator","map","mode","position","start","column","col","write","chunk","input","last","BLOCK_COMMENT","block_comment","LINE_COMMENT","line_comment","PREPROCESSOR","preprocessor","OPERATOR","operator","INTEGER","integer","HEX","hex","decimal","TOKEN","readtoken","WHITESPACE","whitespace","NORMAL","normal","total","end","content","EOF","isnum","isoperator","determine_operator","is_composite_operator","buf","res","operators","contentstr","literalsDict","KEYWORD","builtinsDict","BUILTIN","IDENT","allBuiltins","builtins100","allLiterals","literals100","version","builtins300es","literals300es","v100","filter","string","delim","totalDigits","digits","padLeft","num","ch","privates","createStore","fallback","store","has","delete","hiddenStore","writable","getType","GL_TABLE","typeNames","GL_TO_GLSL_TYPES","tn","runtimeUniforms","numUniforms","ACTIVE_UNIFORMS","info","getActiveUniform","runtimeAttributes","numAttributes","getActiveAttrib","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","step","array","next","pop","unshift","invLog2","wrapIndex","log","nextPow2","rootPath","href","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","Timer","now","since","time","rate","dt","paused","loop","reset","_now","Date","past","to","by","_interopRequireDefault","_toConsumableArray","arr","arr2","from","Tendrils","glSettings","defaults","_extends","assign","source","_glShader","_glShader2","_glFbo","_glFbo2","_particles2","_particles3","_timer","_timer2","_utils","_cpu","_cpu2","_aspect","_screen","_screen2","_logic","_logic2","_index2","_index3","_index4","_index5","_index6","_index7","_index8","_index9","_index10","_index11","_index12","_copy","_copy2","state","rootNum","autoClearView","autoFade","damping","speedLimit","forceWeight","varyForce","flowWeight","varyFlow","noiseWeight","varyNoise","flowDecay","flowWidth","noiseScale","varyNoiseScale","noiseSpeed","varyNoiseSpeed","varyTarget","lineWidth","speedAlpha","colorMapAlpha","baseColor","flowColor","fadeColor","timer","numBuffers","logicShader","renderShader","flowShader","fillShader","copyShader","colorMap","preserveDrawingBuffer","antialias","options","params","float","screen","flow","targets","buffers","setupBuffers","render","particles","viewRes","viewSize","tempData","setupParticles","spawn","shape","geomShape","logicFrag","logic","setup","clearView","clearFlow","_this","buffer","clear","COLOR_BUFFER_BIT","bindFramebuffer","FRAMEBUFFER","disable","BLEND","color","enable","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","viewport","previous","colorMapRes","draw","LINES","drawFade","drawFill","copyBuffer","stepBuffers","view","_this2","drawingBufferWidth","drawingBufferHeight","coverAspect","spawner","_particles","tick","_len","rest","_key","applyUpdate","saveFBOState","fbo","getParameter","FRAMEBUFFER_BINDING","rbo","RENDERBUFFER_BINDING","tex","TEXTURE_BINDING_2D","restoreFBOState","bindRenderbuffer","RENDERBUFFER","bindTexture","TEXTURE_2D","lazyInitColorAttachments","ext","maxColorAttachments","MAX_COLOR_ATTACHMENTS_WEBGL","colorAttachmentArrays","COLOR_ATTACHMENT0","NONE","throwFBOError","status","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","initTexture","height","format","attachment","createTexture","magFilter","NEAREST","minFilter","mipSamples","framebufferTexture2D","handle","initRenderBuffer","component","createRenderbuffer","renderbufferStorage","framebufferRenderbuffer","rebuildFBO","createFramebuffer","_shape","numColors","_ext","useStencil","_useStencil","useDepth","_useDepth","colorType","_colorType","RGBA","_color_rb","RGBA4","drawBuffersWEBGL","WEBGL_depth_texture","getExtension","depth","UNSIGNED_INT_24_8_WEBGL","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","UNSIGNED_SHORT","DEPTH_COMPONENT","DEPTH_ATTACHMENT","_depth_rb","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_ATTACHMENT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","_destroyed","deleteFramebuffer","deleteRenderbuffer","Framebuffer","parent","shapeVector","_shapeVector","reshapeFBO","maxFBOSize","MAX_RENDERBUFFER_SIZE","createFBO","WEBGL_draw_buffers","UNSIGNED_BYTE","OES_texture_float","preferFloat","stencil","lazyInitLinearTypes","linearTypes","LINEAR","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","filterTypes","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","wrapTypes","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","acceptTextureDOM","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","ImageData","reshapeTexture","maxSize","MAX_TEXTURE_SIZE","texImage2D","_mipLevels","Texture2D","_magFilter","_minFilter","_wrapS","_wrapT","_anisoSamples","wrapVector","wrapS","wrapT","_wrapVector","isPacked","texSubImageArray","x_off","y_off","mip_level","cformat","ctype","mipLevels","dtype","packed","channels","LUMINANCE","ndarray","ALPHA","LUMINANCE_ALPHA","RGB","needsMip","texSubImage2D","subarray","pack_buffer","pool","mallocFloat32","mallocUint8","pack_view","convertFloatToUint8","ops","freeFloat32","freeUint8","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","createTextureShape","maxTextureSize","createTextureDOM","directData","createTextureArray","buf_store","malloc","buf_array","free","createTexture2D","raw","out","inp","muls","psamples","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","wrap","unit","activeTexture","TEXTURE0","ACTIVE_TEXTURE","deleteTexture","generateMipmap","setPixels","compare1st","order","terms","compileConstructor","className","useGetters","procedure","CACHED_CONSTRUCTORS","iota","args","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","arrayDType","isBuffer","hasTypedArrays","wrappedNDArrayCtor","ctor","sz","ctor_list","Float64Array","float32","float64","int8","int16","int32","uint8","uint16","uint32","uint8_clamped","generic","isSlowBuffer","readFloatLE","_isBuffer","fixup","EmptyProc","lvalue","rvalue","thisVars","localVars","pcompile","user_args","compile","pre","body","post","funcName","makeOp","assign_ops","mod","band","bor","bxor","lshift","rshift","rrshift","op","unary_ops","not","bnot","neg","recip","binary_ops","and","or","eq","neq","lt","gt","leq","geq","math_unary","math_comm","math_noncomm","any","all","sum","prod","norm2squared","norm2","norminf","norm1","sup","inf","argmin","argmax","assigns","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","compileCwise","proc_args","arg_type","blockIndices","printCode","blockSize","createThunk","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","thunk","innerFill","nargs","has_index","pidx","outerFill","matched","indexStr","countMatches","orders","processBlock","block","dtypes","carg","RegExp","ptrStr","arrNum","offArgIndex","offArg","localStr","arrStr","reStrArr","ptrStrArr","typeSummary","summary","allEqual","generateCWiseOp","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","uniq","loopName","unique_pred","list","compare","ptr","unique_eq","unique","sorted","Buffer","freeArrayBuffer","byteLength","log_n","bits","log2","DATA","freeTypedArray","mallocArrayBuffer","ArrayBuffer","Uint8Array","mallocUint16","Uint16Array","mallocUint32","Uint32Array","mallocInt8","Int8Array","mallocInt16","Int16Array","mallocInt32","Int32Array","mallocFloat","mallocDouble","mallocUint8Clamped","hasUint8C","Uint8ClampedArray","mallocDataView","DataView","mallocBuffer","BUFFER","dup","__TYPEDARRAY_POOL","UINT8","UINT16","UINT32","INT8","INT16","INT32","DOUBLE","UINT8C","POOL","freeUint16","freeUint32","freeInt8","freeInt16","freeInt32","freeFloat","freeFloat64","freeDouble","freeUint8Clamped","freeDataView","freeBuffer","mallocFloat64","clearCache","typedArraySupport","__proto__","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","fromObject","assertSize","alloc","encoding","checked","isEncoding","actual","fromArrayLike","byteOffset","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","ret","toHex","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","allocUnsafeSlow","pos","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","getLens","validLen","placeHoldersLen","lens","_byteLength","tmp","Arr","curByte","revLookup","tripletToBase64","lookup","encodeChunk","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","countTrailingZeros","INT_BITS","INT_MAX","INT_MIN","mask","isPow2","shift","log10","popCount","prevPow2","parity","REVERSE_TABLE","tab","reverse","interleave2","deinterleave2","interleave3","z","deinterleave3","nextCombination","dupe_array","dupe_number","dupe","Particles","_glGeometry","_glGeometry2","_ndarray","_ndarray2","_isFunction","_isFunction2","logicVert","renderVert","renderFrag","geom","generateLUT","pixels","pixelsShape","pixelsData","dataRes","geomRes","POINTS","invX","invY","GLGeometry","_elementsType","_elementsBytes","_attributes","_dirty","_attrLength","_facesLength","_vao","_keys","glType","createVAO","faces","opts","cells","ELEMENT_ARRAY_BUFFER","positions","keyIndex","toUpdate","first","attribute","ARRAY_BUFFER","stop","TRIANGLES","_useElements","drawElements","drawArrays","unbind","BYTES_PER_ELEMENT","WebGLBuffer","pack","ista","isnd","ndlength","convert","B","dim","isTypedArray","isStrictTypedArray","isLooseTypedArray","names","strict","loose","[object Int8Array]","[object Int16Array]","[object Int32Array]","[object Uint8Array]","[object Uint16Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","GLBuffer","usage","updateTypeArray","dataLen","bufferData","bufferSubData","makeScratchTypeArray","DYNAMIC_DRAW","STATIC_DRAW","STREAM_DRAW","SUPPORTED_TYPES","bindBuffer","deleteBuffer","ndt","glToType","flag","ExtensionShim","bindVertexArrayOES","bindVertexArray","createVertexArrayOES","createVertexArray","deleteVertexArrayOES","deleteVertexArray","elements","elementsType","vao","createVAONative","createVAOEmulated","VertexAttribute","VAONative","_attribs","bindAttribs","vertexAttrib1f","vertexAttrib2f","vertexAttrib3f","vertexAttrib4f","doBind","nattribs","MAX_VERTEX_ATTRIBS","attrib","VAOEmulated","_elements","isFunction","funcTag","genTag","asyncTag","proxyTag","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","Screen","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_glBigTriangle","_glBigTriangle2","_Triangle","GLBigTriangle","_inert","_inert2","containAspect","aspect","_glMatrix"],"mappings":"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qa,EAAAxf,KAAA,KACA0d,EAAA0B,EACApvB,EAIA,MAFAwvB,GAAAjhB,KAAAzQ,GACAowB,EAAApwB,EACAkC,EAAA,EA7UA,GAGAlC,GACAowB,EAWAnsB,EAfA/B,EAAA,EACAsvB,EAAA,EACA5B,EAAA0B,EAGAI,KACAvC,KAGA9W,EAAA,EACA2X,EAAA,EACAF,EAAA,EACA8B,GAAA,EACAC,GAAA,EACA1B,EAAA,EAGAV,QACA,IAAAgD,GAAAC,EACAC,EAAAC,CACA,YAAAnD,EAAAoD,UACAJ,EAAAK,EACAH,EAAAI,EAKA,QADAT,MAAuBF,KACvBlwB,EAAA,EAAiBA,EAAAuwB,EAAAltB,OAAwBrD,IACzCowB,EAAAG,EAAAvwB,KAAA,CAEA,QAAAA,GAAA,EAAiBA,EAAAywB,EAAAptB,OAAwBrD,IACzCkwB,EAAAO,EAAAzwB,KAAA,CAGA,iBAAAmtB,GAEA,MADAF,MACA,OAAAE,EAAAY,EAAAZ,GACAoC,KA5EAryB,EAAAD,QAAAiwB,CAEA,IAAAwD,GAAAnzB,EAAA,IACAyyB,EAAAzyB,EAAA,IACAizB,EAAAjzB,EAAA,IACAszB,EAAAtzB,EAAA,IACAqzB,EAAArzB,EAAA,IAEA6xB,EAAA,IACAJ,EAAA,KACAb,EAAA,EACAE,EAAA,EACAE,EAAA,EACAE,EAAA,EACAE,EAAA,EACArc,EAAA,EACAge,EAAA,EACAD,EAAA,EACAF,EAAA,EACAjB,EAAA,EACAO,EAAA,GACAZ,EAAA,GAEApB,GACA,gBACA,eACA,eACA,WACA,UACA,QACA,QACA,UACA,UACA,aACA,MACA,YvB4vEM,SAAUvwB,EAAQD,GwB/xExBC,EAAAD,SAEA,YACA,QACA,UACA,OACA,YACA,QACA,UACA,UACA,QACA,WACA,KACA,MACA,QACA,KACA,OACA,KACA,MACA,QACA,QACA,MACA,OACA,OACA,OACA,OACA,QACA,UACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,cACA,kBACA,kBACA,SAGA,MACA,QACA,QACA,OACA,UACA,WACA,OACA,SACA,OACA,SACA,UACA,SACA,WACA,WACA,SACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,OACA,QACA,WACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,gBACA,gBACA,sBACA,SACA,OACA,YACA,UxBuyEM,SAAUC,EAAQD,GyBn4ExBC,EAAAD,SACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MzB24EM,SAAUC,EAAQD,G0Bx7ExBC,EAAAD,SAEA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,OACA,UACA,WACA,MACA,QACA,MACA,OACA,cACA,QACA,QACA,eACA,2BACA,sBACA,kBACA,wBACA,eACA,gBACA,WACA,gBACA,0BACA,eACA,eACA,eACA,eACA,SACA,cACA,kBACA,mBACA,eACA,eACA,cACA,eACA,kBACA,gBACA,iBACA,4BACA,uBACA,mBACA,yBACA,gBACA,0BACA,wBACA,mBACA,iBACA,2BACA,wBACA,mBACA,kCACA,oBACA,kCACA,eACA,sBACA,0BACA,qBACA,sBACA,sBACA,gCACA,gCACA,qBACA,4BACA,qCACA,8BACA,+BACA,sCACA,+CACA,wCACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,WACA,gBACA,qBACA,eACA,cACA,sBACA,6BACA,sCACA,+BACA,oBACA,cACA,qBACA,mBACA,0BACA,mCACA,4BACA,YACA,cACA,mBACA,cACA,SACA,WACA,gBACA,MACA,OACA,iBACA,MACA,MACA,MACA,MACA,YACA,MACA,WACA,MACA,UACA,UACA,UACA,OACA,MACA,aACA,OACA,OACA,MACA,YACA,eACA,gBACA,mBACA,cACA,iBACA,kBACA,sBACA,oBACA,mBACA,uBACA,uB1Bg8EM,SAAUC,EAAQD,EAASM,G2BplFjC,GAAAuzB,GAAAvzB,EAAA,GAEAL,GAAAD,QAAA6zB,EAAAhjB,QAAA8I,QACA,SACA,WACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,oBACA,iBACA,uBACA,aACA,aACA,eACA,kBACA,aACA,aACA,eACA,kBACA,WACA,WACA,WACA,YACA,WACA,cACA,gBACA,QACA,SACA,aACA,SACA,YACA,SACA,SACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,aACA,WACA,WACA,WACA,aACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,qBACA,qBACA,cACA,eACA,eACA,iBACA,uBACA,aACA,kBACA,aACA,kBACA,iBACA,iBACA,gBACA,iBACA,iBACA,cACA,eACA,eACA,mBACA,oBACA,uB3B4lFM,SAAU1Z,EAAQD,EAASM,G4BhrFjC,GAAAuzB,GAAAvzB,EAAA,GAIAuzB,KAAAhjB,QAAAijB,OAAA,SAAAvsB,GACA,yBAAAoT,KAAApT,KAGAtH,EAAAD,QAAA6zB,EAAAla,QAEA,cACA,gBACA,cACA,eACA,eACA,iBACA,eACA,gBACA,sBACA,6BACA,4BACA,6BACA,gCACA,kCACA,0BACA,+BACA,oBACA,2BACA,2BACA,0BACA,gBAGA,QACA,QACA,YACA,QACA,QACA,iBACA,kBACA,iBACA,kBACA,gBACA,kBACA,gBACA,kBACA,eACA,iBACA,eACA,YACA,cACA,UACA,UACA,cACA,cACA,aACA,gBACA,aACA,mBACA,oBACA,mBACA,iBACA,uBACA,cACA,oBACA,kBACA,2B5ByrFM,SAAU1Z,EAAQD,G6B5vFxBC,EAAAD,QAAA,SAAA8G,GACA,MAAAspB,MAAAtpB,K7BowFM,SAAU7G,EAAQD,EAASM,G8BlwFjC,QAAA2Y,G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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tendrils\"] = factory();\n\telse\n\t\troot[\"Tendrils\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tendrils\"] = factory();\n\telse\n\t\troot[\"Tendrils\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(227);\n\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ }),\n/* 34 */,\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar freeGlobal = __webpack_require__(36);\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\tmodule.exports = root;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\tmodule.exports = freeGlobal;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 37 */,\n/* 38 */,\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(40),\n\t    getRawTag = __webpack_require__(41),\n\t    objectToString = __webpack_require__(42);\n\t\n\t/** `Object#toString` result references. */\n\tvar nullTag = '[object Null]',\n\t    undefinedTag = '[object Undefined]';\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tfunction baseGetTag(value) {\n\t  if (value == null) {\n\t    return value === undefined ? undefinedTag : nullTag;\n\t  }\n\t  return (symToStringTag && symToStringTag in Object(value))\n\t    ? getRawTag(value)\n\t    : objectToString(value);\n\t}\n\t\n\tmodule.exports = baseGetTag;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(35);\n\t\n\t/** Built-in value references. */\n\tvar Symbol = root.Symbol;\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(40);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.\n\t */\n\tfunction getRawTag(value) {\n\t  var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t      tag = value[symToStringTag];\n\t\n\t  try {\n\t    value[symToStringTag] = undefined;\n\t    var unmasked = true;\n\t  } catch (e) {}\n\t\n\t  var result = nativeObjectToString.call(value);\n\t  if (unmasked) {\n\t    if (isOwn) {\n\t      value[symToStringTag] = tag;\n\t    } else {\n\t      delete value[symToStringTag];\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = getRawTag;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/**\n\t * Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t */\n\tfunction objectToString(value) {\n\t  return nativeObjectToString.call(value);\n\t}\n\t\n\tmodule.exports = objectToString;\n\n\n/***/ }),\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t@fileoverview gl-matrix - High performance matrix and vector operations\n\t@author Brandon Jones\n\t@author Colin MacKenzie IV\n\t@version 2.7.0\n\t\n\tCopyright (c) 2015-2018, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE.\n\t\n\t*/\n\t!function(t,n){if(true)module.exports=n();else if(\"function\"==typeof define&&define.amd)define([],n);else{var r=n();for(var a in r)(\"object\"==typeof exports?exports:t)[a]=r[a]}}(\"undefined\"!=typeof self?self:this,function(){return function(t){var n={};function r(a){if(n[a])return n[a].exports;var e=n[a]={i:a,l:!1,exports:{}};return t[a].call(e.exports,e,e.exports,r),e.l=!0,e.exports}return r.m=t,r.c=n,r.d=function(t,n,a){r.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:a})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,n){if(1&n&&(t=r(t)),8&n)return t;if(4&n&&\"object\"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:t}),2&n&&\"string\"!=typeof t)for(var e in t)r.d(a,e,function(n){return t[n]}.bind(null,e));return a},r.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(n,\"a\",n),n},r.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},r.p=\"\",r(r.s=10)}([function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.setMatrixArrayType=function(t){n.ARRAY_TYPE=t},n.toRadian=function(t){return t*e},n.equals=function(t,n){return Math.abs(t-n)<=a*Math.max(1,Math.abs(t),Math.abs(n))};var a=n.EPSILON=1e-6;n.ARRAY_TYPE=\"undefined\"!=typeof Float32Array?Float32Array:Array,n.RANDOM=Math.random;var e=Math.PI/180},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.forEach=n.sqrLen=n.len=n.sqrDist=n.dist=n.div=n.mul=n.sub=void 0,n.create=e,n.clone=function(t){var n=new a.ARRAY_TYPE(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},n.fromValues=function(t,n,r,e){var u=new a.ARRAY_TYPE(4);return u[0]=t,u[1]=n,u[2]=r,u[3]=e,u},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},n.set=function(t,n,r,a,e){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t},n.subtract=u,n.multiply=o,n.divide=i,n.ceil=function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t},n.floor=function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t},n.min=function(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t[2]=Math.min(n[2],r[2]),t[3]=Math.min(n[3],r[3]),t},n.max=function(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t[2]=Math.max(n[2],r[2]),t[3]=Math.max(n[3],r[3]),t},n.round=function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t},n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t},n.scaleAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t},n.distance=s,n.squaredDistance=c,n.length=f,n.squaredLength=M,n.negate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t},n.inverse=function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t},n.normalize=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r*r+a*a+e*e+u*u;o>0&&(o=1/Math.sqrt(o),t[0]=r*o,t[1]=a*o,t[2]=e*o,t[3]=u*o);return t},n.dot=function(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]},n.lerp=function(t,n,r,a){var e=n[0],u=n[1],o=n[2],i=n[3];return t[0]=e+a*(r[0]-e),t[1]=u+a*(r[1]-u),t[2]=o+a*(r[2]-o),t[3]=i+a*(r[3]-i),t},n.random=function(t,n){var r,e,u,o,i,s;n=n||1;do{r=2*a.RANDOM()-1,e=2*a.RANDOM()-1,i=r*r+e*e}while(i>=1);do{u=2*a.RANDOM()-1,o=2*a.RANDOM()-1,s=u*u+o*o}while(s>=1);var c=Math.sqrt((1-i)/s);return t[0]=n*r,t[1]=n*e,t[2]=n*u*c,t[3]=n*o*c,t},n.transformMat4=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3];return t[0]=r[0]*a+r[4]*e+r[8]*u+r[12]*o,t[1]=r[1]*a+r[5]*e+r[9]*u+r[13]*o,t[2]=r[2]*a+r[6]*e+r[10]*u+r[14]*o,t[3]=r[3]*a+r[7]*e+r[11]*u+r[15]*o,t},n.transformQuat=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=r[0],i=r[1],s=r[2],c=r[3],f=c*a+i*u-s*e,M=c*e+s*a-o*u,h=c*u+o*e-i*a,l=-o*a-i*e-s*u;return t[0]=f*c+l*-o+M*-s-h*-i,t[1]=M*c+l*-i+h*-o-f*-s,t[2]=h*c+l*-s+f*-i-M*-o,t[3]=n[3],t},n.str=function(t){return\"vec4(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=n[0],s=n[1],c=n[2],f=n[3];return Math.abs(r-i)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(e-s)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(s))&&Math.abs(u-c)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(o-f)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(f))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(){var t=new a.ARRAY_TYPE(4);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t}function o(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t[2]=n[2]*r[2],t[3]=n[3]*r[3],t}function i(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t[2]=n[2]/r[2],t[3]=n[3]/r[3],t}function s(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2],u=n[3]-t[3];return Math.sqrt(r*r+a*a+e*e+u*u)}function c(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2],u=n[3]-t[3];return r*r+a*a+e*e+u*u}function f(t){var n=t[0],r=t[1],a=t[2],e=t[3];return Math.sqrt(n*n+r*r+a*a+e*e)}function M(t){var n=t[0],r=t[1],a=t[2],e=t[3];return n*n+r*r+a*a+e*e}n.sub=u,n.mul=o,n.div=i,n.dist=s,n.sqrDist=c,n.len=f,n.sqrLen=M,n.forEach=function(){var t=e();return function(n,r,a,e,u,o){var i=void 0,s=void 0;for(r||(r=4),a||(a=0),s=e?Math.min(e*r+a,n.length):n.length,i=a;i<s;i+=r)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],t[3]=n[i+3],u(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2],n[i+3]=t[3];return n}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.forEach=n.sqrLen=n.len=n.sqrDist=n.dist=n.div=n.mul=n.sub=void 0,n.create=e,n.clone=function(t){var n=new a.ARRAY_TYPE(3);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n},n.length=u,n.fromValues=o,n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t},n.set=function(t,n,r,a){return t[0]=n,t[1]=r,t[2]=a,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t},n.subtract=i,n.multiply=s,n.divide=c,n.ceil=function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t},n.floor=function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t},n.min=function(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t[2]=Math.min(n[2],r[2]),t},n.max=function(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t[2]=Math.max(n[2],r[2]),t},n.round=function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t},n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t},n.scaleAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t},n.distance=f,n.squaredDistance=M,n.squaredLength=h,n.negate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t},n.inverse=function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t},n.normalize=l,n.dot=v,n.cross=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=r[0],i=r[1],s=r[2];return t[0]=e*s-u*i,t[1]=u*o-a*s,t[2]=a*i-e*o,t},n.lerp=function(t,n,r,a){var e=n[0],u=n[1],o=n[2];return t[0]=e+a*(r[0]-e),t[1]=u+a*(r[1]-u),t[2]=o+a*(r[2]-o),t},n.hermite=function(t,n,r,a,e,u){var o=u*u,i=o*(2*u-3)+1,s=o*(u-2)+u,c=o*(u-1),f=o*(3-2*u);return t[0]=n[0]*i+r[0]*s+a[0]*c+e[0]*f,t[1]=n[1]*i+r[1]*s+a[1]*c+e[1]*f,t[2]=n[2]*i+r[2]*s+a[2]*c+e[2]*f,t},n.bezier=function(t,n,r,a,e,u){var o=1-u,i=o*o,s=u*u,c=i*o,f=3*u*i,M=3*s*o,h=s*u;return t[0]=n[0]*c+r[0]*f+a[0]*M+e[0]*h,t[1]=n[1]*c+r[1]*f+a[1]*M+e[1]*h,t[2]=n[2]*c+r[2]*f+a[2]*M+e[2]*h,t},n.random=function(t,n){n=n||1;var r=2*a.RANDOM()*Math.PI,e=2*a.RANDOM()-1,u=Math.sqrt(1-e*e)*n;return t[0]=Math.cos(r)*u,t[1]=Math.sin(r)*u,t[2]=e*n,t},n.transformMat4=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=r[3]*a+r[7]*e+r[11]*u+r[15];return o=o||1,t[0]=(r[0]*a+r[4]*e+r[8]*u+r[12])/o,t[1]=(r[1]*a+r[5]*e+r[9]*u+r[13])/o,t[2]=(r[2]*a+r[6]*e+r[10]*u+r[14])/o,t},n.transformMat3=function(t,n,r){var a=n[0],e=n[1],u=n[2];return t[0]=a*r[0]+e*r[3]+u*r[6],t[1]=a*r[1]+e*r[4]+u*r[7],t[2]=a*r[2]+e*r[5]+u*r[8],t},n.transformQuat=function(t,n,r){var a=r[0],e=r[1],u=r[2],o=r[3],i=n[0],s=n[1],c=n[2],f=e*c-u*s,M=u*i-a*c,h=a*s-e*i,l=e*h-u*M,v=u*f-a*h,d=a*M-e*f,b=2*o;return f*=b,M*=b,h*=b,l*=2,v*=2,d*=2,t[0]=i+f+l,t[1]=s+M+v,t[2]=c+h+d,t},n.rotateX=function(t,n,r,a){var e=[],u=[];return e[0]=n[0]-r[0],e[1]=n[1]-r[1],e[2]=n[2]-r[2],u[0]=e[0],u[1]=e[1]*Math.cos(a)-e[2]*Math.sin(a),u[2]=e[1]*Math.sin(a)+e[2]*Math.cos(a),t[0]=u[0]+r[0],t[1]=u[1]+r[1],t[2]=u[2]+r[2],t},n.rotateY=function(t,n,r,a){var e=[],u=[];return e[0]=n[0]-r[0],e[1]=n[1]-r[1],e[2]=n[2]-r[2],u[0]=e[2]*Math.sin(a)+e[0]*Math.cos(a),u[1]=e[1],u[2]=e[2]*Math.cos(a)-e[0]*Math.sin(a),t[0]=u[0]+r[0],t[1]=u[1]+r[1],t[2]=u[2]+r[2],t},n.rotateZ=function(t,n,r,a){var e=[],u=[];return e[0]=n[0]-r[0],e[1]=n[1]-r[1],e[2]=n[2]-r[2],u[0]=e[0]*Math.cos(a)-e[1]*Math.sin(a),u[1]=e[0]*Math.sin(a)+e[1]*Math.cos(a),u[2]=e[2],t[0]=u[0]+r[0],t[1]=u[1]+r[1],t[2]=u[2]+r[2],t},n.angle=function(t,n){var r=o(t[0],t[1],t[2]),a=o(n[0],n[1],n[2]);l(r,r),l(a,a);var e=v(r,a);return e>1?0:e<-1?Math.PI:Math.acos(e)},n.str=function(t){return\"vec3(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=n[0],i=n[1],s=n[2];return Math.abs(r-o)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(e-i)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(i))&&Math.abs(u-s)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(s))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(){var t=new a.ARRAY_TYPE(3);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function u(t){var n=t[0],r=t[1],a=t[2];return Math.sqrt(n*n+r*r+a*a)}function o(t,n,r){var e=new a.ARRAY_TYPE(3);return e[0]=t,e[1]=n,e[2]=r,e}function i(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t}function s(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t[2]=n[2]*r[2],t}function c(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t[2]=n[2]/r[2],t}function f(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2];return Math.sqrt(r*r+a*a+e*e)}function M(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2];return r*r+a*a+e*e}function h(t){var n=t[0],r=t[1],a=t[2];return n*n+r*r+a*a}function l(t,n){var r=n[0],a=n[1],e=n[2],u=r*r+a*a+e*e;return u>0&&(u=1/Math.sqrt(u),t[0]=n[0]*u,t[1]=n[1]*u,t[2]=n[2]*u),t}function v(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}n.sub=i,n.mul=s,n.div=c,n.dist=f,n.sqrDist=M,n.len=u,n.sqrLen=h,n.forEach=function(){var t=e();return function(n,r,a,e,u,o){var i=void 0,s=void 0;for(r||(r=3),a||(a=0),s=e?Math.min(e*r+a,n.length):n.length,i=a;i<s;i+=r)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],u(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2];return n}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.setAxes=n.sqlerp=n.rotationTo=n.equals=n.exactEquals=n.normalize=n.sqrLen=n.squaredLength=n.len=n.length=n.lerp=n.dot=n.scale=n.mul=n.add=n.set=n.copy=n.fromValues=n.clone=void 0,n.create=s,n.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},n.setAxisAngle=c,n.getAxisAngle=function(t,n){var r=2*Math.acos(n[3]),e=Math.sin(r/2);e>a.EPSILON?(t[0]=n[0]/e,t[1]=n[1]/e,t[2]=n[2]/e):(t[0]=1,t[1]=0,t[2]=0);return r},n.multiply=f,n.rotateX=function(t,n,r){r*=.5;var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s+o*i,t[1]=e*s+u*i,t[2]=u*s-e*i,t[3]=o*s-a*i,t},n.rotateY=function(t,n,r){r*=.5;var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s-u*i,t[1]=e*s+o*i,t[2]=u*s+a*i,t[3]=o*s-e*i,t},n.rotateZ=function(t,n,r){r*=.5;var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s+e*i,t[1]=e*s-a*i,t[2]=u*s+o*i,t[3]=o*s-u*i,t},n.calculateW=function(t,n){var r=n[0],a=n[1],e=n[2];return t[0]=r,t[1]=a,t[2]=e,t[3]=Math.sqrt(Math.abs(1-r*r-a*a-e*e)),t},n.slerp=M,n.random=function(t){var n=a.RANDOM(),r=a.RANDOM(),e=a.RANDOM(),u=Math.sqrt(1-n),o=Math.sqrt(n);return t[0]=u*Math.sin(2*Math.PI*r),t[1]=u*Math.cos(2*Math.PI*r),t[2]=o*Math.sin(2*Math.PI*e),t[3]=o*Math.cos(2*Math.PI*e),t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r*r+a*a+e*e+u*u,i=o?1/o:0;return t[0]=-r*i,t[1]=-a*i,t[2]=-e*i,t[3]=u*i,t},n.conjugate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t},n.fromMat3=h,n.fromEuler=function(t,n,r,a){var e=.5*Math.PI/180;n*=e,r*=e,a*=e;var u=Math.sin(n),o=Math.cos(n),i=Math.sin(r),s=Math.cos(r),c=Math.sin(a),f=Math.cos(a);return t[0]=u*s*f-o*i*c,t[1]=o*i*f+u*s*c,t[2]=o*s*c-u*i*f,t[3]=o*s*f+u*i*c,t},n.str=function(t){return\"quat(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"};var a=i(r(0)),e=i(r(5)),u=i(r(2)),o=i(r(1));function i(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}function s(){var t=new a.ARRAY_TYPE(4);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function c(t,n,r){r*=.5;var a=Math.sin(r);return t[0]=a*n[0],t[1]=a*n[1],t[2]=a*n[2],t[3]=Math.cos(r),t}function f(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1],c=r[2],f=r[3];return t[0]=a*f+o*i+e*c-u*s,t[1]=e*f+o*s+u*i-a*c,t[2]=u*f+o*c+a*s-e*i,t[3]=o*f-a*i-e*s-u*c,t}function M(t,n,r,e){var u=n[0],o=n[1],i=n[2],s=n[3],c=r[0],f=r[1],M=r[2],h=r[3],l=void 0,v=void 0,d=void 0,b=void 0,m=void 0;return(v=u*c+o*f+i*M+s*h)<0&&(v=-v,c=-c,f=-f,M=-M,h=-h),1-v>a.EPSILON?(l=Math.acos(v),d=Math.sin(l),b=Math.sin((1-e)*l)/d,m=Math.sin(e*l)/d):(b=1-e,m=e),t[0]=b*u+m*c,t[1]=b*o+m*f,t[2]=b*i+m*M,t[3]=b*s+m*h,t}function h(t,n){var r=n[0]+n[4]+n[8],a=void 0;if(r>0)a=Math.sqrt(r+1),t[3]=.5*a,a=.5/a,t[0]=(n[5]-n[7])*a,t[1]=(n[6]-n[2])*a,t[2]=(n[1]-n[3])*a;else{var e=0;n[4]>n[0]&&(e=1),n[8]>n[3*e+e]&&(e=2);var u=(e+1)%3,o=(e+2)%3;a=Math.sqrt(n[3*e+e]-n[3*u+u]-n[3*o+o]+1),t[e]=.5*a,a=.5/a,t[3]=(n[3*u+o]-n[3*o+u])*a,t[u]=(n[3*u+e]+n[3*e+u])*a,t[o]=(n[3*o+e]+n[3*e+o])*a}return t}n.clone=o.clone,n.fromValues=o.fromValues,n.copy=o.copy,n.set=o.set,n.add=o.add,n.mul=f,n.scale=o.scale,n.dot=o.dot,n.lerp=o.lerp;var l=n.length=o.length,v=(n.len=l,n.squaredLength=o.squaredLength),d=(n.sqrLen=v,n.normalize=o.normalize);n.exactEquals=o.exactEquals,n.equals=o.equals,n.rotationTo=function(){var t=u.create(),n=u.fromValues(1,0,0),r=u.fromValues(0,1,0);return function(a,e,o){var i=u.dot(e,o);return i<-.999999?(u.cross(t,n,e),u.len(t)<1e-6&&u.cross(t,r,e),u.normalize(t,t),c(a,t,Math.PI),a):i>.999999?(a[0]=0,a[1]=0,a[2]=0,a[3]=1,a):(u.cross(t,e,o),a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=1+i,d(a,a))}}(),n.sqlerp=function(){var t=s(),n=s();return function(r,a,e,u,o,i){return M(t,a,o,i),M(n,e,u,i),M(r,t,n,2*i*(1-i)),r}}(),n.setAxes=function(){var t=e.create();return function(n,r,a,e){return t[0]=a[0],t[3]=a[1],t[6]=a[2],t[1]=e[0],t[4]=e[1],t[7]=e[2],t[2]=-r[0],t[5]=-r[1],t[8]=-r[2],d(n,h(n,t))}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(16);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0);return t[0]=1,t[5]=1,t[10]=1,t[15]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(16);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},n.fromValues=function(t,n,r,e,u,o,i,s,c,f,M,h,l,v,d,b){var m=new a.ARRAY_TYPE(16);return m[0]=t,m[1]=n,m[2]=r,m[3]=e,m[4]=u,m[5]=o,m[6]=i,m[7]=s,m[8]=c,m[9]=f,m[10]=M,m[11]=h,m[12]=l,m[13]=v,m[14]=d,m[15]=b,m},n.set=function(t,n,r,a,e,u,o,i,s,c,f,M,h,l,v,d,b){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t[6]=i,t[7]=s,t[8]=c,t[9]=f,t[10]=M,t[11]=h,t[12]=l,t[13]=v,t[14]=d,t[15]=b,t},n.identity=e,n.transpose=function(t,n){if(t===n){var r=n[1],a=n[2],e=n[3],u=n[6],o=n[7],i=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=r,t[6]=n[9],t[7]=n[13],t[8]=a,t[9]=u,t[11]=n[14],t[12]=e,t[13]=o,t[14]=i}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15];return t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=n[9],h=n[10],l=n[11],v=n[12],d=n[13],b=n[14],m=n[15],p=r*i-a*o,P=r*s-e*o,A=r*c-u*o,E=a*s-e*i,O=a*c-u*i,R=e*c-u*s,y=f*d-M*v,q=f*b-h*v,x=f*m-l*v,_=M*b-h*d,Y=M*m-l*d,L=h*m-l*b,S=p*L-P*Y+A*_+E*x-O*q+R*y;if(!S)return null;return S=1/S,t[0]=(i*L-s*Y+c*_)*S,t[1]=(e*Y-a*L-u*_)*S,t[2]=(d*R-b*O+m*E)*S,t[3]=(h*O-M*R-l*E)*S,t[4]=(s*x-o*L-c*q)*S,t[5]=(r*L-e*x+u*q)*S,t[6]=(b*A-v*R-m*P)*S,t[7]=(f*R-h*A+l*P)*S,t[8]=(o*Y-i*x+c*y)*S,t[9]=(a*x-r*Y-u*y)*S,t[10]=(v*O-d*A+m*p)*S,t[11]=(M*A-f*O-l*p)*S,t[12]=(i*q-o*_-s*y)*S,t[13]=(r*_-a*q+e*y)*S,t[14]=(d*P-v*E-b*p)*S,t[15]=(f*E-M*P+h*p)*S,t},n.adjoint=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=n[9],h=n[10],l=n[11],v=n[12],d=n[13],b=n[14],m=n[15];return t[0]=i*(h*m-l*b)-M*(s*m-c*b)+d*(s*l-c*h),t[1]=-(a*(h*m-l*b)-M*(e*m-u*b)+d*(e*l-u*h)),t[2]=a*(s*m-c*b)-i*(e*m-u*b)+d*(e*c-u*s),t[3]=-(a*(s*l-c*h)-i*(e*l-u*h)+M*(e*c-u*s)),t[4]=-(o*(h*m-l*b)-f*(s*m-c*b)+v*(s*l-c*h)),t[5]=r*(h*m-l*b)-f*(e*m-u*b)+v*(e*l-u*h),t[6]=-(r*(s*m-c*b)-o*(e*m-u*b)+v*(e*c-u*s)),t[7]=r*(s*l-c*h)-o*(e*l-u*h)+f*(e*c-u*s),t[8]=o*(M*m-l*d)-f*(i*m-c*d)+v*(i*l-c*M),t[9]=-(r*(M*m-l*d)-f*(a*m-u*d)+v*(a*l-u*M)),t[10]=r*(i*m-c*d)-o*(a*m-u*d)+v*(a*c-u*i),t[11]=-(r*(i*l-c*M)-o*(a*l-u*M)+f*(a*c-u*i)),t[12]=-(o*(M*b-h*d)-f*(i*b-s*d)+v*(i*h-s*M)),t[13]=r*(M*b-h*d)-f*(a*b-e*d)+v*(a*h-e*M),t[14]=-(r*(i*b-s*d)-o*(a*b-e*d)+v*(a*s-e*i)),t[15]=r*(i*h-s*M)-o*(a*h-e*M)+f*(a*s-e*i),t},n.determinant=function(t){var n=t[0],r=t[1],a=t[2],e=t[3],u=t[4],o=t[5],i=t[6],s=t[7],c=t[8],f=t[9],M=t[10],h=t[11],l=t[12],v=t[13],d=t[14],b=t[15];return(n*o-r*u)*(M*b-h*d)-(n*i-a*u)*(f*b-h*v)+(n*s-e*u)*(f*d-M*v)+(r*i-a*o)*(c*b-h*l)-(r*s-e*o)*(c*d-M*l)+(a*s-e*i)*(c*v-f*l)},n.multiply=u,n.translate=function(t,n,r){var a=r[0],e=r[1],u=r[2],o=void 0,i=void 0,s=void 0,c=void 0,f=void 0,M=void 0,h=void 0,l=void 0,v=void 0,d=void 0,b=void 0,m=void 0;n===t?(t[12]=n[0]*a+n[4]*e+n[8]*u+n[12],t[13]=n[1]*a+n[5]*e+n[9]*u+n[13],t[14]=n[2]*a+n[6]*e+n[10]*u+n[14],t[15]=n[3]*a+n[7]*e+n[11]*u+n[15]):(o=n[0],i=n[1],s=n[2],c=n[3],f=n[4],M=n[5],h=n[6],l=n[7],v=n[8],d=n[9],b=n[10],m=n[11],t[0]=o,t[1]=i,t[2]=s,t[3]=c,t[4]=f,t[5]=M,t[6]=h,t[7]=l,t[8]=v,t[9]=d,t[10]=b,t[11]=m,t[12]=o*a+f*e+v*u+n[12],t[13]=i*a+M*e+d*u+n[13],t[14]=s*a+h*e+b*u+n[14],t[15]=c*a+l*e+m*u+n[15]);return t},n.scale=function(t,n,r){var a=r[0],e=r[1],u=r[2];return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*e,t[5]=n[5]*e,t[6]=n[6]*e,t[7]=n[7]*e,t[8]=n[8]*u,t[9]=n[9]*u,t[10]=n[10]*u,t[11]=n[11]*u,t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},n.rotate=function(t,n,r,e){var u=e[0],o=e[1],i=e[2],s=Math.sqrt(u*u+o*o+i*i),c=void 0,f=void 0,M=void 0,h=void 0,l=void 0,v=void 0,d=void 0,b=void 0,m=void 0,p=void 0,P=void 0,A=void 0,E=void 0,O=void 0,R=void 0,y=void 0,q=void 0,x=void 0,_=void 0,Y=void 0,L=void 0,S=void 0,w=void 0,I=void 0;if(s<a.EPSILON)return null;u*=s=1/s,o*=s,i*=s,c=Math.sin(r),f=Math.cos(r),M=1-f,h=n[0],l=n[1],v=n[2],d=n[3],b=n[4],m=n[5],p=n[6],P=n[7],A=n[8],E=n[9],O=n[10],R=n[11],y=u*u*M+f,q=o*u*M+i*c,x=i*u*M-o*c,_=u*o*M-i*c,Y=o*o*M+f,L=i*o*M+u*c,S=u*i*M+o*c,w=o*i*M-u*c,I=i*i*M+f,t[0]=h*y+b*q+A*x,t[1]=l*y+m*q+E*x,t[2]=v*y+p*q+O*x,t[3]=d*y+P*q+R*x,t[4]=h*_+b*Y+A*L,t[5]=l*_+m*Y+E*L,t[6]=v*_+p*Y+O*L,t[7]=d*_+P*Y+R*L,t[8]=h*S+b*w+A*I,t[9]=l*S+m*w+E*I,t[10]=v*S+p*w+O*I,t[11]=d*S+P*w+R*I,n!==t&&(t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t},n.rotateX=function(t,n,r){var a=Math.sin(r),e=Math.cos(r),u=n[4],o=n[5],i=n[6],s=n[7],c=n[8],f=n[9],M=n[10],h=n[11];n!==t&&(t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t[4]=u*e+c*a,t[5]=o*e+f*a,t[6]=i*e+M*a,t[7]=s*e+h*a,t[8]=c*e-u*a,t[9]=f*e-o*a,t[10]=M*e-i*a,t[11]=h*e-s*a,t},n.rotateY=function(t,n,r){var a=Math.sin(r),e=Math.cos(r),u=n[0],o=n[1],i=n[2],s=n[3],c=n[8],f=n[9],M=n[10],h=n[11];n!==t&&(t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t[0]=u*e-c*a,t[1]=o*e-f*a,t[2]=i*e-M*a,t[3]=s*e-h*a,t[8]=u*a+c*e,t[9]=o*a+f*e,t[10]=i*a+M*e,t[11]=s*a+h*e,t},n.rotateZ=function(t,n,r){var a=Math.sin(r),e=Math.cos(r),u=n[0],o=n[1],i=n[2],s=n[3],c=n[4],f=n[5],M=n[6],h=n[7];n!==t&&(t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t[0]=u*e+c*a,t[1]=o*e+f*a,t[2]=i*e+M*a,t[3]=s*e+h*a,t[4]=c*e-u*a,t[5]=f*e-o*a,t[6]=M*e-i*a,t[7]=h*e-s*a,t},n.fromTranslation=function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=n[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromRotation=function(t,n,r){var e=r[0],u=r[1],o=r[2],i=Math.sqrt(e*e+u*u+o*o),s=void 0,c=void 0,f=void 0;if(i<a.EPSILON)return null;return e*=i=1/i,u*=i,o*=i,s=Math.sin(n),c=Math.cos(n),f=1-c,t[0]=e*e*f+c,t[1]=u*e*f+o*s,t[2]=o*e*f-u*s,t[3]=0,t[4]=e*u*f-o*s,t[5]=u*u*f+c,t[6]=o*u*f+e*s,t[7]=0,t[8]=e*o*f+u*s,t[9]=u*o*f-e*s,t[10]=o*o*f+c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromXRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=r,t[7]=0,t[8]=0,t[9]=-r,t[10]=a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromYRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=0,t[2]=-r,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=r,t[9]=0,t[10]=a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromZRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=0,t[3]=0,t[4]=-r,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromRotationTranslation=o,n.fromQuat2=function(t,n){var r=new a.ARRAY_TYPE(3),e=-n[0],u=-n[1],i=-n[2],s=n[3],c=n[4],f=n[5],M=n[6],h=n[7],l=e*e+u*u+i*i+s*s;l>0?(r[0]=2*(c*s+h*e+f*i-M*u)/l,r[1]=2*(f*s+h*u+M*e-c*i)/l,r[2]=2*(M*s+h*i+c*u-f*e)/l):(r[0]=2*(c*s+h*e+f*i-M*u),r[1]=2*(f*s+h*u+M*e-c*i),r[2]=2*(M*s+h*i+c*u-f*e));return o(t,n,r),t},n.getTranslation=function(t,n){return t[0]=n[12],t[1]=n[13],t[2]=n[14],t},n.getScaling=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[4],o=n[5],i=n[6],s=n[8],c=n[9],f=n[10];return t[0]=Math.sqrt(r*r+a*a+e*e),t[1]=Math.sqrt(u*u+o*o+i*i),t[2]=Math.sqrt(s*s+c*c+f*f),t},n.getRotation=function(t,n){var r=n[0]+n[5]+n[10],a=0;r>0?(a=2*Math.sqrt(r+1),t[3]=.25*a,t[0]=(n[6]-n[9])/a,t[1]=(n[8]-n[2])/a,t[2]=(n[1]-n[4])/a):n[0]>n[5]&&n[0]>n[10]?(a=2*Math.sqrt(1+n[0]-n[5]-n[10]),t[3]=(n[6]-n[9])/a,t[0]=.25*a,t[1]=(n[1]+n[4])/a,t[2]=(n[8]+n[2])/a):n[5]>n[10]?(a=2*Math.sqrt(1+n[5]-n[0]-n[10]),t[3]=(n[8]-n[2])/a,t[0]=(n[1]+n[4])/a,t[1]=.25*a,t[2]=(n[6]+n[9])/a):(a=2*Math.sqrt(1+n[10]-n[0]-n[5]),t[3]=(n[1]-n[4])/a,t[0]=(n[8]+n[2])/a,t[1]=(n[6]+n[9])/a,t[2]=.25*a);return t},n.fromRotationTranslationScale=function(t,n,r,a){var e=n[0],u=n[1],o=n[2],i=n[3],s=e+e,c=u+u,f=o+o,M=e*s,h=e*c,l=e*f,v=u*c,d=u*f,b=o*f,m=i*s,p=i*c,P=i*f,A=a[0],E=a[1],O=a[2];return t[0]=(1-(v+b))*A,t[1]=(h+P)*A,t[2]=(l-p)*A,t[3]=0,t[4]=(h-P)*E,t[5]=(1-(M+b))*E,t[6]=(d+m)*E,t[7]=0,t[8]=(l+p)*O,t[9]=(d-m)*O,t[10]=(1-(M+v))*O,t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t},n.fromRotationTranslationScaleOrigin=function(t,n,r,a,e){var u=n[0],o=n[1],i=n[2],s=n[3],c=u+u,f=o+o,M=i+i,h=u*c,l=u*f,v=u*M,d=o*f,b=o*M,m=i*M,p=s*c,P=s*f,A=s*M,E=a[0],O=a[1],R=a[2],y=e[0],q=e[1],x=e[2],_=(1-(d+m))*E,Y=(l+A)*E,L=(v-P)*E,S=(l-A)*O,w=(1-(h+m))*O,I=(b+p)*O,N=(v+P)*R,g=(b-p)*R,T=(1-(h+d))*R;return t[0]=_,t[1]=Y,t[2]=L,t[3]=0,t[4]=S,t[5]=w,t[6]=I,t[7]=0,t[8]=N,t[9]=g,t[10]=T,t[11]=0,t[12]=r[0]+y-(_*y+S*q+N*x),t[13]=r[1]+q-(Y*y+w*q+g*x),t[14]=r[2]+x-(L*y+I*q+T*x),t[15]=1,t},n.fromQuat=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r+r,i=a+a,s=e+e,c=r*o,f=a*o,M=a*i,h=e*o,l=e*i,v=e*s,d=u*o,b=u*i,m=u*s;return t[0]=1-M-v,t[1]=f+m,t[2]=h-b,t[3]=0,t[4]=f-m,t[5]=1-c-v,t[6]=l+d,t[7]=0,t[8]=h+b,t[9]=l-d,t[10]=1-c-M,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.frustum=function(t,n,r,a,e,u,o){var i=1/(r-n),s=1/(e-a),c=1/(u-o);return t[0]=2*u*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*u*s,t[6]=0,t[7]=0,t[8]=(r+n)*i,t[9]=(e+a)*s,t[10]=(o+u)*c,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*u*2*c,t[15]=0,t},n.perspective=function(t,n,r,a,e){var u=1/Math.tan(n/2),o=void 0;t[0]=u/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=e&&e!==1/0?(o=1/(a-e),t[10]=(e+a)*o,t[14]=2*e*a*o):(t[10]=-1,t[14]=-2*a);return t},n.perspectiveFromFieldOfView=function(t,n,r,a){var e=Math.tan(n.upDegrees*Math.PI/180),u=Math.tan(n.downDegrees*Math.PI/180),o=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),s=2/(o+i),c=2/(e+u);return t[0]=s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=c,t[6]=0,t[7]=0,t[8]=-(o-i)*s*.5,t[9]=(e-u)*c*.5,t[10]=a/(r-a),t[11]=-1,t[12]=0,t[13]=0,t[14]=a*r/(r-a),t[15]=0,t},n.ortho=function(t,n,r,a,e,u,o){var i=1/(n-r),s=1/(a-e),c=1/(u-o);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*s,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*c,t[11]=0,t[12]=(n+r)*i,t[13]=(e+a)*s,t[14]=(o+u)*c,t[15]=1,t},n.lookAt=function(t,n,r,u){var o=void 0,i=void 0,s=void 0,c=void 0,f=void 0,M=void 0,h=void 0,l=void 0,v=void 0,d=void 0,b=n[0],m=n[1],p=n[2],P=u[0],A=u[1],E=u[2],O=r[0],R=r[1],y=r[2];if(Math.abs(b-O)<a.EPSILON&&Math.abs(m-R)<a.EPSILON&&Math.abs(p-y)<a.EPSILON)return e(t);h=b-O,l=m-R,v=p-y,d=1/Math.sqrt(h*h+l*l+v*v),o=A*(v*=d)-E*(l*=d),i=E*(h*=d)-P*v,s=P*l-A*h,(d=Math.sqrt(o*o+i*i+s*s))?(o*=d=1/d,i*=d,s*=d):(o=0,i=0,s=0);c=l*s-v*i,f=v*o-h*s,M=h*i-l*o,(d=Math.sqrt(c*c+f*f+M*M))?(c*=d=1/d,f*=d,M*=d):(c=0,f=0,M=0);return t[0]=o,t[1]=c,t[2]=h,t[3]=0,t[4]=i,t[5]=f,t[6]=l,t[7]=0,t[8]=s,t[9]=M,t[10]=v,t[11]=0,t[12]=-(o*b+i*m+s*p),t[13]=-(c*b+f*m+M*p),t[14]=-(h*b+l*m+v*p),t[15]=1,t},n.targetTo=function(t,n,r,a){var e=n[0],u=n[1],o=n[2],i=a[0],s=a[1],c=a[2],f=e-r[0],M=u-r[1],h=o-r[2],l=f*f+M*M+h*h;l>0&&(l=1/Math.sqrt(l),f*=l,M*=l,h*=l);var v=s*h-c*M,d=c*f-i*h,b=i*M-s*f;(l=v*v+d*d+b*b)>0&&(l=1/Math.sqrt(l),v*=l,d*=l,b*=l);return t[0]=v,t[1]=d,t[2]=b,t[3]=0,t[4]=M*b-h*d,t[5]=h*v-f*b,t[6]=f*d-M*v,t[7]=0,t[8]=f,t[9]=M,t[10]=h,t[11]=0,t[12]=e,t[13]=u,t[14]=o,t[15]=1,t},n.str=function(t){return\"mat4(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\", \"+t[8]+\", \"+t[9]+\", \"+t[10]+\", \"+t[11]+\", \"+t[12]+\", \"+t[13]+\", \"+t[14]+\", \"+t[15]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t[6]=n[6]+r[6],t[7]=n[7]+r[7],t[8]=n[8]+r[8],t[9]=n[9]+r[9],t[10]=n[10]+r[10],t[11]=n[11]+r[11],t[12]=n[12]+r[12],t[13]=n[13]+r[13],t[14]=n[14]+r[14],t[15]=n[15]+r[15],t},n.subtract=i,n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=n[7]*r,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=n[11]*r,t[12]=n[12]*r,t[13]=n[13]*r,t[14]=n[14]*r,t[15]=n[15]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t[4]=n[4]+r[4]*a,t[5]=n[5]+r[5]*a,t[6]=n[6]+r[6]*a,t[7]=n[7]+r[7]*a,t[8]=n[8]+r[8]*a,t[9]=n[9]+r[9]*a,t[10]=n[10]+r[10]*a,t[11]=n[11]+r[11]*a,t[12]=n[12]+r[12]*a,t[13]=n[13]+r[13]*a,t[14]=n[14]+r[14]*a,t[15]=n[15]+r[15]*a,t},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=t[6],f=t[7],M=t[8],h=t[9],l=t[10],v=t[11],d=t[12],b=t[13],m=t[14],p=t[15],P=n[0],A=n[1],E=n[2],O=n[3],R=n[4],y=n[5],q=n[6],x=n[7],_=n[8],Y=n[9],L=n[10],S=n[11],w=n[12],I=n[13],N=n[14],g=n[15];return Math.abs(r-P)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(P))&&Math.abs(e-A)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(A))&&Math.abs(u-E)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(E))&&Math.abs(o-O)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(O))&&Math.abs(i-R)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(R))&&Math.abs(s-y)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(y))&&Math.abs(c-q)<=a.EPSILON*Math.max(1,Math.abs(c),Math.abs(q))&&Math.abs(f-x)<=a.EPSILON*Math.max(1,Math.abs(f),Math.abs(x))&&Math.abs(M-_)<=a.EPSILON*Math.max(1,Math.abs(M),Math.abs(_))&&Math.abs(h-Y)<=a.EPSILON*Math.max(1,Math.abs(h),Math.abs(Y))&&Math.abs(l-L)<=a.EPSILON*Math.max(1,Math.abs(l),Math.abs(L))&&Math.abs(v-S)<=a.EPSILON*Math.max(1,Math.abs(v),Math.abs(S))&&Math.abs(d-w)<=a.EPSILON*Math.max(1,Math.abs(d),Math.abs(w))&&Math.abs(b-I)<=a.EPSILON*Math.max(1,Math.abs(b),Math.abs(I))&&Math.abs(m-N)<=a.EPSILON*Math.max(1,Math.abs(m),Math.abs(N))&&Math.abs(p-g)<=a.EPSILON*Math.max(1,Math.abs(p),Math.abs(g))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function u(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=n[9],l=n[10],v=n[11],d=n[12],b=n[13],m=n[14],p=n[15],P=r[0],A=r[1],E=r[2],O=r[3];return t[0]=P*a+A*i+E*M+O*d,t[1]=P*e+A*s+E*h+O*b,t[2]=P*u+A*c+E*l+O*m,t[3]=P*o+A*f+E*v+O*p,P=r[4],A=r[5],E=r[6],O=r[7],t[4]=P*a+A*i+E*M+O*d,t[5]=P*e+A*s+E*h+O*b,t[6]=P*u+A*c+E*l+O*m,t[7]=P*o+A*f+E*v+O*p,P=r[8],A=r[9],E=r[10],O=r[11],t[8]=P*a+A*i+E*M+O*d,t[9]=P*e+A*s+E*h+O*b,t[10]=P*u+A*c+E*l+O*m,t[11]=P*o+A*f+E*v+O*p,P=r[12],A=r[13],E=r[14],O=r[15],t[12]=P*a+A*i+E*M+O*d,t[13]=P*e+A*s+E*h+O*b,t[14]=P*u+A*c+E*l+O*m,t[15]=P*o+A*f+E*v+O*p,t}function o(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=a+a,s=e+e,c=u+u,f=a*i,M=a*s,h=a*c,l=e*s,v=e*c,d=u*c,b=o*i,m=o*s,p=o*c;return t[0]=1-(l+d),t[1]=M+p,t[2]=h-m,t[3]=0,t[4]=M-p,t[5]=1-(f+d),t[6]=v+b,t[7]=0,t[8]=h+m,t[9]=v-b,t[10]=1-(f+l),t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t}function i(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t[4]=n[4]-r[4],t[5]=n[5]-r[5],t[6]=n[6]-r[6],t[7]=n[7]-r[7],t[8]=n[8]-r[8],t[9]=n[9]-r[9],t[10]=n[10]-r[10],t[11]=n[11]-r[11],t[12]=n[12]-r[12],t[13]=n[13]-r[13],t[14]=n[14]-r[14],t[15]=n[15]-r[15],t}n.mul=u,n.sub=i},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(9);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0);return t[0]=1,t[4]=1,t[8]=1,t},n.fromMat4=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[4],t[4]=n[5],t[5]=n[6],t[6]=n[8],t[7]=n[9],t[8]=n[10],t},n.clone=function(t){var n=new a.ARRAY_TYPE(9);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},n.fromValues=function(t,n,r,e,u,o,i,s,c){var f=new a.ARRAY_TYPE(9);return f[0]=t,f[1]=n,f[2]=r,f[3]=e,f[4]=u,f[5]=o,f[6]=i,f[7]=s,f[8]=c,f},n.set=function(t,n,r,a,e,u,o,i,s,c){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t[6]=i,t[7]=s,t[8]=c,t},n.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},n.transpose=function(t,n){if(t===n){var r=n[1],a=n[2],e=n[5];t[1]=n[3],t[2]=n[6],t[3]=r,t[5]=n[7],t[6]=a,t[7]=e}else t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8];return t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=f*o-i*c,h=-f*u+i*s,l=c*u-o*s,v=r*M+a*h+e*l;if(!v)return null;return v=1/v,t[0]=M*v,t[1]=(-f*a+e*c)*v,t[2]=(i*a-e*o)*v,t[3]=h*v,t[4]=(f*r-e*s)*v,t[5]=(-i*r+e*u)*v,t[6]=l*v,t[7]=(-c*r+a*s)*v,t[8]=(o*r-a*u)*v,t},n.adjoint=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8];return t[0]=o*f-i*c,t[1]=e*c-a*f,t[2]=a*i-e*o,t[3]=i*s-u*f,t[4]=r*f-e*s,t[5]=e*u-r*i,t[6]=u*c-o*s,t[7]=a*s-r*c,t[8]=r*o-a*u,t},n.determinant=function(t){var n=t[0],r=t[1],a=t[2],e=t[3],u=t[4],o=t[5],i=t[6],s=t[7],c=t[8];return n*(c*u-o*s)+r*(-c*e+o*i)+a*(s*e-u*i)},n.multiply=e,n.translate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=r[0],l=r[1];return t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=i,t[5]=s,t[6]=h*a+l*o+c,t[7]=h*e+l*i+f,t[8]=h*u+l*s+M,t},n.rotate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=Math.sin(r),l=Math.cos(r);return t[0]=l*a+h*o,t[1]=l*e+h*i,t[2]=l*u+h*s,t[3]=l*o-h*a,t[4]=l*i-h*e,t[5]=l*s-h*u,t[6]=c,t[7]=f,t[8]=M,t},n.scale=function(t,n,r){var a=r[0],e=r[1];return t[0]=a*n[0],t[1]=a*n[1],t[2]=a*n[2],t[3]=e*n[3],t[4]=e*n[4],t[5]=e*n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},n.fromTranslation=function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=n[0],t[7]=n[1],t[8]=1,t},n.fromRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=0,t[3]=-r,t[4]=a,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=n[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},n.fromMat2d=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=0,t[3]=n[2],t[4]=n[3],t[5]=0,t[6]=n[4],t[7]=n[5],t[8]=1,t},n.fromQuat=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r+r,i=a+a,s=e+e,c=r*o,f=a*o,M=a*i,h=e*o,l=e*i,v=e*s,d=u*o,b=u*i,m=u*s;return t[0]=1-M-v,t[3]=f-m,t[6]=h+b,t[1]=f+m,t[4]=1-c-v,t[7]=l-d,t[2]=h-b,t[5]=l+d,t[8]=1-c-M,t},n.normalFromMat4=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=n[9],h=n[10],l=n[11],v=n[12],d=n[13],b=n[14],m=n[15],p=r*i-a*o,P=r*s-e*o,A=r*c-u*o,E=a*s-e*i,O=a*c-u*i,R=e*c-u*s,y=f*d-M*v,q=f*b-h*v,x=f*m-l*v,_=M*b-h*d,Y=M*m-l*d,L=h*m-l*b,S=p*L-P*Y+A*_+E*x-O*q+R*y;if(!S)return null;return S=1/S,t[0]=(i*L-s*Y+c*_)*S,t[1]=(s*x-o*L-c*q)*S,t[2]=(o*Y-i*x+c*y)*S,t[3]=(e*Y-a*L-u*_)*S,t[4]=(r*L-e*x+u*q)*S,t[5]=(a*x-r*Y-u*y)*S,t[6]=(d*R-b*O+m*E)*S,t[7]=(b*A-v*R-m*P)*S,t[8]=(v*O-d*A+m*p)*S,t},n.projection=function(t,n,r){return t[0]=2/n,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/r,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t},n.str=function(t){return\"mat3(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\", \"+t[8]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t[6]=n[6]+r[6],t[7]=n[7]+r[7],t[8]=n[8]+r[8],t},n.subtract=u,n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=n[7]*r,t[8]=n[8]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t[4]=n[4]+r[4]*a,t[5]=n[5]+r[5]*a,t[6]=n[6]+r[6]*a,t[7]=n[7]+r[7]*a,t[8]=n[8]+r[8]*a,t},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=t[6],f=t[7],M=t[8],h=n[0],l=n[1],v=n[2],d=n[3],b=n[4],m=n[5],p=n[6],P=n[7],A=n[8];return Math.abs(r-h)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(e-l)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(u-v)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(v))&&Math.abs(o-d)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(d))&&Math.abs(i-b)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(s-m)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(m))&&Math.abs(c-p)<=a.EPSILON*Math.max(1,Math.abs(c),Math.abs(p))&&Math.abs(f-P)<=a.EPSILON*Math.max(1,Math.abs(f),Math.abs(P))&&Math.abs(M-A)<=a.EPSILON*Math.max(1,Math.abs(M),Math.abs(A))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=r[0],l=r[1],v=r[2],d=r[3],b=r[4],m=r[5],p=r[6],P=r[7],A=r[8];return t[0]=h*a+l*o+v*c,t[1]=h*e+l*i+v*f,t[2]=h*u+l*s+v*M,t[3]=d*a+b*o+m*c,t[4]=d*e+b*i+m*f,t[5]=d*u+b*s+m*M,t[6]=p*a+P*o+A*c,t[7]=p*e+P*i+A*f,t[8]=p*u+P*s+A*M,t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t[4]=n[4]-r[4],t[5]=n[5]-r[5],t[6]=n[6]-r[6],t[7]=n[7]-r[7],t[8]=n[8]-r[8],t}n.mul=e,n.sub=u},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.forEach=n.sqrLen=n.sqrDist=n.dist=n.div=n.mul=n.sub=n.len=void 0,n.create=e,n.clone=function(t){var n=new a.ARRAY_TYPE(2);return n[0]=t[0],n[1]=t[1],n},n.fromValues=function(t,n){var r=new a.ARRAY_TYPE(2);return r[0]=t,r[1]=n,r},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t},n.set=function(t,n,r){return t[0]=n,t[1]=r,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t},n.subtract=u,n.multiply=o,n.divide=i,n.ceil=function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},n.floor=function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},n.min=function(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t},n.max=function(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t},n.round=function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t},n.scaleAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t},n.distance=s,n.squaredDistance=c,n.length=f,n.squaredLength=M,n.negate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t},n.inverse=function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},n.normalize=function(t,n){var r=n[0],a=n[1],e=r*r+a*a;e>0&&(e=1/Math.sqrt(e),t[0]=n[0]*e,t[1]=n[1]*e);return t},n.dot=function(t,n){return t[0]*n[0]+t[1]*n[1]},n.cross=function(t,n,r){var a=n[0]*r[1]-n[1]*r[0];return t[0]=t[1]=0,t[2]=a,t},n.lerp=function(t,n,r,a){var e=n[0],u=n[1];return t[0]=e+a*(r[0]-e),t[1]=u+a*(r[1]-u),t},n.random=function(t,n){n=n||1;var r=2*a.RANDOM()*Math.PI;return t[0]=Math.cos(r)*n,t[1]=Math.sin(r)*n,t},n.transformMat2=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[2]*e,t[1]=r[1]*a+r[3]*e,t},n.transformMat2d=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[2]*e+r[4],t[1]=r[1]*a+r[3]*e+r[5],t},n.transformMat3=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[3]*e+r[6],t[1]=r[1]*a+r[4]*e+r[7],t},n.transformMat4=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[4]*e+r[12],t[1]=r[1]*a+r[5]*e+r[13],t},n.rotate=function(t,n,r,a){var e=n[0]-r[0],u=n[1]-r[1],o=Math.sin(a),i=Math.cos(a);return t[0]=e*i-u*o+r[0],t[1]=e*o+u*i+r[1],t},n.angle=function(t,n){var r=t[0],a=t[1],e=n[0],u=n[1],o=r*r+a*a;o>0&&(o=1/Math.sqrt(o));var i=e*e+u*u;i>0&&(i=1/Math.sqrt(i));var s=(r*e+a*u)*o*i;return s>1?0:s<-1?Math.PI:Math.acos(s)},n.str=function(t){return\"vec2(\"+t[0]+\", \"+t[1]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]},n.equals=function(t,n){var r=t[0],e=t[1],u=n[0],o=n[1];return Math.abs(r-u)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(u))&&Math.abs(e-o)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(o))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(){var t=new a.ARRAY_TYPE(2);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0),t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t}function o(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t}function i(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t}function s(t,n){var r=n[0]-t[0],a=n[1]-t[1];return Math.sqrt(r*r+a*a)}function c(t,n){var r=n[0]-t[0],a=n[1]-t[1];return r*r+a*a}function f(t){var n=t[0],r=t[1];return Math.sqrt(n*n+r*r)}function M(t){var n=t[0],r=t[1];return n*n+r*r}n.len=f,n.sub=u,n.mul=o,n.div=i,n.dist=s,n.sqrDist=c,n.sqrLen=M,n.forEach=function(){var t=e();return function(n,r,a,e,u,o){var i=void 0,s=void 0;for(r||(r=2),a||(a=0),s=e?Math.min(e*r+a,n.length):n.length,i=a;i<s;i+=r)t[0]=n[i],t[1]=n[i+1],u(t,t,o),n[i]=t[0],n[i+1]=t[1];return n}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sqrLen=n.squaredLength=n.len=n.length=n.dot=n.mul=n.setReal=n.getReal=void 0,n.create=function(){var t=new a.ARRAY_TYPE(8);a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0);return t[3]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(8);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n},n.fromValues=function(t,n,r,e,u,o,i,s){var c=new a.ARRAY_TYPE(8);return c[0]=t,c[1]=n,c[2]=r,c[3]=e,c[4]=u,c[5]=o,c[6]=i,c[7]=s,c},n.fromRotationTranslationValues=function(t,n,r,e,u,o,i){var s=new a.ARRAY_TYPE(8);s[0]=t,s[1]=n,s[2]=r,s[3]=e;var c=.5*u,f=.5*o,M=.5*i;return s[4]=c*e+f*r-M*n,s[5]=f*e+M*t-c*r,s[6]=M*e+c*n-f*t,s[7]=-c*t-f*n-M*r,s},n.fromRotationTranslation=i,n.fromTranslation=function(t,n){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*n[0],t[5]=.5*n[1],t[6]=.5*n[2],t[7]=0,t},n.fromRotation=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},n.fromMat4=function(t,n){var r=e.create();u.getRotation(r,n);var o=new a.ARRAY_TYPE(3);return u.getTranslation(o,n),i(t,r,o),t},n.copy=s,n.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},n.set=function(t,n,r,a,e,u,o,i,s){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t[6]=i,t[7]=s,t},n.getDual=function(t,n){return t[0]=n[4],t[1]=n[5],t[2]=n[6],t[3]=n[7],t},n.setDual=function(t,n){return t[4]=n[0],t[5]=n[1],t[6]=n[2],t[7]=n[3],t},n.getTranslation=function(t,n){var r=n[4],a=n[5],e=n[6],u=n[7],o=-n[0],i=-n[1],s=-n[2],c=n[3];return t[0]=2*(r*c+u*o+a*s-e*i),t[1]=2*(a*c+u*i+e*o-r*s),t[2]=2*(e*c+u*s+r*i-a*o),t},n.translate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=.5*r[0],s=.5*r[1],c=.5*r[2],f=n[4],M=n[5],h=n[6],l=n[7];return t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=o*i+e*c-u*s+f,t[5]=o*s+u*i-a*c+M,t[6]=o*c+a*s-e*i+h,t[7]=-a*i-e*s-u*c+l,t},n.rotateX=function(t,n,r){var a=-n[0],u=-n[1],o=-n[2],i=n[3],s=n[4],c=n[5],f=n[6],M=n[7],h=s*i+M*a+c*o-f*u,l=c*i+M*u+f*a-s*o,v=f*i+M*o+s*u-c*a,d=M*i-s*a-c*u-f*o;return e.rotateX(t,n,r),a=t[0],u=t[1],o=t[2],i=t[3],t[4]=h*i+d*a+l*o-v*u,t[5]=l*i+d*u+v*a-h*o,t[6]=v*i+d*o+h*u-l*a,t[7]=d*i-h*a-l*u-v*o,t},n.rotateY=function(t,n,r){var a=-n[0],u=-n[1],o=-n[2],i=n[3],s=n[4],c=n[5],f=n[6],M=n[7],h=s*i+M*a+c*o-f*u,l=c*i+M*u+f*a-s*o,v=f*i+M*o+s*u-c*a,d=M*i-s*a-c*u-f*o;return e.rotateY(t,n,r),a=t[0],u=t[1],o=t[2],i=t[3],t[4]=h*i+d*a+l*o-v*u,t[5]=l*i+d*u+v*a-h*o,t[6]=v*i+d*o+h*u-l*a,t[7]=d*i-h*a-l*u-v*o,t},n.rotateZ=function(t,n,r){var a=-n[0],u=-n[1],o=-n[2],i=n[3],s=n[4],c=n[5],f=n[6],M=n[7],h=s*i+M*a+c*o-f*u,l=c*i+M*u+f*a-s*o,v=f*i+M*o+s*u-c*a,d=M*i-s*a-c*u-f*o;return e.rotateZ(t,n,r),a=t[0],u=t[1],o=t[2],i=t[3],t[4]=h*i+d*a+l*o-v*u,t[5]=l*i+d*u+v*a-h*o,t[6]=v*i+d*o+h*u-l*a,t[7]=d*i-h*a-l*u-v*o,t},n.rotateByQuatAppend=function(t,n,r){var a=r[0],e=r[1],u=r[2],o=r[3],i=n[0],s=n[1],c=n[2],f=n[3];return t[0]=i*o+f*a+s*u-c*e,t[1]=s*o+f*e+c*a-i*u,t[2]=c*o+f*u+i*e-s*a,t[3]=f*o-i*a-s*e-c*u,i=n[4],s=n[5],c=n[6],f=n[7],t[4]=i*o+f*a+s*u-c*e,t[5]=s*o+f*e+c*a-i*u,t[6]=c*o+f*u+i*e-s*a,t[7]=f*o-i*a-s*e-c*u,t},n.rotateByQuatPrepend=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1],c=r[2],f=r[3];return t[0]=a*f+o*i+e*c-u*s,t[1]=e*f+o*s+u*i-a*c,t[2]=u*f+o*c+a*s-e*i,t[3]=o*f-a*i-e*s-u*c,i=r[4],s=r[5],c=r[6],f=r[7],t[4]=a*f+o*i+e*c-u*s,t[5]=e*f+o*s+u*i-a*c,t[6]=u*f+o*c+a*s-e*i,t[7]=o*f-a*i-e*s-u*c,t},n.rotateAroundAxis=function(t,n,r,e){if(Math.abs(e)<a.EPSILON)return s(t,n);var u=Math.sqrt(r[0]*r[0]+r[1]*r[1]+r[2]*r[2]);e*=.5;var o=Math.sin(e),i=o*r[0]/u,c=o*r[1]/u,f=o*r[2]/u,M=Math.cos(e),h=n[0],l=n[1],v=n[2],d=n[3];t[0]=h*M+d*i+l*f-v*c,t[1]=l*M+d*c+v*i-h*f,t[2]=v*M+d*f+h*c-l*i,t[3]=d*M-h*i-l*c-v*f;var b=n[4],m=n[5],p=n[6],P=n[7];return t[4]=b*M+P*i+m*f-p*c,t[5]=m*M+P*c+p*i-b*f,t[6]=p*M+P*f+b*c-m*i,t[7]=P*M-b*i-m*c-p*f,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t[6]=n[6]+r[6],t[7]=n[7]+r[7],t},n.multiply=c,n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=n[7]*r,t},n.lerp=function(t,n,r,a){var e=1-a;f(n,r)<0&&(a=-a);return t[0]=n[0]*e+r[0]*a,t[1]=n[1]*e+r[1]*a,t[2]=n[2]*e+r[2]*a,t[3]=n[3]*e+r[3]*a,t[4]=n[4]*e+r[4]*a,t[5]=n[5]*e+r[5]*a,t[6]=n[6]*e+r[6]*a,t[7]=n[7]*e+r[7]*a,t},n.invert=function(t,n){var r=h(n);return t[0]=-n[0]/r,t[1]=-n[1]/r,t[2]=-n[2]/r,t[3]=n[3]/r,t[4]=-n[4]/r,t[5]=-n[5]/r,t[6]=-n[6]/r,t[7]=n[7]/r,t},n.conjugate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t[4]=-n[4],t[5]=-n[5],t[6]=-n[6],t[7]=n[7],t},n.normalize=function(t,n){var r=h(n);if(r>0){r=Math.sqrt(r);var a=n[0]/r,e=n[1]/r,u=n[2]/r,o=n[3]/r,i=n[4],s=n[5],c=n[6],f=n[7],M=a*i+e*s+u*c+o*f;t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=(i-a*M)/r,t[5]=(s-e*M)/r,t[6]=(c-u*M)/r,t[7]=(f-o*M)/r}return t},n.str=function(t){return\"quat2(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=t[6],f=t[7],M=n[0],h=n[1],l=n[2],v=n[3],d=n[4],b=n[5],m=n[6],p=n[7];return Math.abs(r-M)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(M))&&Math.abs(e-h)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(u-l)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(o-v)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(i-d)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(d))&&Math.abs(s-b)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(b))&&Math.abs(c-m)<=a.EPSILON*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(f-p)<=a.EPSILON*Math.max(1,Math.abs(f),Math.abs(p))};var a=o(r(0)),e=o(r(3)),u=o(r(4));function o(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}function i(t,n,r){var a=.5*r[0],e=.5*r[1],u=.5*r[2],o=n[0],i=n[1],s=n[2],c=n[3];return t[0]=o,t[1]=i,t[2]=s,t[3]=c,t[4]=a*c+e*s-u*i,t[5]=e*c+u*o-a*s,t[6]=u*c+a*i-e*o,t[7]=-a*o-e*i-u*s,t}function s(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t}n.getReal=e.copy;n.setReal=e.copy;function c(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[4],s=r[5],c=r[6],f=r[7],M=n[4],h=n[5],l=n[6],v=n[7],d=r[0],b=r[1],m=r[2],p=r[3];return t[0]=a*p+o*d+e*m-u*b,t[1]=e*p+o*b+u*d-a*m,t[2]=u*p+o*m+a*b-e*d,t[3]=o*p-a*d-e*b-u*m,t[4]=a*f+o*i+e*c-u*s+M*p+v*d+h*m-l*b,t[5]=e*f+o*s+u*i-a*c+h*p+v*b+l*d-M*m,t[6]=u*f+o*c+a*s-e*i+l*p+v*m+M*b-h*d,t[7]=o*f-a*i-e*s-u*c+v*p-M*d-h*b-l*m,t}n.mul=c;var f=n.dot=e.dot;var M=n.length=e.length,h=(n.len=M,n.squaredLength=e.squaredLength);n.sqrLen=h},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(6);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0);return t[0]=1,t[3]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(6);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t},n.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},n.fromValues=function(t,n,r,e,u,o){var i=new a.ARRAY_TYPE(6);return i[0]=t,i[1]=n,i[2]=r,i[3]=e,i[4]=u,i[5]=o,i},n.set=function(t,n,r,a,e,u,o){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=r*u-a*e;if(!s)return null;return s=1/s,t[0]=u*s,t[1]=-a*s,t[2]=-e*s,t[3]=r*s,t[4]=(e*i-u*o)*s,t[5]=(a*o-r*i)*s,t},n.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},n.multiply=e,n.rotate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=Math.sin(r),f=Math.cos(r);return t[0]=a*f+u*c,t[1]=e*f+o*c,t[2]=a*-c+u*f,t[3]=e*-c+o*f,t[4]=i,t[5]=s,t},n.scale=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=r[0],f=r[1];return t[0]=a*c,t[1]=e*c,t[2]=u*f,t[3]=o*f,t[4]=i,t[5]=s,t},n.translate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=r[0],f=r[1];return t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=a*c+u*f+i,t[5]=e*c+o*f+s,t},n.fromRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=-r,t[3]=a,t[4]=0,t[5]=0,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t[4]=0,t[5]=0,t},n.fromTranslation=function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=n[0],t[5]=n[1],t},n.str=function(t){return\"mat2d(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t},n.subtract=u,n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t[4]=n[4]+r[4]*a,t[5]=n[5]+r[5]*a,t},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=n[0],f=n[1],M=n[2],h=n[3],l=n[4],v=n[5];return Math.abs(r-c)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(c))&&Math.abs(e-f)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(f))&&Math.abs(u-M)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(M))&&Math.abs(o-h)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(h))&&Math.abs(i-l)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(s-v)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(v))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=r[0],f=r[1],M=r[2],h=r[3],l=r[4],v=r[5];return t[0]=a*c+u*f,t[1]=e*c+o*f,t[2]=a*M+u*h,t[3]=e*M+o*h,t[4]=a*l+u*v+i,t[5]=e*l+o*v+s,t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t[4]=n[4]-r[4],t[5]=n[5]-r[5],t}n.mul=e,n.sub=u},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(4);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0);return t[0]=1,t[3]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},n.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},n.fromValues=function(t,n,r,e){var u=new a.ARRAY_TYPE(4);return u[0]=t,u[1]=n,u[2]=r,u[3]=e,u},n.set=function(t,n,r,a,e){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t},n.transpose=function(t,n){if(t===n){var r=n[1];t[1]=n[2],t[2]=r}else t[0]=n[0],t[1]=n[2],t[2]=n[1],t[3]=n[3];return t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r*u-e*a;if(!o)return null;return o=1/o,t[0]=u*o,t[1]=-a*o,t[2]=-e*o,t[3]=r*o,t},n.adjoint=function(t,n){var r=n[0];return t[0]=n[3],t[1]=-n[1],t[2]=-n[2],t[3]=r,t},n.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},n.multiply=e,n.rotate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s+u*i,t[1]=e*s+o*i,t[2]=a*-i+u*s,t[3]=e*-i+o*s,t},n.scale=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1];return t[0]=a*i,t[1]=e*i,t[2]=u*s,t[3]=o*s,t},n.fromRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=-r,t[3]=a,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t},n.str=function(t){return\"mat2(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},n.LDU=function(t,n,r,a){return t[2]=a[2]/a[0],r[0]=a[0],r[1]=a[1],r[3]=a[3]-t[2]*r[1],[t,n,r]},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t},n.subtract=u,n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=n[0],s=n[1],c=n[2],f=n[3];return Math.abs(r-i)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(e-s)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(s))&&Math.abs(u-c)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(o-f)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(f))},n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1],c=r[2],f=r[3];return t[0]=a*i+u*s,t[1]=e*i+o*s,t[2]=a*c+u*f,t[3]=e*c+o*f,t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t}n.mul=e,n.sub=u},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.vec4=n.vec3=n.vec2=n.quat2=n.quat=n.mat4=n.mat3=n.mat2d=n.mat2=n.glMatrix=void 0;var a=l(r(0)),e=l(r(9)),u=l(r(8)),o=l(r(5)),i=l(r(4)),s=l(r(3)),c=l(r(7)),f=l(r(6)),M=l(r(2)),h=l(r(1));function l(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}n.glMatrix=a,n.mat2=e,n.mat2d=u,n.mat3=o,n.mat4=i,n.quat=s,n.quat2=c,n.vec2=f,n.vec3=M,n.vec4=h}])});\n\n/***/ }),\n/* 53 */,\n/* 54 */,\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tvar createUniformWrapper   = __webpack_require__(56)\n\tvar createAttributeWrapper = __webpack_require__(59)\n\tvar makeReflect            = __webpack_require__(57)\n\tvar shaderCache            = __webpack_require__(60)\n\tvar runtime                = __webpack_require__(81)\n\tvar GLError                = __webpack_require__(58)\n\t\n\t//Shader object\n\tfunction Shader(gl) {\n\t  this.gl         = gl\n\t  this.gl.lastAttribCount = 0  // fixme where else should we store info, safe but not nice on the gl object\n\t\n\t  //Default initialize these to null\n\t  this._vref      =\n\t  this._fref      =\n\t  this._relink    =\n\t  this.vertShader =\n\t  this.fragShader =\n\t  this.program    =\n\t  this.attributes =\n\t  this.uniforms   =\n\t  this.types      = null\n\t}\n\t\n\tvar proto = Shader.prototype\n\t\n\tproto.bind = function() {\n\t  if(!this.program) {\n\t    this._relink()\n\t  }\n\t\n\t  // ensuring that we have the right number of enabled vertex attributes\n\t  var i\n\t  var newAttribCount = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES) // more robust approach\n\t  //var newAttribCount = Object.keys(this.attributes).length // avoids the probably immaterial introspection slowdown\n\t  var oldAttribCount = this.gl.lastAttribCount\n\t  if(newAttribCount > oldAttribCount) {\n\t    for(i = oldAttribCount; i < newAttribCount; i++) {\n\t      this.gl.enableVertexAttribArray(i)\n\t    }\n\t  } else if(oldAttribCount > newAttribCount) {\n\t    for(i = newAttribCount; i < oldAttribCount; i++) {\n\t      this.gl.disableVertexAttribArray(i)\n\t    }\n\t  }\n\t\n\t  this.gl.lastAttribCount = newAttribCount\n\t\n\t  this.gl.useProgram(this.program)\n\t}\n\t\n\tproto.dispose = function() {\n\t\n\t  // disabling vertex attributes so new shader starts with zero\n\t  // and it's also useful if all shaders are disposed but the\n\t  // gl context is reused for subsequent replotting\n\t  var oldAttribCount = this.gl.lastAttribCount\n\t  for (var i = 0; i < oldAttribCount; i++) {\n\t    this.gl.disableVertexAttribArray(i)\n\t  }\n\t  this.gl.lastAttribCount = 0\n\t\n\t  if(this._fref) {\n\t    this._fref.dispose()\n\t  }\n\t  if(this._vref) {\n\t    this._vref.dispose()\n\t  }\n\t  this.attributes =\n\t  this.types      =\n\t  this.vertShader =\n\t  this.fragShader =\n\t  this.program    =\n\t  this._relink    =\n\t  this._fref      =\n\t  this._vref      = null\n\t}\n\t\n\tfunction compareAttributes(a, b) {\n\t  if(a.name < b.name) {\n\t    return -1\n\t  }\n\t  return 1\n\t}\n\t\n\t//Update export hook for glslify-live\n\tproto.update = function(\n\t    vertSource\n\t  , fragSource\n\t  , uniforms\n\t  , attributes) {\n\t\n\t  //If only one object passed, assume glslify style output\n\t  if(!fragSource || arguments.length === 1) {\n\t    var obj = vertSource\n\t    vertSource = obj.vertex\n\t    fragSource = obj.fragment\n\t    uniforms   = obj.uniforms\n\t    attributes = obj.attributes\n\t  }\n\t\n\t  var wrapper = this\n\t  var gl      = wrapper.gl\n\t\n\t  //Compile vertex and fragment shaders\n\t  var pvref = wrapper._vref\n\t  wrapper._vref = shaderCache.shader(gl, gl.VERTEX_SHADER, vertSource)\n\t  if(pvref) {\n\t    pvref.dispose()\n\t  }\n\t  wrapper.vertShader = wrapper._vref.shader\n\t  var pfref = this._fref\n\t  wrapper._fref = shaderCache.shader(gl, gl.FRAGMENT_SHADER, fragSource)\n\t  if(pfref) {\n\t    pfref.dispose()\n\t  }\n\t  wrapper.fragShader = wrapper._fref.shader\n\t\n\t  //If uniforms/attributes is not specified, use RT reflection\n\t  if(!uniforms || !attributes) {\n\t\n\t    //Create initial test program\n\t    var testProgram = gl.createProgram()\n\t    gl.attachShader(testProgram, wrapper.fragShader)\n\t    gl.attachShader(testProgram, wrapper.vertShader)\n\t    gl.linkProgram(testProgram)\n\t    if(!gl.getProgramParameter(testProgram, gl.LINK_STATUS)) {\n\t      var errLog = gl.getProgramInfoLog(testProgram)\n\t      throw new GLError(errLog, 'Error linking program:' + errLog)\n\t    }\n\t\n\t    //Load data from runtime\n\t    uniforms   = uniforms   || runtime.uniforms(gl, testProgram)\n\t    attributes = attributes || runtime.attributes(gl, testProgram)\n\t\n\t    //Release test program\n\t    gl.deleteProgram(testProgram)\n\t  }\n\t\n\t  //Sort attributes lexicographically\n\t  // overrides undefined WebGL behavior for attribute locations\n\t  attributes = attributes.slice()\n\t  attributes.sort(compareAttributes)\n\t\n\t  //Convert attribute types, read out locations\n\t  var attributeUnpacked  = []\n\t  var attributeNames     = []\n\t  var attributeLocations = []\n\t  var i\n\t  for(i=0; i<attributes.length; ++i) {\n\t    var attr = attributes[i]\n\t    if(attr.type.indexOf('mat') >= 0) {\n\t      var size = attr.type.charAt(attr.type.length-1)|0\n\t      var locVector = new Array(size)\n\t      for(var j=0; j<size; ++j) {\n\t        locVector[j] = attributeLocations.length\n\t        attributeNames.push(attr.name + '[' + j + ']')\n\t        if(typeof attr.location === 'number') {\n\t          attributeLocations.push(attr.location + j)\n\t        } else if(Array.isArray(attr.location) &&\n\t                  attr.location.length === size &&\n\t                  typeof attr.location[j] === 'number') {\n\t          attributeLocations.push(attr.location[j]|0)\n\t        } else {\n\t          attributeLocations.push(-1)\n\t        }\n\t      }\n\t      attributeUnpacked.push({\n\t        name: attr.name,\n\t        type: attr.type,\n\t        locations: locVector\n\t      })\n\t    } else {\n\t      attributeUnpacked.push({\n\t        name: attr.name,\n\t        type: attr.type,\n\t        locations: [ attributeLocations.length ]\n\t      })\n\t      attributeNames.push(attr.name)\n\t      if(typeof attr.location === 'number') {\n\t        attributeLocations.push(attr.location|0)\n\t      } else {\n\t        attributeLocations.push(-1)\n\t      }\n\t    }\n\t  }\n\t\n\t  //For all unspecified attributes, assign them lexicographically min attribute\n\t  var curLocation = 0\n\t  for(i=0; i<attributeLocations.length; ++i) {\n\t    if(attributeLocations[i] < 0) {\n\t      while(attributeLocations.indexOf(curLocation) >= 0) {\n\t        curLocation += 1\n\t      }\n\t      attributeLocations[i] = curLocation\n\t    }\n\t  }\n\t\n\t  //Rebuild program and recompute all uniform locations\n\t  var uniformLocations = new Array(uniforms.length)\n\t  function relink() {\n\t    wrapper.program = shaderCache.program(\n\t        gl\n\t      , wrapper._vref\n\t      , wrapper._fref\n\t      , attributeNames\n\t      , attributeLocations)\n\t\n\t    for(var i=0; i<uniforms.length; ++i) {\n\t      uniformLocations[i] = gl.getUniformLocation(\n\t          wrapper.program\n\t        , uniforms[i].name)\n\t    }\n\t  }\n\t\n\t  //Perform initial linking, reuse program used for reflection\n\t  relink()\n\t\n\t  //Save relinking procedure, defer until runtime\n\t  wrapper._relink = relink\n\t\n\t  //Generate type info\n\t  wrapper.types = {\n\t    uniforms:   makeReflect(uniforms),\n\t    attributes: makeReflect(attributes)\n\t  }\n\t\n\t  //Generate attribute wrappers\n\t  wrapper.attributes = createAttributeWrapper(\n\t      gl\n\t    , wrapper\n\t    , attributeUnpacked\n\t    , attributeLocations)\n\t\n\t  //Generate uniform wrappers\n\t  Object.defineProperty(wrapper, 'uniforms', createUniformWrapper(\n\t      gl\n\t    , wrapper\n\t    , uniforms\n\t    , uniformLocations))\n\t}\n\t\n\t//Compiles and links a shader program with the given attribute and vertex list\n\tfunction createShader(\n\t    gl\n\t  , vertSource\n\t  , fragSource\n\t  , uniforms\n\t  , attributes) {\n\t\n\t  var shader = new Shader(gl)\n\t\n\t  shader.update(\n\t      vertSource\n\t    , fragSource\n\t    , uniforms\n\t    , attributes)\n\t\n\t  return shader\n\t}\n\t\n\tmodule.exports = createShader\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tvar coallesceUniforms = __webpack_require__(57)\n\tvar GLError = __webpack_require__(58)\n\t\n\tmodule.exports = createUniformWrapper\n\t\n\t//Binds a function and returns a value\n\tfunction identity(x) {\n\t  var c = new Function('y', 'return function(){return y}')\n\t  return c(x)\n\t}\n\t\n\tfunction makeVector(length, fill) {\n\t  var result = new Array(length)\n\t  for(var i=0; i<length; ++i) {\n\t    result[i] = fill\n\t  }\n\t  return result\n\t}\n\t\n\t//Create shims for uniforms\n\tfunction createUniformWrapper(gl, wrapper, uniforms, locations) {\n\t\n\t  function makeGetter(index) {\n\t    var proc = new Function(\n\t        'gl'\n\t      , 'wrapper'\n\t      , 'locations'\n\t      , 'return function(){return gl.getUniform(wrapper.program,locations[' + index + '])}')\n\t    return proc(gl, wrapper, locations)\n\t  }\n\t\n\t  function makePropSetter(path, index, type) {\n\t    switch(type) {\n\t      case 'bool':\n\t      case 'int':\n\t      case 'sampler2D':\n\t      case 'samplerCube':\n\t        return 'gl.uniform1i(locations[' + index + '],obj' + path + ')'\n\t      case 'float':\n\t        return 'gl.uniform1f(locations[' + index + '],obj' + path + ')'\n\t      default:\n\t        var vidx = type.indexOf('vec')\n\t        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n\t          var d = type.charCodeAt(type.length-1) - 48\n\t          if(d < 2 || d > 4) {\n\t            throw new GLError('', 'Invalid data type')\n\t          }\n\t          switch(type.charAt(0)) {\n\t            case 'b':\n\t            case 'i':\n\t              return 'gl.uniform' + d + 'iv(locations[' + index + '],obj' + path + ')'\n\t            case 'v':\n\t              return 'gl.uniform' + d + 'fv(locations[' + index + '],obj' + path + ')'\n\t            default:\n\t              throw new GLError('', 'Unrecognized data type for vector ' + name + ': ' + type)\n\t          }\n\t        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n\t          var d = type.charCodeAt(type.length-1) - 48\n\t          if(d < 2 || d > 4) {\n\t            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n\t          }\n\t          return 'gl.uniformMatrix' + d + 'fv(locations[' + index + '],false,obj' + path + ')'\n\t        } else {\n\t          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n\t        }\n\t      break\n\t    }\n\t  }\n\t\n\t  function enumerateIndices(prefix, type) {\n\t    if(typeof type !== 'object') {\n\t      return [ [prefix, type] ]\n\t    }\n\t    var indices = []\n\t    for(var id in type) {\n\t      var prop = type[id]\n\t      var tprefix = prefix\n\t      if(parseInt(id) + '' === id) {\n\t        tprefix += '[' + id + ']'\n\t      } else {\n\t        tprefix += '.' + id\n\t      }\n\t      if(typeof prop === 'object') {\n\t        indices.push.apply(indices, enumerateIndices(tprefix, prop))\n\t      } else {\n\t        indices.push([tprefix, prop])\n\t      }\n\t    }\n\t    return indices\n\t  }\n\t\n\t  function makeSetter(type) {\n\t    var code = [ 'return function updateProperty(obj){' ]\n\t    var indices = enumerateIndices('', type)\n\t    for(var i=0; i<indices.length; ++i) {\n\t      var item = indices[i]\n\t      var path = item[0]\n\t      var idx  = item[1]\n\t      if(locations[idx]) {\n\t        code.push(makePropSetter(path, idx, uniforms[idx].type))\n\t      }\n\t    }\n\t    code.push('return obj}')\n\t    var proc = new Function('gl', 'locations', code.join('\\n'))\n\t    return proc(gl, locations)\n\t  }\n\t\n\t  function defaultValue(type) {\n\t    switch(type) {\n\t      case 'bool':\n\t        return false\n\t      case 'int':\n\t      case 'sampler2D':\n\t      case 'samplerCube':\n\t        return 0\n\t      case 'float':\n\t        return 0.0\n\t      default:\n\t        var vidx = type.indexOf('vec')\n\t        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n\t          var d = type.charCodeAt(type.length-1) - 48\n\t          if(d < 2 || d > 4) {\n\t            throw new GLError('', 'Invalid data type')\n\t          }\n\t          if(type.charAt(0) === 'b') {\n\t            return makeVector(d, false)\n\t          }\n\t          return makeVector(d, 0)\n\t        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n\t          var d = type.charCodeAt(type.length-1) - 48\n\t          if(d < 2 || d > 4) {\n\t            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n\t          }\n\t          return makeVector(d*d, 0)\n\t        } else {\n\t          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n\t        }\n\t      break\n\t    }\n\t  }\n\t\n\t  function storeProperty(obj, prop, type) {\n\t    if(typeof type === 'object') {\n\t      var child = processObject(type)\n\t      Object.defineProperty(obj, prop, {\n\t        get: identity(child),\n\t        set: makeSetter(type),\n\t        enumerable: true,\n\t        configurable: false\n\t      })\n\t    } else {\n\t      if(locations[type]) {\n\t        Object.defineProperty(obj, prop, {\n\t          get: makeGetter(type),\n\t          set: makeSetter(type),\n\t          enumerable: true,\n\t          configurable: false\n\t        })\n\t      } else {\n\t        obj[prop] = defaultValue(uniforms[type].type)\n\t      }\n\t    }\n\t  }\n\t\n\t  function processObject(obj) {\n\t    var result\n\t    if(Array.isArray(obj)) {\n\t      result = new Array(obj.length)\n\t      for(var i=0; i<obj.length; ++i) {\n\t        storeProperty(result, i, obj[i])\n\t      }\n\t    } else {\n\t      result = {}\n\t      for(var id in obj) {\n\t        storeProperty(result, id, obj[id])\n\t      }\n\t    }\n\t    return result\n\t  }\n\t\n\t  //Return data\n\t  var coallesced = coallesceUniforms(uniforms, true)\n\t  return {\n\t    get: identity(processObject(coallesced)),\n\t    set: makeSetter(coallesced),\n\t    enumerable: true,\n\t    configurable: true\n\t  }\n\t}\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\tmodule.exports = makeReflectTypes\n\t\n\t//Construct type info for reflection.\n\t//\n\t// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n\t//\n\t// The leaves of the resulting object are either indices or type strings representing primitive glslify types\n\tfunction makeReflectTypes(uniforms, useIndex) {\n\t  var obj = {}\n\t  for(var i=0; i<uniforms.length; ++i) {\n\t    var n = uniforms[i].name\n\t    var parts = n.split(\".\")\n\t    var o = obj\n\t    for(var j=0; j<parts.length; ++j) {\n\t      var x = parts[j].split(\"[\")\n\t      if(x.length > 1) {\n\t        if(!(x[0] in o)) {\n\t          o[x[0]] = []\n\t        }\n\t        o = o[x[0]]\n\t        for(var k=1; k<x.length; ++k) {\n\t          var y = parseInt(x[k])\n\t          if(k<x.length-1 || j<parts.length-1) {\n\t            if(!(y in o)) {\n\t              if(k < x.length-1) {\n\t                o[y] = []\n\t              } else {\n\t                o[y] = {}\n\t              }\n\t            }\n\t            o = o[y]\n\t          } else {\n\t            if(useIndex) {\n\t              o[y] = i\n\t            } else {\n\t              o[y] = uniforms[i].type\n\t            }\n\t          }\n\t        }\n\t      } else if(j < parts.length-1) {\n\t        if(!(x[0] in o)) {\n\t          o[x[0]] = {}\n\t        }\n\t        o = o[x[0]]\n\t      } else {\n\t        if(useIndex) {\n\t          o[x[0]] = i\n\t        } else {\n\t          o[x[0]] = uniforms[i].type\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return obj\n\t}\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n\tfunction GLError (rawError, shortMessage, longMessage) {\n\t    this.shortMessage = shortMessage || ''\n\t    this.longMessage = longMessage || ''\n\t    this.rawError = rawError || ''\n\t    this.message =\n\t      'gl-shader: ' + (shortMessage || rawError || '') +\n\t      (longMessage ? '\\n'+longMessage : '')\n\t    this.stack = (new Error()).stack\n\t}\n\tGLError.prototype = new Error\n\tGLError.prototype.name = 'GLError'\n\tGLError.prototype.constructor = GLError\n\tmodule.exports = GLError\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tmodule.exports = createAttributeWrapper\n\t\n\tvar GLError = __webpack_require__(58)\n\t\n\tfunction ShaderAttribute(\n\t    gl\n\t  , wrapper\n\t  , index\n\t  , locations\n\t  , dimension\n\t  , constFunc) {\n\t  this._gl        = gl\n\t  this._wrapper   = wrapper\n\t  this._index     = index\n\t  this._locations = locations\n\t  this._dimension = dimension\n\t  this._constFunc = constFunc\n\t}\n\t\n\tvar proto = ShaderAttribute.prototype\n\t\n\tproto.pointer = function setAttribPointer(\n\t    type\n\t  , normalized\n\t  , stride\n\t  , offset) {\n\t\n\t  var self      = this\n\t  var gl        = self._gl\n\t  var location  = self._locations[self._index]\n\t\n\t  gl.vertexAttribPointer(\n\t      location\n\t    , self._dimension\n\t    , type || gl.FLOAT\n\t    , !!normalized\n\t    , stride || 0\n\t    , offset || 0)\n\t  gl.enableVertexAttribArray(location)\n\t}\n\t\n\tproto.set = function(x0, x1, x2, x3) {\n\t  return this._constFunc(this._locations[this._index], x0, x1, x2, x3)\n\t}\n\t\n\tObject.defineProperty(proto, 'location', {\n\t  get: function() {\n\t    return this._locations[this._index]\n\t  }\n\t  , set: function(v) {\n\t    if(v !== this._locations[this._index]) {\n\t      this._locations[this._index] = v|0\n\t      this._wrapper.program = null\n\t    }\n\t    return v|0\n\t  }\n\t})\n\t\n\t//Adds a vector attribute to obj\n\tfunction addVectorAttribute(\n\t    gl\n\t  , wrapper\n\t  , index\n\t  , locations\n\t  , dimension\n\t  , obj\n\t  , name) {\n\t\n\t  //Construct constant function\n\t  var constFuncArgs = [ 'gl', 'v' ]\n\t  var varNames = []\n\t  for(var i=0; i<dimension; ++i) {\n\t    constFuncArgs.push('x'+i)\n\t    varNames.push('x'+i)\n\t  }\n\t  constFuncArgs.push(\n\t    'if(x0.length===void 0){return gl.vertexAttrib' +\n\t    dimension + 'f(v,' +\n\t    varNames.join() +\n\t    ')}else{return gl.vertexAttrib' +\n\t    dimension +\n\t    'fv(v,x0)}')\n\t  var constFunc = Function.apply(null, constFuncArgs)\n\t\n\t  //Create attribute wrapper\n\t  var attr = new ShaderAttribute(\n\t      gl\n\t    , wrapper\n\t    , index\n\t    , locations\n\t    , dimension\n\t    , constFunc)\n\t\n\t  //Create accessor\n\t  Object.defineProperty(obj, name, {\n\t    set: function(x) {\n\t      gl.disableVertexAttribArray(locations[index])\n\t      constFunc(gl, locations[index], x)\n\t      return x\n\t    }\n\t    , get: function() {\n\t      return attr\n\t    }\n\t    , enumerable: true\n\t  })\n\t}\n\t\n\tfunction addMatrixAttribute(\n\t    gl\n\t  , wrapper\n\t  , index\n\t  , locations\n\t  , dimension\n\t  , obj\n\t  , name) {\n\t\n\t  var parts = new Array(dimension)\n\t  var attrs = new Array(dimension)\n\t  for(var i=0; i<dimension; ++i) {\n\t    addVectorAttribute(\n\t        gl\n\t      , wrapper\n\t      , index[i]\n\t      , locations\n\t      , dimension\n\t      , parts\n\t      , i)\n\t    attrs[i] = parts[i]\n\t  }\n\t\n\t  Object.defineProperty(parts, 'location', {\n\t    set: function(v) {\n\t      if(Array.isArray(v)) {\n\t        for(var i=0; i<dimension; ++i) {\n\t          attrs[i].location = v[i]\n\t        }\n\t      } else {\n\t        for(var i=0; i<dimension; ++i) {\n\t          attrs[i].location = v + i\n\t        }\n\t      }\n\t      return v\n\t    }\n\t    , get: function() {\n\t      var result = new Array(dimension)\n\t      for(var i=0; i<dimension; ++i) {\n\t        result[i] = locations[index[i]]\n\t      }\n\t      return result\n\t    }\n\t    , enumerable: true\n\t  })\n\t\n\t  parts.pointer = function(type, normalized, stride, offset) {\n\t    type       = type || gl.FLOAT\n\t    normalized = !!normalized\n\t    stride     = stride || (dimension * dimension)\n\t    offset     = offset || 0\n\t    for(var i=0; i<dimension; ++i) {\n\t      var location = locations[index[i]]\n\t      gl.vertexAttribPointer(\n\t            location\n\t          , dimension\n\t          , type\n\t          , normalized\n\t          , stride\n\t          , offset + i * dimension)\n\t      gl.enableVertexAttribArray(location)\n\t    }\n\t  }\n\t\n\t  var scratch = new Array(dimension)\n\t  var vertexAttrib = gl['vertexAttrib' + dimension + 'fv']\n\t\n\t  Object.defineProperty(obj, name, {\n\t    set: function(x) {\n\t      for(var i=0; i<dimension; ++i) {\n\t        var loc = locations[index[i]]\n\t        gl.disableVertexAttribArray(loc)\n\t        if(Array.isArray(x[0])) {\n\t          vertexAttrib.call(gl, loc, x[i])\n\t        } else {\n\t          for(var j=0; j<dimension; ++j) {\n\t            scratch[j] = x[dimension*i + j]\n\t          }\n\t          vertexAttrib.call(gl, loc, scratch)\n\t        }\n\t      }\n\t      return x\n\t    }\n\t    , get: function() {\n\t      return parts\n\t    }\n\t    , enumerable: true\n\t  })\n\t}\n\t\n\t//Create shims for attributes\n\tfunction createAttributeWrapper(\n\t    gl\n\t  , wrapper\n\t  , attributes\n\t  , locations) {\n\t\n\t  var obj = {}\n\t  for(var i=0, n=attributes.length; i<n; ++i) {\n\t\n\t    var a = attributes[i]\n\t    var name = a.name\n\t    var type = a.type\n\t    var locs = a.locations\n\t\n\t    switch(type) {\n\t      case 'bool':\n\t      case 'int':\n\t      case 'float':\n\t        addVectorAttribute(\n\t            gl\n\t          , wrapper\n\t          , locs[0]\n\t          , locations\n\t          , 1\n\t          , obj\n\t          , name)\n\t      break\n\t\n\t      default:\n\t        if(type.indexOf('vec') >= 0) {\n\t          var d = type.charCodeAt(type.length-1) - 48\n\t          if(d < 2 || d > 4) {\n\t            throw new GLError('', 'Invalid data type for attribute ' + name + ': ' + type)\n\t          }\n\t          addVectorAttribute(\n\t              gl\n\t            , wrapper\n\t            , locs[0]\n\t            , locations\n\t            , d\n\t            , obj\n\t            , name)\n\t        } else if(type.indexOf('mat') >= 0) {\n\t          var d = type.charCodeAt(type.length-1) - 48\n\t          if(d < 2 || d > 4) {\n\t            throw new GLError('', 'Invalid data type for attribute ' + name + ': ' + type)\n\t          }\n\t          addMatrixAttribute(\n\t              gl\n\t            , wrapper\n\t            , locs\n\t            , locations\n\t            , d\n\t            , obj\n\t            , name)\n\t        } else {\n\t          throw new GLError('', 'Unknown data type for attribute ' + name + ': ' + type)\n\t        }\n\t      break\n\t    }\n\t  }\n\t  return obj\n\t}\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\texports.shader   = getShaderReference\n\texports.program  = createProgram\n\t\n\tvar GLError = __webpack_require__(58)\n\tvar formatCompilerError = __webpack_require__(61);\n\t\n\tvar weakMap = typeof WeakMap === 'undefined' ? __webpack_require__(78) : WeakMap\n\tvar CACHE = new weakMap()\n\t\n\tvar SHADER_COUNTER = 0\n\t\n\tfunction ShaderReference(id, src, type, shader, programs, count, cache) {\n\t  this.id       = id\n\t  this.src      = src\n\t  this.type     = type\n\t  this.shader   = shader\n\t  this.count    = count\n\t  this.programs = []\n\t  this.cache    = cache\n\t}\n\t\n\tShaderReference.prototype.dispose = function() {\n\t  if(--this.count === 0) {\n\t    var cache    = this.cache\n\t    var gl       = cache.gl\n\t\n\t    //Remove program references\n\t    var programs = this.programs\n\t    for(var i=0, n=programs.length; i<n; ++i) {\n\t      var p = cache.programs[programs[i]]\n\t      if(p) {\n\t        delete cache.programs[i]\n\t        gl.deleteProgram(p)\n\t      }\n\t    }\n\t\n\t    //Remove shader reference\n\t    gl.deleteShader(this.shader)\n\t    delete cache.shaders[(this.type === gl.FRAGMENT_SHADER)|0][this.src]\n\t  }\n\t}\n\t\n\tfunction ContextCache(gl) {\n\t  this.gl       = gl\n\t  this.shaders  = [{}, {}]\n\t  this.programs = {}\n\t}\n\t\n\tvar proto = ContextCache.prototype\n\t\n\tfunction compileShader(gl, type, src) {\n\t  var shader = gl.createShader(type)\n\t  gl.shaderSource(shader, src)\n\t  gl.compileShader(shader)\n\t  if(!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t    var errLog = gl.getShaderInfoLog(shader)\n\t    try {\n\t        var fmt = formatCompilerError(errLog, src, type);\n\t    } catch (e){\n\t        console.warn('Failed to format compiler error: ' + e);\n\t        throw new GLError(errLog, 'Error compiling shader:\\n' + errLog)\n\t    }\n\t    throw new GLError(errLog, fmt.short, fmt.long)\n\t  }\n\t  return shader\n\t}\n\t\n\tproto.getShaderReference = function(type, src) {\n\t  var gl      = this.gl\n\t  var shaders = this.shaders[(type === gl.FRAGMENT_SHADER)|0]\n\t  var shader  = shaders[src]\n\t  if(!shader || !gl.isShader(shader.shader)) {\n\t    var shaderObj = compileShader(gl, type, src)\n\t    shader = shaders[src] = new ShaderReference(\n\t      SHADER_COUNTER++,\n\t      src,\n\t      type,\n\t      shaderObj,\n\t      [],\n\t      1,\n\t      this)\n\t  } else {\n\t    shader.count += 1\n\t  }\n\t  return shader\n\t}\n\t\n\tfunction linkProgram(gl, vshader, fshader, attribs, locations) {\n\t  var program = gl.createProgram()\n\t  gl.attachShader(program, vshader)\n\t  gl.attachShader(program, fshader)\n\t  for(var i=0; i<attribs.length; ++i) {\n\t    gl.bindAttribLocation(program, locations[i], attribs[i])\n\t  }\n\t  gl.linkProgram(program)\n\t  if(!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t    var errLog = gl.getProgramInfoLog(program)\n\t    throw new GLError(errLog, 'Error linking program: ' + errLog)\n\t  }\n\t  return program\n\t}\n\t\n\tproto.getProgram = function(vref, fref, attribs, locations) {\n\t  var token = [vref.id, fref.id, attribs.join(':'), locations.join(':')].join('@')\n\t  var prog  = this.programs[token]\n\t  if(!prog || !this.gl.isProgram(prog)) {\n\t    this.programs[token] = prog = linkProgram(\n\t      this.gl,\n\t      vref.shader,\n\t      fref.shader,\n\t      attribs,\n\t      locations)\n\t    vref.programs.push(token)\n\t    fref.programs.push(token)\n\t  }\n\t  return prog\n\t}\n\t\n\tfunction getCache(gl) {\n\t  var ctxCache = CACHE.get(gl)\n\t  if(!ctxCache) {\n\t    ctxCache = new ContextCache(gl)\n\t    CACHE.set(gl, ctxCache)\n\t  }\n\t  return ctxCache\n\t}\n\t\n\tfunction getShaderReference(gl, type, src) {\n\t  return getCache(gl).getShaderReference(type, src)\n\t}\n\t\n\tfunction createProgram(gl, vref, fref, attribs, locations) {\n\t  return getCache(gl).getProgram(vref, fref, attribs, locations)\n\t}\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\tvar sprintf = __webpack_require__(62).sprintf;\n\tvar glConstants = __webpack_require__(64);\n\tvar shaderName = __webpack_require__(66);\n\tvar addLineNumbers = __webpack_require__(75);\n\t\n\tmodule.exports = formatCompilerError;\n\t\n\tfunction formatCompilerError(errLog, src, type) {\n\t    \"use strict\";\n\t\n\t    var name = shaderName(src) || 'of unknown name (see npm glsl-shader-name)';\n\t\n\t    var typeName = 'unknown type';\n\t    if (type !== undefined) {\n\t        typeName = type === glConstants.FRAGMENT_SHADER ? 'fragment' : 'vertex'\n\t    }\n\t\n\t    var longForm = sprintf('Error compiling %s shader %s:\\n', typeName, name);\n\t    var shortForm = sprintf(\"%s%s\", longForm, errLog);\n\t\n\t    var errorStrings = errLog.split('\\n');\n\t    var errors = {};\n\t\n\t    for (var i = 0; i < errorStrings.length; i++) {\n\t        var errorString = errorStrings[i];\n\t        if (errorString === '' || errorString === \"\\0\") continue;\n\t        var lineNo = parseInt(errorString.split(':')[2]);\n\t        if (isNaN(lineNo)) {\n\t            throw new Error(sprintf('Could not parse error: %s', errorString));\n\t        }\n\t        errors[lineNo] = errorString;\n\t    }\n\t\n\t    var lines = addLineNumbers(src).split('\\n');\n\t\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (!errors[i+3] && !errors[i+2] && !errors[i+1]) continue;\n\t        var line = lines[i];\n\t        longForm += line + '\\n';\n\t        if (errors[i+1]) {\n\t            var e = errors[i+1];\n\t            e = e.substr(e.split(':', 3).join(':').length + 1).trim();\n\t            longForm += sprintf('^^^ %s\\n\\n', e);\n\t        }\n\t    }\n\t\n\t    return {\n\t        long: longForm.trim(),\n\t        short: shortForm.trim()\n\t    };\n\t}\n\t\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global window, exports, define */\n\t\n\t!function() {\n\t    'use strict'\n\t\n\t    var re = {\n\t        not_string: /[^s]/,\n\t        not_bool: /[^t]/,\n\t        not_type: /[^T]/,\n\t        not_primitive: /[^v]/,\n\t        number: /[diefg]/,\n\t        numeric_arg: /[bcdiefguxX]/,\n\t        json: /[j]/,\n\t        not_json: /[^j]/,\n\t        text: /^[^\\x25]+/,\n\t        modulo: /^\\x25{2}/,\n\t        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n\t        key: /^([a-z_][a-z_\\d]*)/i,\n\t        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n\t        index_access: /^\\[(\\d+)\\]/,\n\t        sign: /^[+-]/\n\t    }\n\t\n\t    function sprintf(key) {\n\t        // `arguments` is not an array, but should be fine for this call\n\t        return sprintf_format(sprintf_parse(key), arguments)\n\t    }\n\t\n\t    function vsprintf(fmt, argv) {\n\t        return sprintf.apply(null, [fmt].concat(argv || []))\n\t    }\n\t\n\t    function sprintf_format(parse_tree, argv) {\n\t        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n\t        for (i = 0; i < tree_length; i++) {\n\t            if (typeof parse_tree[i] === 'string') {\n\t                output += parse_tree[i]\n\t            }\n\t            else if (typeof parse_tree[i] === 'object') {\n\t                ph = parse_tree[i] // convenience purposes only\n\t                if (ph.keys) { // keyword argument\n\t                    arg = argv[cursor]\n\t                    for (k = 0; k < ph.keys.length; k++) {\n\t                        if (arg == undefined) {\n\t                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n\t                        }\n\t                        arg = arg[ph.keys[k]]\n\t                    }\n\t                }\n\t                else if (ph.param_no) { // positional argument (explicit)\n\t                    arg = argv[ph.param_no]\n\t                }\n\t                else { // positional argument (implicit)\n\t                    arg = argv[cursor++]\n\t                }\n\t\n\t                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n\t                    arg = arg()\n\t                }\n\t\n\t                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n\t                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n\t                }\n\t\n\t                if (re.number.test(ph.type)) {\n\t                    is_positive = arg >= 0\n\t                }\n\t\n\t                switch (ph.type) {\n\t                    case 'b':\n\t                        arg = parseInt(arg, 10).toString(2)\n\t                        break\n\t                    case 'c':\n\t                        arg = String.fromCharCode(parseInt(arg, 10))\n\t                        break\n\t                    case 'd':\n\t                    case 'i':\n\t                        arg = parseInt(arg, 10)\n\t                        break\n\t                    case 'j':\n\t                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n\t                        break\n\t                    case 'e':\n\t                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n\t                        break\n\t                    case 'f':\n\t                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n\t                        break\n\t                    case 'g':\n\t                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n\t                        break\n\t                    case 'o':\n\t                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n\t                        break\n\t                    case 's':\n\t                        arg = String(arg)\n\t                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t                        break\n\t                    case 't':\n\t                        arg = String(!!arg)\n\t                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t                        break\n\t                    case 'T':\n\t                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n\t                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t                        break\n\t                    case 'u':\n\t                        arg = parseInt(arg, 10) >>> 0\n\t                        break\n\t                    case 'v':\n\t                        arg = arg.valueOf()\n\t                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t                        break\n\t                    case 'x':\n\t                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n\t                        break\n\t                    case 'X':\n\t                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n\t                        break\n\t                }\n\t                if (re.json.test(ph.type)) {\n\t                    output += arg\n\t                }\n\t                else {\n\t                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n\t                        sign = is_positive ? '+' : '-'\n\t                        arg = arg.toString().replace(re.sign, '')\n\t                    }\n\t                    else {\n\t                        sign = ''\n\t                    }\n\t                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n\t                    pad_length = ph.width - (sign + arg).length\n\t                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n\t                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n\t                }\n\t            }\n\t        }\n\t        return output\n\t    }\n\t\n\t    var sprintf_cache = Object.create(null)\n\t\n\t    function sprintf_parse(fmt) {\n\t        if (sprintf_cache[fmt]) {\n\t            return sprintf_cache[fmt]\n\t        }\n\t\n\t        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n\t        while (_fmt) {\n\t            if ((match = re.text.exec(_fmt)) !== null) {\n\t                parse_tree.push(match[0])\n\t            }\n\t            else if ((match = re.modulo.exec(_fmt)) !== null) {\n\t                parse_tree.push('%')\n\t            }\n\t            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n\t                if (match[2]) {\n\t                    arg_names |= 1\n\t                    var field_list = [], replacement_field = match[2], field_match = []\n\t                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n\t                        field_list.push(field_match[1])\n\t                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n\t                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n\t                                field_list.push(field_match[1])\n\t                            }\n\t                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n\t                                field_list.push(field_match[1])\n\t                            }\n\t                            else {\n\t                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n\t                            }\n\t                        }\n\t                    }\n\t                    else {\n\t                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n\t                    }\n\t                    match[2] = field_list\n\t                }\n\t                else {\n\t                    arg_names |= 2\n\t                }\n\t                if (arg_names === 3) {\n\t                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n\t                }\n\t\n\t                parse_tree.push(\n\t                    {\n\t                        placeholder: match[0],\n\t                        param_no:    match[1],\n\t                        keys:        match[2],\n\t                        sign:        match[3],\n\t                        pad_char:    match[4],\n\t                        align:       match[5],\n\t                        width:       match[6],\n\t                        precision:   match[7],\n\t                        type:        match[8]\n\t                    }\n\t                )\n\t            }\n\t            else {\n\t                throw new SyntaxError('[sprintf] unexpected placeholder')\n\t            }\n\t            _fmt = _fmt.substring(match[0].length)\n\t        }\n\t        return sprintf_cache[fmt] = parse_tree\n\t    }\n\t\n\t    /**\n\t     * export to either browser or node.js\n\t     */\n\t    /* eslint-disable quote-props */\n\t    if (true) {\n\t        exports['sprintf'] = sprintf\n\t        exports['vsprintf'] = vsprintf\n\t    }\n\t    if (typeof window !== 'undefined') {\n\t        window['sprintf'] = sprintf\n\t        window['vsprintf'] = vsprintf\n\t\n\t        if (\"function\" === 'function' && __webpack_require__(63)['amd']) {\n\t            !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                return {\n\t                    'sprintf': sprintf,\n\t                    'vsprintf': vsprintf\n\t                }\n\t            }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t        }\n\t    }\n\t    /* eslint-enable quote-props */\n\t}(); // eslint-disable-line\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar gl10 = __webpack_require__(65)\n\t\n\tmodule.exports = function lookupConstant (number) {\n\t  return gl10[number]\n\t}\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t  0: 'NONE',\n\t  1: 'ONE',\n\t  2: 'LINE_LOOP',\n\t  3: 'LINE_STRIP',\n\t  4: 'TRIANGLES',\n\t  5: 'TRIANGLE_STRIP',\n\t  6: 'TRIANGLE_FAN',\n\t  256: 'DEPTH_BUFFER_BIT',\n\t  512: 'NEVER',\n\t  513: 'LESS',\n\t  514: 'EQUAL',\n\t  515: 'LEQUAL',\n\t  516: 'GREATER',\n\t  517: 'NOTEQUAL',\n\t  518: 'GEQUAL',\n\t  519: 'ALWAYS',\n\t  768: 'SRC_COLOR',\n\t  769: 'ONE_MINUS_SRC_COLOR',\n\t  770: 'SRC_ALPHA',\n\t  771: 'ONE_MINUS_SRC_ALPHA',\n\t  772: 'DST_ALPHA',\n\t  773: 'ONE_MINUS_DST_ALPHA',\n\t  774: 'DST_COLOR',\n\t  775: 'ONE_MINUS_DST_COLOR',\n\t  776: 'SRC_ALPHA_SATURATE',\n\t  1024: 'STENCIL_BUFFER_BIT',\n\t  1028: 'FRONT',\n\t  1029: 'BACK',\n\t  1032: 'FRONT_AND_BACK',\n\t  1280: 'INVALID_ENUM',\n\t  1281: 'INVALID_VALUE',\n\t  1282: 'INVALID_OPERATION',\n\t  1285: 'OUT_OF_MEMORY',\n\t  1286: 'INVALID_FRAMEBUFFER_OPERATION',\n\t  2304: 'CW',\n\t  2305: 'CCW',\n\t  2849: 'LINE_WIDTH',\n\t  2884: 'CULL_FACE',\n\t  2885: 'CULL_FACE_MODE',\n\t  2886: 'FRONT_FACE',\n\t  2928: 'DEPTH_RANGE',\n\t  2929: 'DEPTH_TEST',\n\t  2930: 'DEPTH_WRITEMASK',\n\t  2931: 'DEPTH_CLEAR_VALUE',\n\t  2932: 'DEPTH_FUNC',\n\t  2960: 'STENCIL_TEST',\n\t  2961: 'STENCIL_CLEAR_VALUE',\n\t  2962: 'STENCIL_FUNC',\n\t  2963: 'STENCIL_VALUE_MASK',\n\t  2964: 'STENCIL_FAIL',\n\t  2965: 'STENCIL_PASS_DEPTH_FAIL',\n\t  2966: 'STENCIL_PASS_DEPTH_PASS',\n\t  2967: 'STENCIL_REF',\n\t  2968: 'STENCIL_WRITEMASK',\n\t  2978: 'VIEWPORT',\n\t  3024: 'DITHER',\n\t  3042: 'BLEND',\n\t  3088: 'SCISSOR_BOX',\n\t  3089: 'SCISSOR_TEST',\n\t  3106: 'COLOR_CLEAR_VALUE',\n\t  3107: 'COLOR_WRITEMASK',\n\t  3317: 'UNPACK_ALIGNMENT',\n\t  3333: 'PACK_ALIGNMENT',\n\t  3379: 'MAX_TEXTURE_SIZE',\n\t  3386: 'MAX_VIEWPORT_DIMS',\n\t  3408: 'SUBPIXEL_BITS',\n\t  3410: 'RED_BITS',\n\t  3411: 'GREEN_BITS',\n\t  3412: 'BLUE_BITS',\n\t  3413: 'ALPHA_BITS',\n\t  3414: 'DEPTH_BITS',\n\t  3415: 'STENCIL_BITS',\n\t  3553: 'TEXTURE_2D',\n\t  4352: 'DONT_CARE',\n\t  4353: 'FASTEST',\n\t  4354: 'NICEST',\n\t  5120: 'BYTE',\n\t  5121: 'UNSIGNED_BYTE',\n\t  5122: 'SHORT',\n\t  5123: 'UNSIGNED_SHORT',\n\t  5124: 'INT',\n\t  5125: 'UNSIGNED_INT',\n\t  5126: 'FLOAT',\n\t  5386: 'INVERT',\n\t  5890: 'TEXTURE',\n\t  6401: 'STENCIL_INDEX',\n\t  6402: 'DEPTH_COMPONENT',\n\t  6406: 'ALPHA',\n\t  6407: 'RGB',\n\t  6408: 'RGBA',\n\t  6409: 'LUMINANCE',\n\t  6410: 'LUMINANCE_ALPHA',\n\t  7680: 'KEEP',\n\t  7681: 'REPLACE',\n\t  7682: 'INCR',\n\t  7683: 'DECR',\n\t  7936: 'VENDOR',\n\t  7937: 'RENDERER',\n\t  7938: 'VERSION',\n\t  9728: 'NEAREST',\n\t  9729: 'LINEAR',\n\t  9984: 'NEAREST_MIPMAP_NEAREST',\n\t  9985: 'LINEAR_MIPMAP_NEAREST',\n\t  9986: 'NEAREST_MIPMAP_LINEAR',\n\t  9987: 'LINEAR_MIPMAP_LINEAR',\n\t  10240: 'TEXTURE_MAG_FILTER',\n\t  10241: 'TEXTURE_MIN_FILTER',\n\t  10242: 'TEXTURE_WRAP_S',\n\t  10243: 'TEXTURE_WRAP_T',\n\t  10497: 'REPEAT',\n\t  10752: 'POLYGON_OFFSET_UNITS',\n\t  16384: 'COLOR_BUFFER_BIT',\n\t  32769: 'CONSTANT_COLOR',\n\t  32770: 'ONE_MINUS_CONSTANT_COLOR',\n\t  32771: 'CONSTANT_ALPHA',\n\t  32772: 'ONE_MINUS_CONSTANT_ALPHA',\n\t  32773: 'BLEND_COLOR',\n\t  32774: 'FUNC_ADD',\n\t  32777: 'BLEND_EQUATION_RGB',\n\t  32778: 'FUNC_SUBTRACT',\n\t  32779: 'FUNC_REVERSE_SUBTRACT',\n\t  32819: 'UNSIGNED_SHORT_4_4_4_4',\n\t  32820: 'UNSIGNED_SHORT_5_5_5_1',\n\t  32823: 'POLYGON_OFFSET_FILL',\n\t  32824: 'POLYGON_OFFSET_FACTOR',\n\t  32854: 'RGBA4',\n\t  32855: 'RGB5_A1',\n\t  32873: 'TEXTURE_BINDING_2D',\n\t  32926: 'SAMPLE_ALPHA_TO_COVERAGE',\n\t  32928: 'SAMPLE_COVERAGE',\n\t  32936: 'SAMPLE_BUFFERS',\n\t  32937: 'SAMPLES',\n\t  32938: 'SAMPLE_COVERAGE_VALUE',\n\t  32939: 'SAMPLE_COVERAGE_INVERT',\n\t  32968: 'BLEND_DST_RGB',\n\t  32969: 'BLEND_SRC_RGB',\n\t  32970: 'BLEND_DST_ALPHA',\n\t  32971: 'BLEND_SRC_ALPHA',\n\t  33071: 'CLAMP_TO_EDGE',\n\t  33170: 'GENERATE_MIPMAP_HINT',\n\t  33189: 'DEPTH_COMPONENT16',\n\t  33306: 'DEPTH_STENCIL_ATTACHMENT',\n\t  33635: 'UNSIGNED_SHORT_5_6_5',\n\t  33648: 'MIRRORED_REPEAT',\n\t  33901: 'ALIASED_POINT_SIZE_RANGE',\n\t  33902: 'ALIASED_LINE_WIDTH_RANGE',\n\t  33984: 'TEXTURE0',\n\t  33985: 'TEXTURE1',\n\t  33986: 'TEXTURE2',\n\t  33987: 'TEXTURE3',\n\t  33988: 'TEXTURE4',\n\t  33989: 'TEXTURE5',\n\t  33990: 'TEXTURE6',\n\t  33991: 'TEXTURE7',\n\t  33992: 'TEXTURE8',\n\t  33993: 'TEXTURE9',\n\t  33994: 'TEXTURE10',\n\t  33995: 'TEXTURE11',\n\t  33996: 'TEXTURE12',\n\t  33997: 'TEXTURE13',\n\t  33998: 'TEXTURE14',\n\t  33999: 'TEXTURE15',\n\t  34000: 'TEXTURE16',\n\t  34001: 'TEXTURE17',\n\t  34002: 'TEXTURE18',\n\t  34003: 'TEXTURE19',\n\t  34004: 'TEXTURE20',\n\t  34005: 'TEXTURE21',\n\t  34006: 'TEXTURE22',\n\t  34007: 'TEXTURE23',\n\t  34008: 'TEXTURE24',\n\t  34009: 'TEXTURE25',\n\t  34010: 'TEXTURE26',\n\t  34011: 'TEXTURE27',\n\t  34012: 'TEXTURE28',\n\t  34013: 'TEXTURE29',\n\t  34014: 'TEXTURE30',\n\t  34015: 'TEXTURE31',\n\t  34016: 'ACTIVE_TEXTURE',\n\t  34024: 'MAX_RENDERBUFFER_SIZE',\n\t  34041: 'DEPTH_STENCIL',\n\t  34055: 'INCR_WRAP',\n\t  34056: 'DECR_WRAP',\n\t  34067: 'TEXTURE_CUBE_MAP',\n\t  34068: 'TEXTURE_BINDING_CUBE_MAP',\n\t  34069: 'TEXTURE_CUBE_MAP_POSITIVE_X',\n\t  34070: 'TEXTURE_CUBE_MAP_NEGATIVE_X',\n\t  34071: 'TEXTURE_CUBE_MAP_POSITIVE_Y',\n\t  34072: 'TEXTURE_CUBE_MAP_NEGATIVE_Y',\n\t  34073: 'TEXTURE_CUBE_MAP_POSITIVE_Z',\n\t  34074: 'TEXTURE_CUBE_MAP_NEGATIVE_Z',\n\t  34076: 'MAX_CUBE_MAP_TEXTURE_SIZE',\n\t  34338: 'VERTEX_ATTRIB_ARRAY_ENABLED',\n\t  34339: 'VERTEX_ATTRIB_ARRAY_SIZE',\n\t  34340: 'VERTEX_ATTRIB_ARRAY_STRIDE',\n\t  34341: 'VERTEX_ATTRIB_ARRAY_TYPE',\n\t  34342: 'CURRENT_VERTEX_ATTRIB',\n\t  34373: 'VERTEX_ATTRIB_ARRAY_POINTER',\n\t  34466: 'NUM_COMPRESSED_TEXTURE_FORMATS',\n\t  34467: 'COMPRESSED_TEXTURE_FORMATS',\n\t  34660: 'BUFFER_SIZE',\n\t  34661: 'BUFFER_USAGE',\n\t  34816: 'STENCIL_BACK_FUNC',\n\t  34817: 'STENCIL_BACK_FAIL',\n\t  34818: 'STENCIL_BACK_PASS_DEPTH_FAIL',\n\t  34819: 'STENCIL_BACK_PASS_DEPTH_PASS',\n\t  34877: 'BLEND_EQUATION_ALPHA',\n\t  34921: 'MAX_VERTEX_ATTRIBS',\n\t  34922: 'VERTEX_ATTRIB_ARRAY_NORMALIZED',\n\t  34930: 'MAX_TEXTURE_IMAGE_UNITS',\n\t  34962: 'ARRAY_BUFFER',\n\t  34963: 'ELEMENT_ARRAY_BUFFER',\n\t  34964: 'ARRAY_BUFFER_BINDING',\n\t  34965: 'ELEMENT_ARRAY_BUFFER_BINDING',\n\t  34975: 'VERTEX_ATTRIB_ARRAY_BUFFER_BINDING',\n\t  35040: 'STREAM_DRAW',\n\t  35044: 'STATIC_DRAW',\n\t  35048: 'DYNAMIC_DRAW',\n\t  35632: 'FRAGMENT_SHADER',\n\t  35633: 'VERTEX_SHADER',\n\t  35660: 'MAX_VERTEX_TEXTURE_IMAGE_UNITS',\n\t  35661: 'MAX_COMBINED_TEXTURE_IMAGE_UNITS',\n\t  35663: 'SHADER_TYPE',\n\t  35664: 'FLOAT_VEC2',\n\t  35665: 'FLOAT_VEC3',\n\t  35666: 'FLOAT_VEC4',\n\t  35667: 'INT_VEC2',\n\t  35668: 'INT_VEC3',\n\t  35669: 'INT_VEC4',\n\t  35670: 'BOOL',\n\t  35671: 'BOOL_VEC2',\n\t  35672: 'BOOL_VEC3',\n\t  35673: 'BOOL_VEC4',\n\t  35674: 'FLOAT_MAT2',\n\t  35675: 'FLOAT_MAT3',\n\t  35676: 'FLOAT_MAT4',\n\t  35678: 'SAMPLER_2D',\n\t  35680: 'SAMPLER_CUBE',\n\t  35712: 'DELETE_STATUS',\n\t  35713: 'COMPILE_STATUS',\n\t  35714: 'LINK_STATUS',\n\t  35715: 'VALIDATE_STATUS',\n\t  35716: 'INFO_LOG_LENGTH',\n\t  35717: 'ATTACHED_SHADERS',\n\t  35718: 'ACTIVE_UNIFORMS',\n\t  35719: 'ACTIVE_UNIFORM_MAX_LENGTH',\n\t  35720: 'SHADER_SOURCE_LENGTH',\n\t  35721: 'ACTIVE_ATTRIBUTES',\n\t  35722: 'ACTIVE_ATTRIBUTE_MAX_LENGTH',\n\t  35724: 'SHADING_LANGUAGE_VERSION',\n\t  35725: 'CURRENT_PROGRAM',\n\t  36003: 'STENCIL_BACK_REF',\n\t  36004: 'STENCIL_BACK_VALUE_MASK',\n\t  36005: 'STENCIL_BACK_WRITEMASK',\n\t  36006: 'FRAMEBUFFER_BINDING',\n\t  36007: 'RENDERBUFFER_BINDING',\n\t  36048: 'FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE',\n\t  36049: 'FRAMEBUFFER_ATTACHMENT_OBJECT_NAME',\n\t  36050: 'FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL',\n\t  36051: 'FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE',\n\t  36053: 'FRAMEBUFFER_COMPLETE',\n\t  36054: 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT',\n\t  36055: 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT',\n\t  36057: 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS',\n\t  36061: 'FRAMEBUFFER_UNSUPPORTED',\n\t  36064: 'COLOR_ATTACHMENT0',\n\t  36096: 'DEPTH_ATTACHMENT',\n\t  36128: 'STENCIL_ATTACHMENT',\n\t  36160: 'FRAMEBUFFER',\n\t  36161: 'RENDERBUFFER',\n\t  36162: 'RENDERBUFFER_WIDTH',\n\t  36163: 'RENDERBUFFER_HEIGHT',\n\t  36164: 'RENDERBUFFER_INTERNAL_FORMAT',\n\t  36168: 'STENCIL_INDEX8',\n\t  36176: 'RENDERBUFFER_RED_SIZE',\n\t  36177: 'RENDERBUFFER_GREEN_SIZE',\n\t  36178: 'RENDERBUFFER_BLUE_SIZE',\n\t  36179: 'RENDERBUFFER_ALPHA_SIZE',\n\t  36180: 'RENDERBUFFER_DEPTH_SIZE',\n\t  36181: 'RENDERBUFFER_STENCIL_SIZE',\n\t  36194: 'RGB565',\n\t  36336: 'LOW_FLOAT',\n\t  36337: 'MEDIUM_FLOAT',\n\t  36338: 'HIGH_FLOAT',\n\t  36339: 'LOW_INT',\n\t  36340: 'MEDIUM_INT',\n\t  36341: 'HIGH_INT',\n\t  36346: 'SHADER_COMPILER',\n\t  36347: 'MAX_VERTEX_UNIFORM_VECTORS',\n\t  36348: 'MAX_VARYING_VECTORS',\n\t  36349: 'MAX_FRAGMENT_UNIFORM_VECTORS',\n\t  37440: 'UNPACK_FLIP_Y_WEBGL',\n\t  37441: 'UNPACK_PREMULTIPLY_ALPHA_WEBGL',\n\t  37442: 'CONTEXT_LOST_WEBGL',\n\t  37443: 'UNPACK_COLORSPACE_CONVERSION_WEBGL',\n\t  37444: 'BROWSER_DEFAULT_WEBGL'\n\t}\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar tokenize = __webpack_require__(67)\n\tvar atob     = __webpack_require__(74)\n\t\n\tmodule.exports = getName\n\t\n\tfunction getName(src) {\n\t  var tokens = Array.isArray(src)\n\t    ? src\n\t    : tokenize(src)\n\t\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    var token = tokens[i]\n\t    if (token.type !== 'preprocessor') continue\n\t    var match = token.data.match(/\\#define\\s+SHADER_NAME(_B64)?\\s+(.+)$/)\n\t    if (!match) continue\n\t    if (!match[2]) continue\n\t\n\t    var b64  = match[1]\n\t    var name = match[2]\n\t\n\t    return (b64 ? atob(name) : name).trim()\n\t  }\n\t}\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar tokenize = __webpack_require__(68)\r\n\t\r\n\tmodule.exports = tokenizeString\r\n\t\r\n\tfunction tokenizeString(str, opt) {\r\n\t  var generator = tokenize(opt)\r\n\t  var tokens = []\r\n\t\r\n\t  tokens = tokens.concat(generator(str))\r\n\t  tokens = tokens.concat(generator(null))\r\n\t\r\n\t  return tokens\r\n\t}\r\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = tokenize\r\n\t\r\n\tvar literals100 = __webpack_require__(69)\r\n\t  , operators = __webpack_require__(70)\r\n\t  , builtins100 = __webpack_require__(71)\r\n\t  , literals300es = __webpack_require__(72)\r\n\t  , builtins300es = __webpack_require__(73)\r\n\t\r\n\tvar NORMAL = 999          // <-- never emitted\r\n\t  , TOKEN = 9999          // <-- never emitted\r\n\t  , BLOCK_COMMENT = 0\r\n\t  , LINE_COMMENT = 1\r\n\t  , PREPROCESSOR = 2\r\n\t  , OPERATOR = 3\r\n\t  , INTEGER = 4\r\n\t  , FLOAT = 5\r\n\t  , IDENT = 6\r\n\t  , BUILTIN = 7\r\n\t  , KEYWORD = 8\r\n\t  , WHITESPACE = 9\r\n\t  , EOF = 10\r\n\t  , HEX = 11\r\n\t\r\n\tvar map = [\r\n\t    'block-comment'\r\n\t  , 'line-comment'\r\n\t  , 'preprocessor'\r\n\t  , 'operator'\r\n\t  , 'integer'\r\n\t  , 'float'\r\n\t  , 'ident'\r\n\t  , 'builtin'\r\n\t  , 'keyword'\r\n\t  , 'whitespace'\r\n\t  , 'eof'\r\n\t  , 'integer'\r\n\t]\r\n\t\r\n\tfunction tokenize(opt) {\r\n\t  var i = 0\r\n\t    , total = 0\r\n\t    , mode = NORMAL\r\n\t    , c\r\n\t    , last\r\n\t    , content = []\r\n\t    , tokens = []\r\n\t    , token_idx = 0\r\n\t    , token_offs = 0\r\n\t    , line = 1\r\n\t    , col = 0\r\n\t    , start = 0\r\n\t    , isnum = false\r\n\t    , isoperator = false\r\n\t    , input = ''\r\n\t    , len\r\n\t\r\n\t  opt = opt || {}\r\n\t  var allBuiltins = builtins100\r\n\t  var allLiterals = literals100\r\n\t  if (opt.version === '300 es') {\r\n\t    allBuiltins = builtins300es\r\n\t    allLiterals = literals300es\r\n\t  }\r\n\t\r\n\t  // cache by name\r\n\t  var builtinsDict = {}, literalsDict = {}\r\n\t  for (var i = 0; i < allBuiltins.length; i++) {\r\n\t    builtinsDict[allBuiltins[i]] = true\r\n\t  }\r\n\t  for (var i = 0; i < allLiterals.length; i++) {\r\n\t    literalsDict[allLiterals[i]] = true\r\n\t  }\r\n\t\r\n\t  return function(data) {\r\n\t    tokens = []\r\n\t    if (data !== null) return write(data)\r\n\t    return end()\r\n\t  }\r\n\t\r\n\t  function token(data) {\r\n\t    if (data.length) {\r\n\t      tokens.push({\r\n\t        type: map[mode]\r\n\t      , data: data\r\n\t      , position: start\r\n\t      , line: line\r\n\t      , column: col\r\n\t      })\r\n\t    }\r\n\t  }\r\n\t\r\n\t  function write(chunk) {\r\n\t    i = 0\r\n\t\r\n\t    if (chunk.toString) chunk = chunk.toString()\r\n\t\r\n\t    input += chunk.replace(/\\r\\n/g, '\\n')\r\n\t    len = input.length\r\n\t\r\n\t\r\n\t    var last\r\n\t\r\n\t    while(c = input[i], i < len) {\r\n\t      last = i\r\n\t\r\n\t      switch(mode) {\r\n\t        case BLOCK_COMMENT: i = block_comment(); break\r\n\t        case LINE_COMMENT: i = line_comment(); break\r\n\t        case PREPROCESSOR: i = preprocessor(); break\r\n\t        case OPERATOR: i = operator(); break\r\n\t        case INTEGER: i = integer(); break\r\n\t        case HEX: i = hex(); break\r\n\t        case FLOAT: i = decimal(); break\r\n\t        case TOKEN: i = readtoken(); break\r\n\t        case WHITESPACE: i = whitespace(); break\r\n\t        case NORMAL: i = normal(); break\r\n\t      }\r\n\t\r\n\t      if(last !== i) {\r\n\t        switch(input[last]) {\r\n\t          case '\\n': col = 0; ++line; break\r\n\t          default: ++col; break\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    total += i\r\n\t    input = input.slice(i)\r\n\t    return tokens\r\n\t  }\r\n\t\r\n\t  function end(chunk) {\r\n\t    if(content.length) {\r\n\t      token(content.join(''))\r\n\t    }\r\n\t\r\n\t    mode = EOF\r\n\t    token('(eof)')\r\n\t    return tokens\r\n\t  }\r\n\t\r\n\t  function normal() {\r\n\t    content = content.length ? [] : content\r\n\t\r\n\t    if(last === '/' && c === '*') {\r\n\t      start = total + i - 1\r\n\t      mode = BLOCK_COMMENT\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if(last === '/' && c === '/') {\r\n\t      start = total + i - 1\r\n\t      mode = LINE_COMMENT\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if(c === '#') {\r\n\t      mode = PREPROCESSOR\r\n\t      start = total + i\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    if(/\\s/.test(c)) {\r\n\t      mode = WHITESPACE\r\n\t      start = total + i\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    isnum = /\\d/.test(c)\r\n\t    isoperator = /[^\\w_]/.test(c)\r\n\t\r\n\t    start = total + i\r\n\t    mode = isnum ? INTEGER : isoperator ? OPERATOR : TOKEN\r\n\t    return i\r\n\t  }\r\n\t\r\n\t  function whitespace() {\r\n\t    if(/[^\\s]/g.test(c)) {\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function preprocessor() {\r\n\t    if((c === '\\r' || c === '\\n') && last !== '\\\\') {\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function line_comment() {\r\n\t    return preprocessor()\r\n\t  }\r\n\t\r\n\t  function block_comment() {\r\n\t    if(c === '/' && last === '*') {\r\n\t      content.push(c)\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function operator() {\r\n\t    if(last === '.' && /\\d/.test(c)) {\r\n\t      mode = FLOAT\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    if(last === '/' && c === '*') {\r\n\t      mode = BLOCK_COMMENT\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    if(last === '/' && c === '/') {\r\n\t      mode = LINE_COMMENT\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    if(c === '.' && content.length) {\r\n\t      while(determine_operator(content));\r\n\t\r\n\t      mode = FLOAT\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    if(c === ';' || c === ')' || c === '(') {\r\n\t      if(content.length) while(determine_operator(content));\r\n\t      token(c)\r\n\t      mode = NORMAL\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    var is_composite_operator = content.length === 2 && c !== '='\r\n\t    if(/[\\w_\\d\\s]/.test(c) || is_composite_operator) {\r\n\t      while(determine_operator(content));\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function determine_operator(buf) {\r\n\t    var j = 0\r\n\t      , idx\r\n\t      , res\r\n\t\r\n\t    do {\r\n\t      idx = operators.indexOf(buf.slice(0, buf.length + j).join(''))\r\n\t      res = operators[idx]\r\n\t\r\n\t      if(idx === -1) {\r\n\t        if(j-- + buf.length > 0) continue\r\n\t        res = buf.slice(0, 1).join('')\r\n\t      }\r\n\t\r\n\t      token(res)\r\n\t\r\n\t      start += res.length\r\n\t      content = content.slice(res.length)\r\n\t      return content.length\r\n\t    } while(1)\r\n\t  }\r\n\t\r\n\t  function hex() {\r\n\t    if(/[^a-fA-F0-9]/.test(c)) {\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function integer() {\r\n\t    if(c === '.') {\r\n\t      content.push(c)\r\n\t      mode = FLOAT\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if(/[eE]/.test(c)) {\r\n\t      content.push(c)\r\n\t      mode = FLOAT\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if(c === 'x' && content.length === 1 && content[0] === '0') {\r\n\t      mode = HEX\r\n\t      content.push(c)\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if(/[^\\d]/.test(c)) {\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function decimal() {\r\n\t    if(c === 'f') {\r\n\t      content.push(c)\r\n\t      last = c\r\n\t      i += 1\r\n\t    }\r\n\t\r\n\t    if(/[eE]/.test(c)) {\r\n\t      content.push(c)\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if ((c === '-' || c === '+') && /[eE]/.test(last)) {\r\n\t      content.push(c)\r\n\t      last = c\r\n\t      return i + 1\r\n\t    }\r\n\t\r\n\t    if(/[^\\d]/.test(c)) {\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t\r\n\t  function readtoken() {\r\n\t    if(/[^\\d\\w_]/.test(c)) {\r\n\t      var contentstr = content.join('')\r\n\t      if(literalsDict[contentstr]) {\r\n\t        mode = KEYWORD\r\n\t      } else if(builtinsDict[contentstr]) {\r\n\t        mode = BUILTIN\r\n\t      } else {\r\n\t        mode = IDENT\r\n\t      }\r\n\t      token(content.join(''))\r\n\t      mode = NORMAL\r\n\t      return i\r\n\t    }\r\n\t    content.push(c)\r\n\t    last = c\r\n\t    return i + 1\r\n\t  }\r\n\t}\r\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = [\r\n\t  // current\r\n\t    'precision'\r\n\t  , 'highp'\r\n\t  , 'mediump'\r\n\t  , 'lowp'\r\n\t  , 'attribute'\r\n\t  , 'const'\r\n\t  , 'uniform'\r\n\t  , 'varying'\r\n\t  , 'break'\r\n\t  , 'continue'\r\n\t  , 'do'\r\n\t  , 'for'\r\n\t  , 'while'\r\n\t  , 'if'\r\n\t  , 'else'\r\n\t  , 'in'\r\n\t  , 'out'\r\n\t  , 'inout'\r\n\t  , 'float'\r\n\t  , 'int'\r\n\t  , 'uint'\r\n\t  , 'void'\r\n\t  , 'bool'\r\n\t  , 'true'\r\n\t  , 'false'\r\n\t  , 'discard'\r\n\t  , 'return'\r\n\t  , 'mat2'\r\n\t  , 'mat3'\r\n\t  , 'mat4'\r\n\t  , 'vec2'\r\n\t  , 'vec3'\r\n\t  , 'vec4'\r\n\t  , 'ivec2'\r\n\t  , 'ivec3'\r\n\t  , 'ivec4'\r\n\t  , 'bvec2'\r\n\t  , 'bvec3'\r\n\t  , 'bvec4'\r\n\t  , 'sampler1D'\r\n\t  , 'sampler2D'\r\n\t  , 'sampler3D'\r\n\t  , 'samplerCube'\r\n\t  , 'sampler1DShadow'\r\n\t  , 'sampler2DShadow'\r\n\t  , 'struct'\r\n\t\r\n\t  // future\r\n\t  , 'asm'\r\n\t  , 'class'\r\n\t  , 'union'\r\n\t  , 'enum'\r\n\t  , 'typedef'\r\n\t  , 'template'\r\n\t  , 'this'\r\n\t  , 'packed'\r\n\t  , 'goto'\r\n\t  , 'switch'\r\n\t  , 'default'\r\n\t  , 'inline'\r\n\t  , 'noinline'\r\n\t  , 'volatile'\r\n\t  , 'public'\r\n\t  , 'static'\r\n\t  , 'extern'\r\n\t  , 'external'\r\n\t  , 'interface'\r\n\t  , 'long'\r\n\t  , 'short'\r\n\t  , 'double'\r\n\t  , 'half'\r\n\t  , 'fixed'\r\n\t  , 'unsigned'\r\n\t  , 'input'\r\n\t  , 'output'\r\n\t  , 'hvec2'\r\n\t  , 'hvec3'\r\n\t  , 'hvec4'\r\n\t  , 'dvec2'\r\n\t  , 'dvec3'\r\n\t  , 'dvec4'\r\n\t  , 'fvec2'\r\n\t  , 'fvec3'\r\n\t  , 'fvec4'\r\n\t  , 'sampler2DRect'\r\n\t  , 'sampler3DRect'\r\n\t  , 'sampler2DRectShadow'\r\n\t  , 'sizeof'\r\n\t  , 'cast'\r\n\t  , 'namespace'\r\n\t  , 'using'\r\n\t]\r\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = [\r\n\t    '<<='\r\n\t  , '>>='\r\n\t  , '++'\r\n\t  , '--'\r\n\t  , '<<'\r\n\t  , '>>'\r\n\t  , '<='\r\n\t  , '>='\r\n\t  , '=='\r\n\t  , '!='\r\n\t  , '&&'\r\n\t  , '||'\r\n\t  , '+='\r\n\t  , '-='\r\n\t  , '*='\r\n\t  , '/='\r\n\t  , '%='\r\n\t  , '&='\r\n\t  , '^^'\r\n\t  , '^='\r\n\t  , '|='\r\n\t  , '('\r\n\t  , ')'\r\n\t  , '['\r\n\t  , ']'\r\n\t  , '.'\r\n\t  , '!'\r\n\t  , '~'\r\n\t  , '*'\r\n\t  , '/'\r\n\t  , '%'\r\n\t  , '+'\r\n\t  , '-'\r\n\t  , '<'\r\n\t  , '>'\r\n\t  , '&'\r\n\t  , '^'\r\n\t  , '|'\r\n\t  , '?'\r\n\t  , ':'\r\n\t  , '='\r\n\t  , ','\r\n\t  , ';'\r\n\t  , '{'\r\n\t  , '}'\r\n\t]\r\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = [\r\n\t  // Keep this list sorted\r\n\t  'abs'\r\n\t  , 'acos'\r\n\t  , 'all'\r\n\t  , 'any'\r\n\t  , 'asin'\r\n\t  , 'atan'\r\n\t  , 'ceil'\r\n\t  , 'clamp'\r\n\t  , 'cos'\r\n\t  , 'cross'\r\n\t  , 'dFdx'\r\n\t  , 'dFdy'\r\n\t  , 'degrees'\r\n\t  , 'distance'\r\n\t  , 'dot'\r\n\t  , 'equal'\r\n\t  , 'exp'\r\n\t  , 'exp2'\r\n\t  , 'faceforward'\r\n\t  , 'floor'\r\n\t  , 'fract'\r\n\t  , 'gl_BackColor'\r\n\t  , 'gl_BackLightModelProduct'\r\n\t  , 'gl_BackLightProduct'\r\n\t  , 'gl_BackMaterial'\r\n\t  , 'gl_BackSecondaryColor'\r\n\t  , 'gl_ClipPlane'\r\n\t  , 'gl_ClipVertex'\r\n\t  , 'gl_Color'\r\n\t  , 'gl_DepthRange'\r\n\t  , 'gl_DepthRangeParameters'\r\n\t  , 'gl_EyePlaneQ'\r\n\t  , 'gl_EyePlaneR'\r\n\t  , 'gl_EyePlaneS'\r\n\t  , 'gl_EyePlaneT'\r\n\t  , 'gl_Fog'\r\n\t  , 'gl_FogCoord'\r\n\t  , 'gl_FogFragCoord'\r\n\t  , 'gl_FogParameters'\r\n\t  , 'gl_FragColor'\r\n\t  , 'gl_FragCoord'\r\n\t  , 'gl_FragData'\r\n\t  , 'gl_FragDepth'\r\n\t  , 'gl_FragDepthEXT'\r\n\t  , 'gl_FrontColor'\r\n\t  , 'gl_FrontFacing'\r\n\t  , 'gl_FrontLightModelProduct'\r\n\t  , 'gl_FrontLightProduct'\r\n\t  , 'gl_FrontMaterial'\r\n\t  , 'gl_FrontSecondaryColor'\r\n\t  , 'gl_LightModel'\r\n\t  , 'gl_LightModelParameters'\r\n\t  , 'gl_LightModelProducts'\r\n\t  , 'gl_LightProducts'\r\n\t  , 'gl_LightSource'\r\n\t  , 'gl_LightSourceParameters'\r\n\t  , 'gl_MaterialParameters'\r\n\t  , 'gl_MaxClipPlanes'\r\n\t  , 'gl_MaxCombinedTextureImageUnits'\r\n\t  , 'gl_MaxDrawBuffers'\r\n\t  , 'gl_MaxFragmentUniformComponents'\r\n\t  , 'gl_MaxLights'\r\n\t  , 'gl_MaxTextureCoords'\r\n\t  , 'gl_MaxTextureImageUnits'\r\n\t  , 'gl_MaxTextureUnits'\r\n\t  , 'gl_MaxVaryingFloats'\r\n\t  , 'gl_MaxVertexAttribs'\r\n\t  , 'gl_MaxVertexTextureImageUnits'\r\n\t  , 'gl_MaxVertexUniformComponents'\r\n\t  , 'gl_ModelViewMatrix'\r\n\t  , 'gl_ModelViewMatrixInverse'\r\n\t  , 'gl_ModelViewMatrixInverseTranspose'\r\n\t  , 'gl_ModelViewMatrixTranspose'\r\n\t  , 'gl_ModelViewProjectionMatrix'\r\n\t  , 'gl_ModelViewProjectionMatrixInverse'\r\n\t  , 'gl_ModelViewProjectionMatrixInverseTranspose'\r\n\t  , 'gl_ModelViewProjectionMatrixTranspose'\r\n\t  , 'gl_MultiTexCoord0'\r\n\t  , 'gl_MultiTexCoord1'\r\n\t  , 'gl_MultiTexCoord2'\r\n\t  , 'gl_MultiTexCoord3'\r\n\t  , 'gl_MultiTexCoord4'\r\n\t  , 'gl_MultiTexCoord5'\r\n\t  , 'gl_MultiTexCoord6'\r\n\t  , 'gl_MultiTexCoord7'\r\n\t  , 'gl_Normal'\r\n\t  , 'gl_NormalMatrix'\r\n\t  , 'gl_NormalScale'\r\n\t  , 'gl_ObjectPlaneQ'\r\n\t  , 'gl_ObjectPlaneR'\r\n\t  , 'gl_ObjectPlaneS'\r\n\t  , 'gl_ObjectPlaneT'\r\n\t  , 'gl_Point'\r\n\t  , 'gl_PointCoord'\r\n\t  , 'gl_PointParameters'\r\n\t  , 'gl_PointSize'\r\n\t  , 'gl_Position'\r\n\t  , 'gl_ProjectionMatrix'\r\n\t  , 'gl_ProjectionMatrixInverse'\r\n\t  , 'gl_ProjectionMatrixInverseTranspose'\r\n\t  , 'gl_ProjectionMatrixTranspose'\r\n\t  , 'gl_SecondaryColor'\r\n\t  , 'gl_TexCoord'\r\n\t  , 'gl_TextureEnvColor'\r\n\t  , 'gl_TextureMatrix'\r\n\t  , 'gl_TextureMatrixInverse'\r\n\t  , 'gl_TextureMatrixInverseTranspose'\r\n\t  , 'gl_TextureMatrixTranspose'\r\n\t  , 'gl_Vertex'\r\n\t  , 'greaterThan'\r\n\t  , 'greaterThanEqual'\r\n\t  , 'inversesqrt'\r\n\t  , 'length'\r\n\t  , 'lessThan'\r\n\t  , 'lessThanEqual'\r\n\t  , 'log'\r\n\t  , 'log2'\r\n\t  , 'matrixCompMult'\r\n\t  , 'max'\r\n\t  , 'min'\r\n\t  , 'mix'\r\n\t  , 'mod'\r\n\t  , 'normalize'\r\n\t  , 'not'\r\n\t  , 'notEqual'\r\n\t  , 'pow'\r\n\t  , 'radians'\r\n\t  , 'reflect'\r\n\t  , 'refract'\r\n\t  , 'sign'\r\n\t  , 'sin'\r\n\t  , 'smoothstep'\r\n\t  , 'sqrt'\r\n\t  , 'step'\r\n\t  , 'tan'\r\n\t  , 'texture2D'\r\n\t  , 'texture2DLod'\r\n\t  , 'texture2DProj'\r\n\t  , 'texture2DProjLod'\r\n\t  , 'textureCube'\r\n\t  , 'textureCubeLod'\r\n\t  , 'texture2DLodEXT'\r\n\t  , 'texture2DProjLodEXT'\r\n\t  , 'textureCubeLodEXT'\r\n\t  , 'texture2DGradEXT'\r\n\t  , 'texture2DProjGradEXT'\r\n\t  , 'textureCubeGradEXT'\r\n\t]\r\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar v100 = __webpack_require__(69)\r\n\t\r\n\tmodule.exports = v100.slice().concat([\r\n\t   'layout'\r\n\t  , 'centroid'\r\n\t  , 'smooth'\r\n\t  , 'case'\r\n\t  , 'mat2x2'\r\n\t  , 'mat2x3'\r\n\t  , 'mat2x4'\r\n\t  , 'mat3x2'\r\n\t  , 'mat3x3'\r\n\t  , 'mat3x4'\r\n\t  , 'mat4x2'\r\n\t  , 'mat4x3'\r\n\t  , 'mat4x4'\r\n\t  , 'uvec2'\r\n\t  , 'uvec3'\r\n\t  , 'uvec4'\r\n\t  , 'samplerCubeShadow'\r\n\t  , 'sampler2DArray'\r\n\t  , 'sampler2DArrayShadow'\r\n\t  , 'isampler2D'\r\n\t  , 'isampler3D'\r\n\t  , 'isamplerCube'\r\n\t  , 'isampler2DArray'\r\n\t  , 'usampler2D'\r\n\t  , 'usampler3D'\r\n\t  , 'usamplerCube'\r\n\t  , 'usampler2DArray'\r\n\t  , 'coherent'\r\n\t  , 'restrict'\r\n\t  , 'readonly'\r\n\t  , 'writeonly'\r\n\t  , 'resource'\r\n\t  , 'atomic_uint'\r\n\t  , 'noperspective'\r\n\t  , 'patch'\r\n\t  , 'sample'\r\n\t  , 'subroutine'\r\n\t  , 'common'\r\n\t  , 'partition'\r\n\t  , 'active'\r\n\t  , 'filter'\r\n\t  , 'image1D'\r\n\t  , 'image2D'\r\n\t  , 'image3D'\r\n\t  , 'imageCube'\r\n\t  , 'iimage1D'\r\n\t  , 'iimage2D'\r\n\t  , 'iimage3D'\r\n\t  , 'iimageCube'\r\n\t  , 'uimage1D'\r\n\t  , 'uimage2D'\r\n\t  , 'uimage3D'\r\n\t  , 'uimageCube'\r\n\t  , 'image1DArray'\r\n\t  , 'image2DArray'\r\n\t  , 'iimage1DArray'\r\n\t  , 'iimage2DArray'\r\n\t  , 'uimage1DArray'\r\n\t  , 'uimage2DArray'\r\n\t  , 'image1DShadow'\r\n\t  , 'image2DShadow'\r\n\t  , 'image1DArrayShadow'\r\n\t  , 'image2DArrayShadow'\r\n\t  , 'imageBuffer'\r\n\t  , 'iimageBuffer'\r\n\t  , 'uimageBuffer'\r\n\t  , 'sampler1DArray'\r\n\t  , 'sampler1DArrayShadow'\r\n\t  , 'isampler1D'\r\n\t  , 'isampler1DArray'\r\n\t  , 'usampler1D'\r\n\t  , 'usampler1DArray'\r\n\t  , 'isampler2DRect'\r\n\t  , 'usampler2DRect'\r\n\t  , 'samplerBuffer'\r\n\t  , 'isamplerBuffer'\r\n\t  , 'usamplerBuffer'\r\n\t  , 'sampler2DMS'\r\n\t  , 'isampler2DMS'\r\n\t  , 'usampler2DMS'\r\n\t  , 'sampler2DMSArray'\r\n\t  , 'isampler2DMSArray'\r\n\t  , 'usampler2DMSArray'\r\n\t])\r\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 300es builtins/reserved words that were previously valid in v100\r\n\tvar v100 = __webpack_require__(71)\r\n\t\r\n\t// The texture2D|Cube functions have been removed\r\n\t// And the gl_ features are updated\r\n\tv100 = v100.slice().filter(function (b) {\r\n\t  return !/^(gl\\_|texture)/.test(b)\r\n\t})\r\n\t\r\n\tmodule.exports = v100.concat([\r\n\t  // the updated gl_ constants\r\n\t    'gl_VertexID'\r\n\t  , 'gl_InstanceID'\r\n\t  , 'gl_Position'\r\n\t  , 'gl_PointSize'\r\n\t  , 'gl_FragCoord'\r\n\t  , 'gl_FrontFacing'\r\n\t  , 'gl_FragDepth'\r\n\t  , 'gl_PointCoord'\r\n\t  , 'gl_MaxVertexAttribs'\r\n\t  , 'gl_MaxVertexUniformVectors'\r\n\t  , 'gl_MaxVertexOutputVectors'\r\n\t  , 'gl_MaxFragmentInputVectors'\r\n\t  , 'gl_MaxVertexTextureImageUnits'\r\n\t  , 'gl_MaxCombinedTextureImageUnits'\r\n\t  , 'gl_MaxTextureImageUnits'\r\n\t  , 'gl_MaxFragmentUniformVectors'\r\n\t  , 'gl_MaxDrawBuffers'\r\n\t  , 'gl_MinProgramTexelOffset'\r\n\t  , 'gl_MaxProgramTexelOffset'\r\n\t  , 'gl_DepthRangeParameters'\r\n\t  , 'gl_DepthRange'\r\n\t\r\n\t  // other builtins\r\n\t  , 'trunc'\r\n\t  , 'round'\r\n\t  , 'roundEven'\r\n\t  , 'isnan'\r\n\t  , 'isinf'\r\n\t  , 'floatBitsToInt'\r\n\t  , 'floatBitsToUint'\r\n\t  , 'intBitsToFloat'\r\n\t  , 'uintBitsToFloat'\r\n\t  , 'packSnorm2x16'\r\n\t  , 'unpackSnorm2x16'\r\n\t  , 'packUnorm2x16'\r\n\t  , 'unpackUnorm2x16'\r\n\t  , 'packHalf2x16'\r\n\t  , 'unpackHalf2x16'\r\n\t  , 'outerProduct'\r\n\t  , 'transpose'\r\n\t  , 'determinant'\r\n\t  , 'inverse'\r\n\t  , 'texture'\r\n\t  , 'textureSize'\r\n\t  , 'textureProj'\r\n\t  , 'textureLod'\r\n\t  , 'textureOffset'\r\n\t  , 'texelFetch'\r\n\t  , 'texelFetchOffset'\r\n\t  , 'textureProjOffset'\r\n\t  , 'textureLodOffset'\r\n\t  , 'textureProjLod'\r\n\t  , 'textureProjLodOffset'\r\n\t  , 'textureGrad'\r\n\t  , 'textureGradOffset'\r\n\t  , 'textureProjGrad'\r\n\t  , 'textureProjGradOffset'\r\n\t])\r\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _atob(str) {\n\t  return atob(str)\n\t}\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar padLeft = __webpack_require__(76)\n\t\n\tmodule.exports = addLineNumbers\n\tfunction addLineNumbers (string, start, delim) {\n\t  start = typeof start === 'number' ? start : 1\n\t  delim = delim || ': '\n\t\n\t  var lines = string.split(/\\r?\\n/)\n\t  var totalDigits = String(lines.length + start - 1).length\n\t  return lines.map(function (line, i) {\n\t    var c = i + start\n\t    var digits = String(c).length\n\t    var prefix = padLeft(c, totalDigits - digits)\n\t    return prefix + delim + line\n\t  }).join('\\n')\n\t}\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * pad-left <https://github.com/jonschlinkert/pad-left>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT license.\n\t */\n\t\n\t'use strict';\n\t\n\tvar repeat = __webpack_require__(77);\n\t\n\tmodule.exports = function padLeft(str, num, ch) {\n\t  ch = typeof ch !== 'undefined' ? (ch + '') : ' ';\n\t  return repeat(ch, num) + str;\n\t};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\n\t/*!\n\t * repeat-string <https://github.com/jonschlinkert/repeat-string>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Results cache\n\t */\n\t\n\tvar res = '';\n\tvar cache;\n\t\n\t/**\n\t * Expose `repeat`\n\t */\n\t\n\tmodule.exports = repeat;\n\t\n\t/**\n\t * Repeat the given `string` the specified `number`\n\t * of times.\n\t *\n\t * **Example:**\n\t *\n\t * ```js\n\t * var repeat = require('repeat-string');\n\t * repeat('A', 5);\n\t * //=> AAAAA\n\t * ```\n\t *\n\t * @param {String} `string` The string to repeat\n\t * @param {Number} `number` The number of times to repeat the string\n\t * @return {String} Repeated string\n\t * @api public\n\t */\n\t\n\tfunction repeat(str, num) {\n\t  if (typeof str !== 'string') {\n\t    throw new TypeError('expected a string');\n\t  }\n\t\n\t  // cover common, quick use cases\n\t  if (num === 1) return str;\n\t  if (num === 2) return str + str;\n\t\n\t  var max = str.length * num;\n\t  if (cache !== str || typeof cache === 'undefined') {\n\t    cache = str;\n\t    res = '';\n\t  } else if (res.length >= max) {\n\t    return res.substr(0, max);\n\t  }\n\t\n\t  while (max > res.length && num > 1) {\n\t    if (num & 1) {\n\t      res += str;\n\t    }\n\t\n\t    num >>= 1;\n\t    str += str;\n\t  }\n\t\n\t  res += str;\n\t  res = res.substr(0, max);\n\t  return res;\n\t}\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Original - @Gozola.\n\t// https://gist.github.com/Gozala/1269991\n\t// This is a reimplemented version (with a few bug fixes).\n\t\n\tvar createStore = __webpack_require__(79);\n\t\n\tmodule.exports = weakMap;\n\t\n\tfunction weakMap() {\n\t    var privates = createStore();\n\t\n\t    return {\n\t        'get': function (key, fallback) {\n\t            var store = privates(key)\n\t            return store.hasOwnProperty('value') ?\n\t                store.value : fallback\n\t        },\n\t        'set': function (key, value) {\n\t            privates(key).value = value;\n\t            return this;\n\t        },\n\t        'has': function(key) {\n\t            return 'value' in privates(key);\n\t        },\n\t        'delete': function (key) {\n\t            return delete privates(key).value;\n\t        }\n\t    }\n\t}\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar hiddenStore = __webpack_require__(80);\n\t\n\tmodule.exports = createStore;\n\t\n\tfunction createStore() {\n\t    var key = {};\n\t\n\t    return function (obj) {\n\t        if ((typeof obj !== 'object' || obj === null) &&\n\t            typeof obj !== 'function'\n\t        ) {\n\t            throw new Error('Weakmap-shim: Key must be object')\n\t        }\n\t\n\t        var store = obj.valueOf(key);\n\t        return store && store.identity === key ?\n\t            store : hiddenStore(obj, key);\n\t    };\n\t}\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = hiddenStore;\n\t\n\tfunction hiddenStore(obj, key) {\n\t    var store = { identity: key };\n\t    var valueOf = obj.valueOf;\n\t\n\t    Object.defineProperty(obj, \"valueOf\", {\n\t        value: function (value) {\n\t            return value !== key ?\n\t                valueOf.apply(this, arguments) : store;\n\t        },\n\t        writable: true\n\t    });\n\t\n\t    return store;\n\t}\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.uniforms    = runtimeUniforms\n\texports.attributes  = runtimeAttributes\n\t\n\tvar GL_TO_GLSL_TYPES = {\n\t  'FLOAT':       'float',\n\t  'FLOAT_VEC2':  'vec2',\n\t  'FLOAT_VEC3':  'vec3',\n\t  'FLOAT_VEC4':  'vec4',\n\t  'INT':         'int',\n\t  'INT_VEC2':    'ivec2',\n\t  'INT_VEC3':    'ivec3',\n\t  'INT_VEC4':    'ivec4',\n\t  'BOOL':        'bool',\n\t  'BOOL_VEC2':   'bvec2',\n\t  'BOOL_VEC3':   'bvec3',\n\t  'BOOL_VEC4':   'bvec4',\n\t  'FLOAT_MAT2':  'mat2',\n\t  'FLOAT_MAT3':  'mat3',\n\t  'FLOAT_MAT4':  'mat4',\n\t  'SAMPLER_2D':  'sampler2D',\n\t  'SAMPLER_CUBE':'samplerCube'\n\t}\n\t\n\tvar GL_TABLE = null\n\t\n\tfunction getType(gl, type) {\n\t  if(!GL_TABLE) {\n\t    var typeNames = Object.keys(GL_TO_GLSL_TYPES)\n\t    GL_TABLE = {}\n\t    for(var i=0; i<typeNames.length; ++i) {\n\t      var tn = typeNames[i]\n\t      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn]\n\t    }\n\t  }\n\t  return GL_TABLE[type]\n\t}\n\t\n\tfunction runtimeUniforms(gl, program) {\n\t  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)\n\t  var result = []\n\t  for(var i=0; i<numUniforms; ++i) {\n\t    var info = gl.getActiveUniform(program, i)\n\t    if(info) {\n\t      var type = getType(gl, info.type)\n\t      if(info.size > 1) {\n\t        for(var j=0; j<info.size; ++j) {\n\t          result.push({\n\t            name: info.name.replace('[0]', '[' + j + ']'),\n\t            type: type\n\t          })\n\t        }\n\t      } else {\n\t        result.push({\n\t          name: info.name,\n\t          type: type\n\t        })\n\t      }\n\t    }\n\t  }\n\t  return result\n\t}\n\t\n\tfunction runtimeAttributes(gl, program) {\n\t  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)\n\t  var result = []\n\t  for(var i=0; i<numAttributes; ++i) {\n\t    var info = gl.getActiveAttrib(program, i)\n\t    if(info) {\n\t      result.push({\n\t        name: info.name,\n\t        type: getType(gl, info.type)\n\t      })\n\t    }\n\t  }\n\t  return result\n\t}\n\n\n/***/ }),\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.step = step;\n\tfunction step(array) {\n\t    var next = Array.prototype.pop.call(array);\n\t\n\t    Array.prototype.unshift.call(array, next);\n\t\n\t    return next;\n\t}\n\t\n\tvar wrapIndex = exports.wrapIndex = function wrapIndex(index, array) {\n\t    return array[(array.length + Math.round(index)) % array.length];\n\t};\n\t\n\tvar invLog2 = 1 / Math.log(2);\n\t\n\tvar nextPow2 = exports.nextPow2 = function nextPow2(x) {\n\t    return Math.pow(2, Math.ceil(Math.log(x) * invLog2));\n\t};\n\t\n\t// Handle paths on different hosts - for local/Github/etc hosting.\n\t// @todo Coupled to the hosting setup - remove where not relevant.\n\tvar rootPath = exports.rootPath = ('/' + ((location.href.match(/:\\/\\/.+?\\/([^\\/\\?]+?(?=[\\/\\?]|$))?/i) || [])[1] || '') + '/').replace(/\\/+/gi, '/');\n\n/***/ }),\n/* 119 */,\n/* 120 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Timer = function () {\n\t    function Timer(now, since) {\n\t        _classCallCheck(this, Timer);\n\t\n\t        this.time = 0;\n\t        this.since = 0;\n\t\n\t        this.offset = 0;\n\t\n\t        this.rate = 1;\n\t        this.step = -1;\n\t\n\t        this.dt = 0;\n\t\n\t        this.paused = false;\n\t        this.end = -1;\n\t        this.loop = false;\n\t\n\t        this.reset(now, since);\n\t    }\n\t\n\t    _createClass(Timer, [{\n\t        key: \"now\",\n\t        value: function now() {\n\t            var _now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n\t\n\t            return (_now - this.offset) * this.rate;\n\t        }\n\t    }, {\n\t        key: \"tick\",\n\t        value: function tick(now) {\n\t            var time = this.time;\n\t            var dt = 0;\n\t\n\t            if (this.step >= 0) {\n\t                dt = this.step * this.rate;\n\t                time += dt;\n\t            } else {\n\t                var past = time;\n\t\n\t                time = this.now(now);\n\t                dt = time - past;\n\t            }\n\t\n\t            if (this.paused) {\n\t                this.offset += dt;\n\t                dt = 0;\n\t            } else if (this.end < 0) {\n\t                this.time = time;\n\t            } else if (this.loop) {\n\t                this.time = time % this.end;\n\t            } else {\n\t                this.time = (this.rate > 0 ? Math.min : Math.max)(time, this.end);\n\t\n\t                if (this.time !== time) {\n\t                    this.paused = true;\n\t                }\n\t            }\n\t\n\t            this.dt = dt;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"seek\",\n\t        value: function seek(to) {\n\t            this.offset = -to;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"scrub\",\n\t        value: function scrub(by) {\n\t            this.offset -= by;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"reset\",\n\t        value: function reset() {\n\t            var now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n\t            var since = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : now;\n\t\n\t            this.since = this.offset = since;\n\t            this.time = this.now(now);\n\t\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Timer;\n\t}();\n\t\n\texports.Timer = Timer;\n\texports.default = Timer;\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Tendrils = exports.glSettings = exports.defaults = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t// Shaders\n\t\n\tvar _glShader = __webpack_require__(55);\n\t\n\tvar _glShader2 = _interopRequireDefault(_glShader);\n\t\n\tvar _glFbo = __webpack_require__(122);\n\t\n\tvar _glFbo2 = _interopRequireDefault(_glFbo);\n\t\n\tvar _particles2 = __webpack_require__(139);\n\t\n\tvar _particles3 = _interopRequireDefault(_particles2);\n\t\n\tvar _timer = __webpack_require__(120);\n\t\n\tvar _timer2 = _interopRequireDefault(_timer);\n\t\n\tvar _utils = __webpack_require__(118);\n\t\n\tvar _cpu = __webpack_require__(157);\n\t\n\tvar _cpu2 = _interopRequireDefault(_cpu);\n\t\n\tvar _aspect = __webpack_require__(159);\n\t\n\tvar _screen = __webpack_require__(154);\n\t\n\tvar _screen2 = _interopRequireDefault(_screen);\n\t\n\tvar _logic = __webpack_require__(160);\n\t\n\tvar _logic2 = _interopRequireDefault(_logic);\n\t\n\tvar _index = __webpack_require__(161);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _index3 = __webpack_require__(162);\n\t\n\tvar _index4 = _interopRequireDefault(_index3);\n\t\n\tvar _index5 = __webpack_require__(163);\n\t\n\tvar _index6 = _interopRequireDefault(_index5);\n\t\n\tvar _index7 = __webpack_require__(164);\n\t\n\tvar _index8 = _interopRequireDefault(_index7);\n\t\n\tvar _index9 = __webpack_require__(156);\n\t\n\tvar _index10 = _interopRequireDefault(_index9);\n\t\n\tvar _index11 = __webpack_require__(165);\n\t\n\tvar _index12 = _interopRequireDefault(_index11);\n\t\n\tvar _copy = __webpack_require__(166);\n\t\n\tvar _copy2 = _interopRequireDefault(_copy);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar defaults = exports.defaults = function defaults() {\n\t    return {\n\t        state: {\n\t            rootNum: Math.pow(2, 9),\n\t\n\t            autoClearView: false,\n\t            autoFade: true,\n\t\n\t            damping: 0.043,\n\t            speedLimit: 0.01,\n\t\n\t            forceWeight: 0.016,\n\t            varyForce: -0.1,\n\t\n\t            flowWeight: 1,\n\t            varyFlow: 0.2,\n\t\n\t            noiseWeight: 0.002,\n\t            varyNoise: 0.3,\n\t\n\t            flowDecay: 0.003,\n\t            flowWidth: 5,\n\t\n\t            noiseScale: 2.125,\n\t            varyNoiseScale: 0.5,\n\t\n\t            noiseSpeed: 0.00025,\n\t            varyNoiseSpeed: 0.1,\n\t\n\t            target: 0,\n\t            varyTarget: 1,\n\t\n\t            lineWidth: 1,\n\t            speedAlpha: 0.000001,\n\t            colorMapAlpha: 0.4,\n\t\n\t            baseColor: [1, 1, 1, 0.5],\n\t            flowColor: [1, 1, 1, 0.04],\n\t            fadeColor: [0.1333, 0.1333, 0.1333, 0]\n\t        },\n\t        timer: Object.assign(new _timer2.default(), { step: 1000 / 60 }),\n\t        numBuffers: 0,\n\t        logicShader: null,\n\t        renderShader: [_index2.default, _index4.default],\n\t        flowShader: [_index6.default, _index8.default],\n\t        fillShader: [_index10.default, _index12.default],\n\t        copyShader: [_index10.default, _copy2.default],\n\t        colorMap: null\n\t    };\n\t};\n\t\n\tvar glSettings = exports.glSettings = {\n\t    preserveDrawingBuffer: true,\n\t    antialias: true\n\t};\n\t\n\tvar Tendrils = exports.Tendrils = function () {\n\t    function Tendrils(gl, options) {\n\t        _classCallCheck(this, Tendrils);\n\t\n\t        var params = _extends({}, defaults(), options);\n\t\n\t        this.gl = gl;\n\t\n\t        this.state = params.state;\n\t\n\t        if (!(this.colorMap = params.colorMap)) {\n\t            this.colorMap = (0, _glFbo2.default)(this.gl, [1, 1], { float: true });\n\t        }\n\t\n\t        this.screen = new _screen2.default(this.gl);\n\t\n\t        // The FBO into which the particle flow will be rendered, creating the\n\t        // feedback/self-influence\n\t        this.flow = (0, _glFbo2.default)(this.gl, [1, 1], { float: true });\n\t\n\t        // Targets for the particles, to allow a degree of explicit control\n\t        this.targets = (0, _glFbo2.default)(this.gl, [1, 1], { float: true });\n\t\n\t        // Multiple bufferring\n\t        this.buffers = [];\n\t        this.setupBuffers(params.numBuffers);\n\t\n\t        this.logicShader = null;\n\t\n\t        this.renderShader = Array.isArray(params.renderShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.renderShader))) : params.renderShader;\n\t\n\t        this.flowShader = Array.isArray(params.flowShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.flowShader))) : params.flowShader;\n\t\n\t        this.copyShader = Array.isArray(params.copyShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.copyShader))) : params.copyShader;\n\t\n\t        this.fillShader = Array.isArray(params.fillShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.fillShader))) : params.fillShader;\n\t\n\t        this.uniforms = {\n\t            render: {},\n\t            update: {}\n\t        };\n\t\n\t        this.particles = null;\n\t\n\t        this.viewRes = [0, 0];\n\t        // this.pow2Res = [0, 0];\n\t\n\t        this.viewSize = [0, 0];\n\t\n\t        this.timer = params.timer;\n\t\n\t        this.tempData = [];\n\t    }\n\t\n\t    _createClass(Tendrils, [{\n\t        key: 'setup',\n\t        value: function setup() {\n\t            this.setupParticles.apply(this, arguments);\n\t            this.reset();\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this.spawn();\n\t\n\t            return this;\n\t        }\n\t\n\t        // @todo\n\t\n\t    }, {\n\t        key: 'dispose',\n\t        value: function dispose() {\n\t            this.particles.dispose();\n\t\n\t            delete this.particles;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'setupBuffers',\n\t        value: function setupBuffers() {\n\t            var numBuffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t            // Add any needed new buffers\n\t            while (this.buffers.length < numBuffers) {\n\t                this.buffers.push((0, _glFbo2.default)(this.gl, [1, 1]));\n\t            }\n\t\n\t            // Remove any unneeded old buffers\n\t            while (this.buffers.length > numBuffers) {\n\t                this.buffers.pop().dispose();\n\t            }\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'setupParticles',\n\t        value: function setupParticles() {\n\t            var rootNum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.rootNum;\n\t            var numBuffers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\t\n\t            this.state.rootNum = rootNum;\n\t\n\t            var shape = [rootNum, rootNum];\n\t\n\t            this.particles = new _particles3.default(this.gl, {\n\t                shape: shape,\n\t\n\t                // Double the rootNum of (vertical neighbour) vertices, to have\n\t                // pairs alternating between previous and current state.\n\t                // (Vertical neighbours, because WebGL iterates column-major.)\n\t                geomShape: [shape[0], shape[1] * 2],\n\t\n\t                logicFrag: _logic2.default,\n\t                render: this.renderShader\n\t            });\n\t\n\t            this.logicShader = this.particles.logic;\n\t\n\t            this.particles.setup(numBuffers);\n\t\n\t            this.targets.shape = shape;\n\t\n\t            return this;\n\t        }\n\t\n\t        // Rendering and logic\n\t\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            this.clearView();\n\t            this.clearFlow();\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'clearView',\n\t        value: function clearView() {\n\t            var _this = this;\n\t\n\t            this.buffers.forEach(function (buffer) {\n\t                buffer.bind();\n\t                _this.gl.clear(_this.gl.COLOR_BUFFER_BIT);\n\t            });\n\t\n\t            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n\t            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'clearFlow',\n\t        value: function clearFlow() {\n\t            this.flow.bind();\n\t            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'restart',\n\t        value: function restart() {\n\t            this.clear();\n\t            this.reset();\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'step',\n\t        value: function step() {\n\t            if (!this.timer.paused) {\n\t                this.particles.logic = this.logicShader;\n\t\n\t                // Disabling blending here is important\n\t                this.gl.disable(this.gl.BLEND);\n\t\n\t                Object.assign(this.uniforms.update, this.state, {\n\t                    dt: this.timer.dt,\n\t                    time: this.timer.time,\n\t                    start: this.timer.since,\n\t                    flow: this.flow.color[0].bind(1),\n\t                    targets: this.targets.color[0].bind(2),\n\t                    viewSize: this.viewSize,\n\t                    viewRes: this.viewRes\n\t                });\n\t\n\t                this.particles.step(this.uniforms.update);\n\t\n\t                this.gl.enable(this.gl.BLEND);\n\t                this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @todo Find a way to use free texture bind units without having to\n\t         *       manually remember them\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            this.viewport();\n\t\n\t            // Flow FBO and view renders\n\t\n\t            Object.assign(this.uniforms.render, this.state, {\n\t                time: this.timer.time,\n\t                previous: this.particles.buffers[1].color[0].bind(1),\n\t                viewSize: this.viewSize,\n\t                viewRes: this.viewRes,\n\t\n\t                colorMap: (this.colorMap.color && this.colorMap.color[0] ? this.colorMap.color[0] : this.colorMap).bind(2),\n\t                colorMapRes: this.colorMap.shape\n\t            });\n\t\n\t            this.particles.render = this.flowShader;\n\t\n\t            // Render to the flow FBO - after the logic render, so particles don't\n\t            // respond to their own flow.\n\t\n\t            this.flow.bind();\n\t\n\t            this.gl.lineWidth(Math.max(0, this.state.flowWidth));\n\t            this.particles.draw(this.uniforms.render, this.gl.LINES);\n\t\n\t            /**\n\t             * @todo Mipmaps for global flow sampling - not working at the moment.\n\t             * @todo Instead of auto-generating mipmaps, should we re-render at each\n\t             *       scale, with different opacities and line widths? This would\n\t             *       mean the influence is spread out when drawing, instead of when\n\t             *       sampling.\n\t             */\n\t            // this.flow.color[0].generateMipmap();\n\t\n\t\n\t            // Render to the view.\n\t\n\t            if (this.buffers.length === 0) {\n\t                // Render the particles directly to the screen\n\t                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n\t            } else {\n\t                // Multi-buffer passes\n\t                this.buffers[0].bind();\n\t            }\n\t\n\t            if (this.state.autoClearView) {\n\t                this.clearView();\n\t            }\n\t\n\t            if (this.state.autoFade) {\n\t                this.drawFade();\n\t            }\n\t\n\t            // Draw the particles\n\t            this.particles.render = this.renderShader;\n\t            this.gl.lineWidth(Math.max(0, this.state.lineWidth));\n\t            this.particles.draw(this.uniforms.render, this.gl.LINES);\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'drawFade',\n\t        value: function drawFade() {\n\t            if (this.state.fadeColor[3] > 0) {\n\t                this.drawFill(this.state.fadeColor);\n\t            }\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'drawFill',\n\t        value: function drawFill() {\n\t            var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.fadeColor;\n\t\n\t            this.fillShader.bind();\n\t            this.fillShader.uniforms.color = color;\n\t            this.screen.render();\n\t\n\t            return this;\n\t        }\n\t\n\t        // Draw a buffer's contents to the screen\n\t\n\t    }, {\n\t        key: 'drawBuffer',\n\t        value: function drawBuffer(index) {\n\t            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n\t\n\t            if (this.state.autoClearView) {\n\t                this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\t            }\n\t\n\t            return this.copyBuffer(index).stepBuffers();\n\t        }\n\t\n\t        // Copy a buffer's contents into the current render target\n\t\n\t    }, {\n\t        key: 'copyBuffer',\n\t        value: function copyBuffer() {\n\t            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t            if (index < this.buffers.length) {\n\t                this.copyShader.bind();\n\t\n\t                Object.assign(this.copyShader.uniforms, {\n\t                    view: this.buffers[index].color[0].bind(0),\n\t                    viewRes: this.viewRes\n\t                });\n\t\n\t                this.screen.render();\n\t            }\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'stepBuffers',\n\t        value: function stepBuffers() {\n\t            if (this.buffers.length > 1) {\n\t                (0, _utils.step)(this.buffers);\n\t            }\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'resize',\n\t        value: function resize() {\n\t            var _this2 = this;\n\t\n\t            this.viewRes[0] = this.gl.drawingBufferWidth;\n\t            this.viewRes[1] = this.gl.drawingBufferHeight;\n\t\n\t            // NDC dimensions in the range [-1, 1] -> [-(max radius), (max radius)]\n\t            (0, _aspect.coverAspect)(this.viewSize, this.viewRes);\n\t\n\t            // this.pow2Res.fill(nextPow2(Math.max(...this.viewRes)));\n\t\n\t            this.buffers.forEach(function (buffer) {\n\t                return buffer.shape = _this2.viewRes;\n\t            });\n\t\n\t            // this.flow.shape = this.pow2Res;\n\t            this.flow.shape = this.viewRes;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'viewport',\n\t        value: function viewport() {\n\t            /**\n\t             * @todo Why do these 2 lines seem to be equivalent? Something to do\n\t             *       with how `gl-big-triangle` scales its geometry over the screen?\n\t             */\n\t            // this.gl.viewport(0, 0, 1, 1);\n\t            this.gl.viewport(0, 0, this.viewRes[0], this.viewRes[1]);\n\t\n\t            return this;\n\t        }\n\t\n\t        // Respawn\n\t\n\t        // Populate the particles with the given spawn function\n\t\n\t    }, {\n\t        key: 'spawn',\n\t        value: function spawn() {\n\t            var spawner = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _cpu2.default;\n\t\n\t            this.particles.spawn(spawner);\n\t\n\t            return this;\n\t        }\n\t\n\t        // Respawn on the GPU using a given shader\n\t\n\t    }, {\n\t        key: 'spawnShader',\n\t        value: function spawnShader(shader, update) {\n\t            var _particles;\n\t\n\t            this.timer.tick();\n\t\n\t            this.particles.logic = shader;\n\t\n\t            // @todo Allow switching between the particles data and the targets.\n\t\n\t            // Disabling blending here is important\n\t            this.gl.disable(this.gl.BLEND);\n\t\n\t            for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t                rest[_key - 2] = arguments[_key];\n\t            }\n\t\n\t            (_particles = this.particles).step.apply(_particles, [_particles3.default.applyUpdate(_extends({}, this.state, {\n\t                time: this.timer.time,\n\t                viewSize: this.viewSize,\n\t                viewRes: this.viewRes\n\t            }), update)].concat(rest));\n\t\n\t            this.particles.logic = this.logicShader;\n\t\n\t            this.gl.enable(this.gl.BLEND);\n\t            this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\t\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Tendrils;\n\t}();\n\t\n\texports.default = Tendrils;\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tvar createTexture = __webpack_require__(123)\n\t\n\tmodule.exports = createFBO\n\t\n\tvar colorAttachmentArrays = null\n\tvar FRAMEBUFFER_UNSUPPORTED\n\tvar FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n\tvar FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n\tvar FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n\t\n\tfunction saveFBOState(gl) {\n\t  var fbo = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n\t  var rbo = gl.getParameter(gl.RENDERBUFFER_BINDING)\n\t  var tex = gl.getParameter(gl.TEXTURE_BINDING_2D)\n\t  return [fbo, rbo, tex]\n\t}\n\t\n\tfunction restoreFBOState(gl, data) {\n\t  gl.bindFramebuffer(gl.FRAMEBUFFER, data[0])\n\t  gl.bindRenderbuffer(gl.RENDERBUFFER, data[1])\n\t  gl.bindTexture(gl.TEXTURE_2D, data[2])\n\t}\n\t\n\tfunction lazyInitColorAttachments(gl, ext) {\n\t  var maxColorAttachments = gl.getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL)\n\t  colorAttachmentArrays = new Array(maxColorAttachments + 1)\n\t  for(var i=0; i<=maxColorAttachments; ++i) {\n\t    var x = new Array(maxColorAttachments)\n\t    for(var j=0; j<i; ++j) {\n\t      x[j] = gl.COLOR_ATTACHMENT0 + j\n\t    }\n\t    for(var j=i; j<maxColorAttachments; ++j) {\n\t      x[j] = gl.NONE\n\t    }\n\t    colorAttachmentArrays[i] = x\n\t  }\n\t}\n\t\n\t//Throw an appropriate error\n\tfunction throwFBOError(status) {\n\t  switch(status){\n\t    case FRAMEBUFFER_UNSUPPORTED:\n\t      throw new Error('gl-fbo: Framebuffer unsupported')\n\t    case FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n\t      throw new Error('gl-fbo: Framebuffer incomplete attachment')\n\t    case FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n\t      throw new Error('gl-fbo: Framebuffer incomplete dimensions')\n\t    case FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n\t      throw new Error('gl-fbo: Framebuffer incomplete missing attachment')\n\t    default:\n\t      throw new Error('gl-fbo: Framebuffer failed for unspecified reason')\n\t  }\n\t}\n\t\n\t//Initialize a texture object\n\tfunction initTexture(gl, width, height, type, format, attachment) {\n\t  if(!type) {\n\t    return null\n\t  }\n\t  var result = createTexture(gl, width, height, format, type)\n\t  result.magFilter = gl.NEAREST\n\t  result.minFilter = gl.NEAREST\n\t  result.mipSamples = 1\n\t  result.bind()\n\t  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, result.handle, 0)\n\t  return result\n\t}\n\t\n\t//Initialize a render buffer object\n\tfunction initRenderBuffer(gl, width, height, component, attachment) {\n\t  var result = gl.createRenderbuffer()\n\t  gl.bindRenderbuffer(gl.RENDERBUFFER, result)\n\t  gl.renderbufferStorage(gl.RENDERBUFFER, component, width, height)\n\t  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, result)\n\t  return result\n\t}\n\t\n\t//Rebuild the frame buffer\n\tfunction rebuildFBO(fbo) {\n\t\n\t  //Save FBO state\n\t  var state = saveFBOState(fbo.gl)\n\t\n\t  var gl = fbo.gl\n\t  var handle = fbo.handle = gl.createFramebuffer()\n\t  var width = fbo._shape[0]\n\t  var height = fbo._shape[1]\n\t  var numColors = fbo.color.length\n\t  var ext = fbo._ext\n\t  var useStencil = fbo._useStencil\n\t  var useDepth = fbo._useDepth\n\t  var colorType = fbo._colorType\n\t\n\t  //Bind the fbo\n\t  gl.bindFramebuffer(gl.FRAMEBUFFER, handle)\n\t\n\t  //Allocate color buffers\n\t  for(var i=0; i<numColors; ++i) {\n\t    fbo.color[i] = initTexture(gl, width, height, colorType, gl.RGBA, gl.COLOR_ATTACHMENT0 + i)\n\t  }\n\t  if(numColors === 0) {\n\t    fbo._color_rb = initRenderBuffer(gl, width, height, gl.RGBA4, gl.COLOR_ATTACHMENT0)\n\t    if(ext) {\n\t      ext.drawBuffersWEBGL(colorAttachmentArrays[0])\n\t    }\n\t  } else if(numColors > 1) {\n\t    ext.drawBuffersWEBGL(colorAttachmentArrays[numColors])\n\t  }\n\t\n\t  //Allocate depth/stencil buffers\n\t  var WEBGL_depth_texture = gl.getExtension('WEBGL_depth_texture')\n\t  if(WEBGL_depth_texture) {\n\t    if(useStencil) {\n\t      fbo.depth = initTexture(gl, width, height,\n\t                          WEBGL_depth_texture.UNSIGNED_INT_24_8_WEBGL,\n\t                          gl.DEPTH_STENCIL,\n\t                          gl.DEPTH_STENCIL_ATTACHMENT)\n\t    } else if(useDepth) {\n\t      fbo.depth = initTexture(gl, width, height,\n\t                          gl.UNSIGNED_SHORT,\n\t                          gl.DEPTH_COMPONENT,\n\t                          gl.DEPTH_ATTACHMENT)\n\t    }\n\t  } else {\n\t    if(useDepth && useStencil) {\n\t      fbo._depth_rb = initRenderBuffer(gl, width, height, gl.DEPTH_STENCIL, gl.DEPTH_STENCIL_ATTACHMENT)\n\t    } else if(useDepth) {\n\t      fbo._depth_rb = initRenderBuffer(gl, width, height, gl.DEPTH_COMPONENT16, gl.DEPTH_ATTACHMENT)\n\t    } else if(useStencil) {\n\t      fbo._depth_rb = initRenderBuffer(gl, width, height, gl.STENCIL_INDEX, gl.STENCIL_ATTACHMENT)\n\t    }\n\t  }\n\t\n\t  //Check frame buffer state\n\t  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n\t  if(status !== gl.FRAMEBUFFER_COMPLETE) {\n\t\n\t    //Release all partially allocated resources\n\t    fbo._destroyed = true\n\t\n\t    //Release all resources\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t    gl.deleteFramebuffer(fbo.handle)\n\t    fbo.handle = null\n\t    if(fbo.depth) {\n\t      fbo.depth.dispose()\n\t      fbo.depth = null\n\t    }\n\t    if(fbo._depth_rb) {\n\t      gl.deleteRenderbuffer(fbo._depth_rb)\n\t      fbo._depth_rb = null\n\t    }\n\t    for(var i=0; i<fbo.color.length; ++i) {\n\t      fbo.color[i].dispose()\n\t      fbo.color[i] = null\n\t    }\n\t    if(fbo._color_rb) {\n\t      gl.deleteRenderbuffer(fbo._color_rb)\n\t      fbo._color_rb = null\n\t    }\n\t\n\t    restoreFBOState(gl, state)\n\t\n\t    //Throw the frame buffer error\n\t    throwFBOError(status)\n\t  }\n\t\n\t  //Everything ok, let's get on with life\n\t  restoreFBOState(gl, state)\n\t}\n\t\n\tfunction Framebuffer(gl, width, height, colorType, numColors, useDepth, useStencil, ext) {\n\t\n\t  //Handle and set properties\n\t  this.gl = gl\n\t  this._shape = [width|0, height|0]\n\t  this._destroyed = false\n\t  this._ext = ext\n\t\n\t  //Allocate buffers\n\t  this.color = new Array(numColors)\n\t  for(var i=0; i<numColors; ++i) {\n\t    this.color[i] = null\n\t  }\n\t  this._color_rb = null\n\t  this.depth = null\n\t  this._depth_rb = null\n\t\n\t  //Save depth and stencil flags\n\t  this._colorType = colorType\n\t  this._useDepth = useDepth\n\t  this._useStencil = useStencil\n\t\n\t  //Shape vector for resizing\n\t  var parent = this\n\t  var shapeVector = [width|0, height|0]\n\t  Object.defineProperties(shapeVector, {\n\t    0: {\n\t      get: function() {\n\t        return parent._shape[0]\n\t      },\n\t      set: function(w) {\n\t        return parent.width = w\n\t      }\n\t    },\n\t    1: {\n\t      get: function() {\n\t        return parent._shape[1]\n\t      },\n\t      set: function(h) {\n\t        return parent.height = h\n\t      }\n\t    }\n\t  })\n\t  this._shapeVector = shapeVector\n\t\n\t  //Initialize all attachments\n\t  rebuildFBO(this)\n\t}\n\t\n\tvar proto = Framebuffer.prototype\n\t\n\tfunction reshapeFBO(fbo, w, h) {\n\t  //If fbo is invalid, just skip this\n\t  if(fbo._destroyed) {\n\t    throw new Error('gl-fbo: Can\\'t resize destroyed FBO')\n\t  }\n\t\n\t  //Don't resize if no change in shape\n\t  if( (fbo._shape[0] === w) &&\n\t      (fbo._shape[1] === h) ) {\n\t    return\n\t  }\n\t\n\t  var gl = fbo.gl\n\t\n\t  //Check parameter ranges\n\t  var maxFBOSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)\n\t  if( w < 0 || w > maxFBOSize ||\n\t      h < 0 || h > maxFBOSize) {\n\t    throw new Error('gl-fbo: Can\\'t resize FBO, invalid dimensions')\n\t  }\n\t\n\t  //Update shape\n\t  fbo._shape[0] = w\n\t  fbo._shape[1] = h\n\t\n\t  //Save framebuffer state\n\t  var state = saveFBOState(gl)\n\t\n\t  //Resize framebuffer attachments\n\t  for(var i=0; i<fbo.color.length; ++i) {\n\t    fbo.color[i].shape = fbo._shape\n\t  }\n\t  if(fbo._color_rb) {\n\t    gl.bindRenderbuffer(gl.RENDERBUFFER, fbo._color_rb)\n\t    gl.renderbufferStorage(gl.RENDERBUFFER, gl.RGBA4, fbo._shape[0], fbo._shape[1])\n\t  }\n\t  if(fbo.depth) {\n\t    fbo.depth.shape = fbo._shape\n\t  }\n\t  if(fbo._depth_rb) {\n\t    gl.bindRenderbuffer(gl.RENDERBUFFER, fbo._depth_rb)\n\t    if(fbo._useDepth && fbo._useStencil) {\n\t      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, fbo._shape[0], fbo._shape[1])\n\t    } else if(fbo._useDepth) {\n\t      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, fbo._shape[0], fbo._shape[1])\n\t    } else if(fbo._useStencil) {\n\t      gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX, fbo._shape[0], fbo._shape[1])\n\t    }\n\t  }\n\t\n\t  //Check FBO status after resize, if something broke then die in a fire\n\t  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.handle)\n\t  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n\t  if(status !== gl.FRAMEBUFFER_COMPLETE) {\n\t    fbo.dispose()\n\t    restoreFBOState(gl, state)\n\t    throwFBOError(status)\n\t  }\n\t\n\t  //Restore framebuffer state\n\t  restoreFBOState(gl, state)\n\t}\n\t\n\tObject.defineProperties(proto, {\n\t  'shape': {\n\t    get: function() {\n\t      if(this._destroyed) {\n\t        return [0,0]\n\t      }\n\t      return this._shapeVector\n\t    },\n\t    set: function(x) {\n\t      if(!Array.isArray(x)) {\n\t        x = [x|0, x|0]\n\t      }\n\t      if(x.length !== 2) {\n\t        throw new Error('gl-fbo: Shape vector must be length 2')\n\t      }\n\t\n\t      var w = x[0]|0\n\t      var h = x[1]|0\n\t      reshapeFBO(this, w, h)\n\t\n\t      return [w, h]\n\t    },\n\t    enumerable: false\n\t  },\n\t  'width': {\n\t    get: function() {\n\t      if(this._destroyed) {\n\t        return 0\n\t      }\n\t      return this._shape[0]\n\t    },\n\t    set: function(w) {\n\t      w = w|0\n\t      reshapeFBO(this, w, this._shape[1])\n\t      return w\n\t    },\n\t    enumerable: false\n\t  },\n\t  'height': {\n\t    get: function() {\n\t      if(this._destroyed) {\n\t        return 0\n\t      }\n\t      return this._shape[1]\n\t    },\n\t    set: function(h) {\n\t      h = h|0\n\t      reshapeFBO(this, this._shape[0], h)\n\t      return h\n\t    },\n\t    enumerable: false\n\t  }\n\t})\n\t\n\tproto.bind = function() {\n\t  if(this._destroyed) {\n\t    return\n\t  }\n\t  var gl = this.gl\n\t  gl.bindFramebuffer(gl.FRAMEBUFFER, this.handle)\n\t  gl.viewport(0, 0, this._shape[0], this._shape[1])\n\t}\n\t\n\tproto.dispose = function() {\n\t  if(this._destroyed) {\n\t    return\n\t  }\n\t  this._destroyed = true\n\t  var gl = this.gl\n\t  gl.deleteFramebuffer(this.handle)\n\t  this.handle = null\n\t  if(this.depth) {\n\t    this.depth.dispose()\n\t    this.depth = null\n\t  }\n\t  if(this._depth_rb) {\n\t    gl.deleteRenderbuffer(this._depth_rb)\n\t    this._depth_rb = null\n\t  }\n\t  for(var i=0; i<this.color.length; ++i) {\n\t    this.color[i].dispose()\n\t    this.color[i] = null\n\t  }\n\t  if(this._color_rb) {\n\t    gl.deleteRenderbuffer(this._color_rb)\n\t    this._color_rb = null\n\t  }\n\t}\n\t\n\tfunction createFBO(gl, width, height, options) {\n\t\n\t  //Update frame buffer error code values\n\t  if(!FRAMEBUFFER_UNSUPPORTED) {\n\t    FRAMEBUFFER_UNSUPPORTED = gl.FRAMEBUFFER_UNSUPPORTED\n\t    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n\t    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n\t    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n\t  }\n\t\n\t  //Lazily initialize color attachment arrays\n\t  var WEBGL_draw_buffers = gl.getExtension('WEBGL_draw_buffers')\n\t  if(!colorAttachmentArrays && WEBGL_draw_buffers) {\n\t    lazyInitColorAttachments(gl, WEBGL_draw_buffers)\n\t  }\n\t\n\t  //Special case: Can accept an array as argument\n\t  if(Array.isArray(width)) {\n\t    options = height\n\t    height = width[1]|0\n\t    width = width[0]|0\n\t  }\n\t\n\t  if(typeof width !== 'number') {\n\t    throw new Error('gl-fbo: Missing shape parameter')\n\t  }\n\t\n\t  //Validate width/height properties\n\t  var maxFBOSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)\n\t  if(width < 0 || width > maxFBOSize || height < 0 || height > maxFBOSize) {\n\t    throw new Error('gl-fbo: Parameters are too large for FBO')\n\t  }\n\t\n\t  //Handle each option type\n\t  options = options || {}\n\t\n\t  //Figure out number of color buffers to use\n\t  var numColors = 1\n\t  if('color' in options) {\n\t    numColors = Math.max(options.color|0, 0)\n\t    if(numColors < 0) {\n\t      throw new Error('gl-fbo: Must specify a nonnegative number of colors')\n\t    }\n\t    if(numColors > 1) {\n\t      //Check if multiple render targets supported\n\t      if(!WEBGL_draw_buffers) {\n\t        throw new Error('gl-fbo: Multiple draw buffer extension not supported')\n\t      } else if(numColors > gl.getParameter(WEBGL_draw_buffers.MAX_COLOR_ATTACHMENTS_WEBGL)) {\n\t        throw new Error('gl-fbo: Context does not support ' + numColors + ' draw buffers')\n\t      }\n\t    }\n\t  }\n\t\n\t  //Determine whether to use floating point textures\n\t  var colorType = gl.UNSIGNED_BYTE\n\t  var OES_texture_float = gl.getExtension('OES_texture_float')\n\t  if(options.float && numColors > 0) {\n\t    if(!OES_texture_float) {\n\t      throw new Error('gl-fbo: Context does not support floating point textures')\n\t    }\n\t    colorType = gl.FLOAT\n\t  } else if(options.preferFloat && numColors > 0) {\n\t    if(OES_texture_float) {\n\t      colorType = gl.FLOAT\n\t    }\n\t  }\n\t\n\t  //Check if we should use depth buffer\n\t  var useDepth = true\n\t  if('depth' in options) {\n\t    useDepth = !!options.depth\n\t  }\n\t\n\t  //Check if we should use a stencil buffer\n\t  var useStencil = false\n\t  if('stencil' in options) {\n\t    useStencil = !!options.stencil\n\t  }\n\t\n\t  return new Framebuffer(\n\t    gl,\n\t    width,\n\t    height,\n\t    colorType,\n\t    numColors,\n\t    useDepth,\n\t    useStencil,\n\t    WEBGL_draw_buffers)\n\t}\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\tvar ndarray = __webpack_require__(124)\n\tvar ops     = __webpack_require__(127)\n\tvar pool    = __webpack_require__(132)\n\t\n\tmodule.exports = createTexture2D\n\t\n\tvar linearTypes = null\n\tvar filterTypes = null\n\tvar wrapTypes   = null\n\t\n\tfunction lazyInitLinearTypes(gl) {\n\t  linearTypes = [\n\t    gl.LINEAR,\n\t    gl.NEAREST_MIPMAP_LINEAR,\n\t    gl.LINEAR_MIPMAP_NEAREST,\n\t    gl.LINEAR_MIPMAP_NEAREST\n\t  ]\n\t  filterTypes = [\n\t    gl.NEAREST,\n\t    gl.LINEAR,\n\t    gl.NEAREST_MIPMAP_NEAREST,\n\t    gl.NEAREST_MIPMAP_LINEAR,\n\t    gl.LINEAR_MIPMAP_NEAREST,\n\t    gl.LINEAR_MIPMAP_LINEAR\n\t  ]\n\t  wrapTypes = [\n\t    gl.REPEAT,\n\t    gl.CLAMP_TO_EDGE,\n\t    gl.MIRRORED_REPEAT\n\t  ]\n\t}\n\t\n\tfunction acceptTextureDOM (obj) {\n\t  return (\n\t    ('undefined' != typeof HTMLCanvasElement && obj instanceof HTMLCanvasElement) ||\n\t    ('undefined' != typeof HTMLImageElement && obj instanceof HTMLImageElement) ||\n\t    ('undefined' != typeof HTMLVideoElement && obj instanceof HTMLVideoElement) ||\n\t    ('undefined' != typeof ImageData && obj instanceof ImageData))\n\t}\n\t\n\tvar convertFloatToUint8 = function(out, inp) {\n\t  ops.muls(out, inp, 255.0)\n\t}\n\t\n\tfunction reshapeTexture(tex, w, h) {\n\t  var gl = tex.gl\n\t  var maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n\t  if(w < 0 || w > maxSize || h < 0 || h > maxSize) {\n\t    throw new Error('gl-texture2d: Invalid texture size')\n\t  }\n\t  tex._shape = [w, h]\n\t  tex.bind()\n\t  gl.texImage2D(gl.TEXTURE_2D, 0, tex.format, w, h, 0, tex.format, tex.type, null)\n\t  tex._mipLevels = [0]\n\t  return tex\n\t}\n\t\n\tfunction Texture2D(gl, handle, width, height, format, type) {\n\t  this.gl = gl\n\t  this.handle = handle\n\t  this.format = format\n\t  this.type = type\n\t  this._shape = [width, height]\n\t  this._mipLevels = [0]\n\t  this._magFilter = gl.NEAREST\n\t  this._minFilter = gl.NEAREST\n\t  this._wrapS = gl.CLAMP_TO_EDGE\n\t  this._wrapT = gl.CLAMP_TO_EDGE\n\t  this._anisoSamples = 1\n\t\n\t  var parent = this\n\t  var wrapVector = [this._wrapS, this._wrapT]\n\t  Object.defineProperties(wrapVector, [\n\t    {\n\t      get: function() {\n\t        return parent._wrapS\n\t      },\n\t      set: function(v) {\n\t        return parent.wrapS = v\n\t      }\n\t    },\n\t    {\n\t      get: function() {\n\t        return parent._wrapT\n\t      },\n\t      set: function(v) {\n\t        return parent.wrapT = v\n\t      }\n\t    }\n\t  ])\n\t  this._wrapVector = wrapVector\n\t\n\t  var shapeVector = [this._shape[0], this._shape[1]]\n\t  Object.defineProperties(shapeVector, [\n\t    {\n\t      get: function() {\n\t        return parent._shape[0]\n\t      },\n\t      set: function(v) {\n\t        return parent.width = v\n\t      }\n\t    },\n\t    {\n\t      get: function() {\n\t        return parent._shape[1]\n\t      },\n\t      set: function(v) {\n\t        return parent.height = v\n\t      }\n\t    }\n\t  ])\n\t  this._shapeVector = shapeVector\n\t}\n\t\n\tvar proto = Texture2D.prototype\n\t\n\tObject.defineProperties(proto, {\n\t  minFilter: {\n\t    get: function() {\n\t      return this._minFilter\n\t    },\n\t    set: function(v) {\n\t      this.bind()\n\t      var gl = this.gl\n\t      if(this.type === gl.FLOAT && linearTypes.indexOf(v) >= 0) {\n\t        if(!gl.getExtension('OES_texture_float_linear')) {\n\t          v = gl.NEAREST\n\t        }\n\t      }\n\t      if(filterTypes.indexOf(v) < 0) {\n\t        throw new Error('gl-texture2d: Unknown filter mode ' + v)\n\t      }\n\t      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, v)\n\t      return this._minFilter = v\n\t    }\n\t  },\n\t  magFilter: {\n\t    get: function() {\n\t      return this._magFilter\n\t    },\n\t    set: function(v) {\n\t      this.bind()\n\t      var gl = this.gl\n\t      if(this.type === gl.FLOAT && linearTypes.indexOf(v) >= 0) {\n\t        if(!gl.getExtension('OES_texture_float_linear')) {\n\t          v = gl.NEAREST\n\t        }\n\t      }\n\t      if(filterTypes.indexOf(v) < 0) {\n\t        throw new Error('gl-texture2d: Unknown filter mode ' + v)\n\t      }\n\t      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, v)\n\t      return this._magFilter = v\n\t    }\n\t  },\n\t  mipSamples: {\n\t    get: function() {\n\t      return this._anisoSamples\n\t    },\n\t    set: function(i) {\n\t      var psamples = this._anisoSamples\n\t      this._anisoSamples = Math.max(i, 1)|0\n\t      if(psamples !== this._anisoSamples) {\n\t        var ext = this.gl.getExtension('EXT_texture_filter_anisotropic')\n\t        if(ext) {\n\t          this.gl.texParameterf(this.gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, this._anisoSamples)\n\t        }\n\t      }\n\t      return this._anisoSamples\n\t    }\n\t  },\n\t  wrapS: {\n\t    get: function() {\n\t      return this._wrapS\n\t    },\n\t    set: function(v) {\n\t      this.bind()\n\t      if(wrapTypes.indexOf(v) < 0) {\n\t        throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n\t      }\n\t      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, v)\n\t      return this._wrapS = v\n\t    }\n\t  },\n\t  wrapT: {\n\t    get: function() {\n\t      return this._wrapT\n\t    },\n\t    set: function(v) {\n\t      this.bind()\n\t      if(wrapTypes.indexOf(v) < 0) {\n\t        throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n\t      }\n\t      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, v)\n\t      return this._wrapT = v\n\t    }\n\t  },\n\t  wrap: {\n\t    get: function() {\n\t      return this._wrapVector\n\t    },\n\t    set: function(v) {\n\t      if(!Array.isArray(v)) {\n\t        v = [v,v]\n\t      }\n\t      if(v.length !== 2) {\n\t        throw new Error('gl-texture2d: Must specify wrap mode for rows and columns')\n\t      }\n\t      for(var i=0; i<2; ++i) {\n\t        if(wrapTypes.indexOf(v[i]) < 0) {\n\t          throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n\t        }\n\t      }\n\t      this._wrapS = v[0]\n\t      this._wrapT = v[1]\n\t\n\t      var gl = this.gl\n\t      this.bind()\n\t      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this._wrapS)\n\t      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this._wrapT)\n\t\n\t      return v\n\t    }\n\t  },\n\t  shape: {\n\t    get: function() {\n\t      return this._shapeVector\n\t    },\n\t    set: function(x) {\n\t      if(!Array.isArray(x)) {\n\t        x = [x|0,x|0]\n\t      } else {\n\t        if(x.length !== 2) {\n\t          throw new Error('gl-texture2d: Invalid texture shape')\n\t        }\n\t      }\n\t      reshapeTexture(this, x[0]|0, x[1]|0)\n\t      return [x[0]|0, x[1]|0]\n\t    }\n\t  },\n\t  width: {\n\t    get: function() {\n\t      return this._shape[0]\n\t    },\n\t    set: function(w) {\n\t      w = w|0\n\t      reshapeTexture(this, w, this._shape[1])\n\t      return w\n\t    }\n\t  },\n\t  height: {\n\t    get: function() {\n\t      return this._shape[1]\n\t    },\n\t    set: function(h) {\n\t      h = h|0\n\t      reshapeTexture(this, this._shape[0], h)\n\t      return h\n\t    }\n\t  }\n\t})\n\t\n\tproto.bind = function(unit) {\n\t  var gl = this.gl\n\t  if(unit !== undefined) {\n\t    gl.activeTexture(gl.TEXTURE0 + (unit|0))\n\t  }\n\t  gl.bindTexture(gl.TEXTURE_2D, this.handle)\n\t  if(unit !== undefined) {\n\t    return (unit|0)\n\t  }\n\t  return gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0\n\t}\n\t\n\tproto.dispose = function() {\n\t  this.gl.deleteTexture(this.handle)\n\t}\n\t\n\tproto.generateMipmap = function() {\n\t  this.bind()\n\t  this.gl.generateMipmap(this.gl.TEXTURE_2D)\n\t\n\t  //Update mip levels\n\t  var l = Math.min(this._shape[0], this._shape[1])\n\t  for(var i=0; l>0; ++i, l>>>=1) {\n\t    if(this._mipLevels.indexOf(i) < 0) {\n\t      this._mipLevels.push(i)\n\t    }\n\t  }\n\t}\n\t\n\tproto.setPixels = function(data, x_off, y_off, mip_level) {\n\t  var gl = this.gl\n\t  this.bind()\n\t  if(Array.isArray(x_off)) {\n\t    mip_level = y_off\n\t    y_off = x_off[1]|0\n\t    x_off = x_off[0]|0\n\t  } else {\n\t    x_off = x_off || 0\n\t    y_off = y_off || 0\n\t  }\n\t  mip_level = mip_level || 0\n\t  var directData = acceptTextureDOM(data) ? data : data.raw\n\t  if(directData) {\n\t    var needsMip = this._mipLevels.indexOf(mip_level) < 0\n\t    if(needsMip) {\n\t      gl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, directData)\n\t      this._mipLevels.push(mip_level)\n\t    } else {\n\t      gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, this.format, this.type, directData)\n\t    }\n\t  } else if(data.shape && data.stride && data.data) {\n\t    if(data.shape.length < 2 ||\n\t       x_off + data.shape[1] > this._shape[1]>>>mip_level ||\n\t       y_off + data.shape[0] > this._shape[0]>>>mip_level ||\n\t       x_off < 0 ||\n\t       y_off < 0) {\n\t      throw new Error('gl-texture2d: Texture dimensions are out of bounds')\n\t    }\n\t    texSubImageArray(gl, x_off, y_off, mip_level, this.format, this.type, this._mipLevels, data)\n\t  } else {\n\t    throw new Error('gl-texture2d: Unsupported data type')\n\t  }\n\t}\n\t\n\t\n\tfunction isPacked(shape, stride) {\n\t  if(shape.length === 3) {\n\t    return  (stride[2] === 1) &&\n\t            (stride[1] === shape[0]*shape[2]) &&\n\t            (stride[0] === shape[2])\n\t  }\n\t  return  (stride[0] === 1) &&\n\t          (stride[1] === shape[0])\n\t}\n\t\n\tfunction texSubImageArray(gl, x_off, y_off, mip_level, cformat, ctype, mipLevels, array) {\n\t  var dtype = array.dtype\n\t  var shape = array.shape.slice()\n\t  if(shape.length < 2 || shape.length > 3) {\n\t    throw new Error('gl-texture2d: Invalid ndarray, must be 2d or 3d')\n\t  }\n\t  var type = 0, format = 0\n\t  var packed = isPacked(shape, array.stride.slice())\n\t  if(dtype === 'float32') {\n\t    type = gl.FLOAT\n\t  } else if(dtype === 'float64') {\n\t    type = gl.FLOAT\n\t    packed = false\n\t    dtype = 'float32'\n\t  } else if(dtype === 'uint8') {\n\t    type = gl.UNSIGNED_BYTE\n\t  } else {\n\t    type = gl.UNSIGNED_BYTE\n\t    packed = false\n\t    dtype = 'uint8'\n\t  }\n\t  var channels = 1\n\t  if(shape.length === 2) {\n\t    format = gl.LUMINANCE\n\t    shape = [shape[0], shape[1], 1]\n\t    array = ndarray(array.data, shape, [array.stride[0], array.stride[1], 1], array.offset)\n\t  } else if(shape.length === 3) {\n\t    if(shape[2] === 1) {\n\t      format = gl.ALPHA\n\t    } else if(shape[2] === 2) {\n\t      format = gl.LUMINANCE_ALPHA\n\t    } else if(shape[2] === 3) {\n\t      format = gl.RGB\n\t    } else if(shape[2] === 4) {\n\t      format = gl.RGBA\n\t    } else {\n\t      throw new Error('gl-texture2d: Invalid shape for pixel coords')\n\t    }\n\t    channels = shape[2]\n\t  } else {\n\t    throw new Error('gl-texture2d: Invalid shape for texture')\n\t  }\n\t  //For 1-channel textures allow conversion between formats\n\t  if((format  === gl.LUMINANCE || format  === gl.ALPHA) &&\n\t     (cformat === gl.LUMINANCE || cformat === gl.ALPHA)) {\n\t    format = cformat\n\t  }\n\t  if(format !== cformat) {\n\t    throw new Error('gl-texture2d: Incompatible texture format for setPixels')\n\t  }\n\t  var size = array.size\n\t  var needsMip = mipLevels.indexOf(mip_level) < 0\n\t  if(needsMip) {\n\t    mipLevels.push(mip_level)\n\t  }\n\t  if(type === ctype && packed) {\n\t    //Array data types are compatible, can directly copy into texture\n\t    if(array.offset === 0 && array.data.length === size) {\n\t      if(needsMip) {\n\t        gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, array.data)\n\t      } else {\n\t        gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, array.data)\n\t      }\n\t    } else {\n\t      if(needsMip) {\n\t        gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, array.data.subarray(array.offset, array.offset+size))\n\t      } else {\n\t        gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, array.data.subarray(array.offset, array.offset+size))\n\t      }\n\t    }\n\t  } else {\n\t    //Need to do type conversion to pack data into buffer\n\t    var pack_buffer\n\t    if(ctype === gl.FLOAT) {\n\t      pack_buffer = pool.mallocFloat32(size)\n\t    } else {\n\t      pack_buffer = pool.mallocUint8(size)\n\t    }\n\t    var pack_view = ndarray(pack_buffer, shape, [shape[2], shape[2]*shape[0], 1])\n\t    if(type === gl.FLOAT && ctype === gl.UNSIGNED_BYTE) {\n\t      convertFloatToUint8(pack_view, array)\n\t    } else {\n\t      ops.assign(pack_view, array)\n\t    }\n\t    if(needsMip) {\n\t      gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, pack_buffer.subarray(0, size))\n\t    } else {\n\t      gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, pack_buffer.subarray(0, size))\n\t    }\n\t    if(ctype === gl.FLOAT) {\n\t      pool.freeFloat32(pack_buffer)\n\t    } else {\n\t      pool.freeUint8(pack_buffer)\n\t    }\n\t  }\n\t}\n\t\n\tfunction initTexture(gl) {\n\t  var tex = gl.createTexture()\n\t  gl.bindTexture(gl.TEXTURE_2D, tex)\n\t  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n\t  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n\t  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n\t  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n\t  return tex\n\t}\n\t\n\tfunction createTextureShape(gl, width, height, format, type) {\n\t  var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n\t  if(width < 0 || width > maxTextureSize || height < 0 || height  > maxTextureSize) {\n\t    throw new Error('gl-texture2d: Invalid texture shape')\n\t  }\n\t  if(type === gl.FLOAT && !gl.getExtension('OES_texture_float')) {\n\t    throw new Error('gl-texture2d: Floating point textures not supported on this platform')\n\t  }\n\t  var tex = initTexture(gl)\n\t  gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, null)\n\t  return new Texture2D(gl, tex, width, height, format, type)\n\t}\n\t\n\tfunction createTextureDOM(gl, directData, width, height, format, type) {\n\t  var tex = initTexture(gl)\n\t  gl.texImage2D(gl.TEXTURE_2D, 0, format, format, type, directData)\n\t  return new Texture2D(gl, tex, width, height, format, type)\n\t}\n\t\n\t//Creates a texture from an ndarray\n\tfunction createTextureArray(gl, array) {\n\t  var dtype = array.dtype\n\t  var shape = array.shape.slice()\n\t  var maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n\t  if(shape[0] < 0 || shape[0] > maxSize || shape[1] < 0 || shape[1] > maxSize) {\n\t    throw new Error('gl-texture2d: Invalid texture size')\n\t  }\n\t  var packed = isPacked(shape, array.stride.slice())\n\t  var type = 0\n\t  if(dtype === 'float32') {\n\t    type = gl.FLOAT\n\t  } else if(dtype === 'float64') {\n\t    type = gl.FLOAT\n\t    packed = false\n\t    dtype = 'float32'\n\t  } else if(dtype === 'uint8') {\n\t    type = gl.UNSIGNED_BYTE\n\t  } else {\n\t    type = gl.UNSIGNED_BYTE\n\t    packed = false\n\t    dtype = 'uint8'\n\t  }\n\t  var format = 0\n\t  if(shape.length === 2) {\n\t    format = gl.LUMINANCE\n\t    shape = [shape[0], shape[1], 1]\n\t    array = ndarray(array.data, shape, [array.stride[0], array.stride[1], 1], array.offset)\n\t  } else if(shape.length === 3) {\n\t    if(shape[2] === 1) {\n\t      format = gl.ALPHA\n\t    } else if(shape[2] === 2) {\n\t      format = gl.LUMINANCE_ALPHA\n\t    } else if(shape[2] === 3) {\n\t      format = gl.RGB\n\t    } else if(shape[2] === 4) {\n\t      format = gl.RGBA\n\t    } else {\n\t      throw new Error('gl-texture2d: Invalid shape for pixel coords')\n\t    }\n\t  } else {\n\t    throw new Error('gl-texture2d: Invalid shape for texture')\n\t  }\n\t  if(type === gl.FLOAT && !gl.getExtension('OES_texture_float')) {\n\t    type = gl.UNSIGNED_BYTE\n\t    packed = false\n\t  }\n\t  var buffer, buf_store\n\t  var size = array.size\n\t  if(!packed) {\n\t    var stride = [shape[2], shape[2]*shape[0], 1]\n\t    buf_store = pool.malloc(size, dtype)\n\t    var buf_array = ndarray(buf_store, shape, stride, 0)\n\t    if((dtype === 'float32' || dtype === 'float64') && type === gl.UNSIGNED_BYTE) {\n\t      convertFloatToUint8(buf_array, array)\n\t    } else {\n\t      ops.assign(buf_array, array)\n\t    }\n\t    buffer = buf_store.subarray(0, size)\n\t  } else if (array.offset === 0 && array.data.length === size) {\n\t    buffer = array.data\n\t  } else {\n\t    buffer = array.data.subarray(array.offset, array.offset + size)\n\t  }\n\t  var tex = initTexture(gl)\n\t  gl.texImage2D(gl.TEXTURE_2D, 0, format, shape[0], shape[1], 0, format, type, buffer)\n\t  if(!packed) {\n\t    pool.free(buf_store)\n\t  }\n\t  return new Texture2D(gl, tex, shape[0], shape[1], format, type)\n\t}\n\t\n\tfunction createTexture2D(gl) {\n\t  if(arguments.length <= 1) {\n\t    throw new Error('gl-texture2d: Missing arguments for texture2d constructor')\n\t  }\n\t  if(!linearTypes) {\n\t    lazyInitLinearTypes(gl)\n\t  }\n\t  if(typeof arguments[1] === 'number') {\n\t    return createTextureShape(gl, arguments[1], arguments[2], arguments[3]||gl.RGBA, arguments[4]||gl.UNSIGNED_BYTE)\n\t  }\n\t  if(Array.isArray(arguments[1])) {\n\t    return createTextureShape(gl, arguments[1][0]|0, arguments[1][1]|0, arguments[2]||gl.RGBA, arguments[3]||gl.UNSIGNED_BYTE)\n\t  }\n\t  if(typeof arguments[1] === 'object') {\n\t    var obj = arguments[1]\n\t    var directData = acceptTextureDOM(obj) ? obj : obj.raw\n\t    if (directData) {\n\t      return createTextureDOM(gl, directData, obj.width|0, obj.height|0, arguments[2]||gl.RGBA, arguments[3]||gl.UNSIGNED_BYTE)\n\t    } else if(obj.shape && obj.data && obj.stride) {\n\t      return createTextureArray(gl, obj)\n\t    }\n\t  }\n\t  throw new Error('gl-texture2d: Invalid arguments for texture2d constructor')\n\t}\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar iota = __webpack_require__(125)\n\tvar isBuffer = __webpack_require__(126)\n\t\n\tvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\t\n\tfunction compare1st(a, b) {\n\t  return a[0] - b[0]\n\t}\n\t\n\tfunction order() {\n\t  var stride = this.stride\n\t  var terms = new Array(stride.length)\n\t  var i\n\t  for(i=0; i<terms.length; ++i) {\n\t    terms[i] = [Math.abs(stride[i]), i]\n\t  }\n\t  terms.sort(compare1st)\n\t  var result = new Array(terms.length)\n\t  for(i=0; i<result.length; ++i) {\n\t    result[i] = terms[i][1]\n\t  }\n\t  return result\n\t}\n\t\n\tfunction compileConstructor(dtype, dimension) {\n\t  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n\t  if(dimension < 0) {\n\t    className = \"View_Nil\" + dtype\n\t  }\n\t  var useGetters = (dtype === \"generic\")\n\t\n\t  if(dimension === -1) {\n\t    //Special case for trivial arrays\n\t    var code =\n\t      \"function \"+className+\"(a){this.data=a;};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return -1};\\\n\tproto.size=0;\\\n\tproto.dimension=-1;\\\n\tproto.shape=proto.stride=proto.order=[];\\\n\tproto.lo=proto.hi=proto.transpose=proto.step=\\\n\tfunction(){return new \"+className+\"(this.data);};\\\n\tproto.get=proto.set=function(){};\\\n\tproto.pick=function(){return null};\\\n\treturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n\t    var procedure = new Function(code)\n\t    return procedure()\n\t  } else if(dimension === 0) {\n\t    //Special case for 0d arrays\n\t    var code =\n\t      \"function \"+className+\"(a,d) {\\\n\tthis.data = a;\\\n\tthis.offset = d\\\n\t};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return this.offset};\\\n\tproto.dimension=0;\\\n\tproto.size=1;\\\n\tproto.shape=\\\n\tproto.stride=\\\n\tproto.order=[];\\\n\tproto.lo=\\\n\tproto.hi=\\\n\tproto.transpose=\\\n\tproto.step=function \"+className+\"_copy() {\\\n\treturn new \"+className+\"(this.data,this.offset)\\\n\t};\\\n\tproto.pick=function \"+className+\"_pick(){\\\n\treturn TrivialArray(this.data);\\\n\t};\\\n\tproto.valueOf=proto.get=function \"+className+\"_get(){\\\n\treturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\t\"};\\\n\tproto.set=function \"+className+\"_set(v){\\\n\treturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n\t};\\\n\treturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n\t    var procedure = new Function(\"TrivialArray\", code)\n\t    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n\t  }\n\t\n\t  var code = [\"'use strict'\"]\n\t\n\t  //Create constructor for view\n\t  var indices = iota(dimension)\n\t  var args = indices.map(function(i) { return \"i\"+i })\n\t  var index_str = \"this.offset+\" + indices.map(function(i) {\n\t        return \"this.stride[\" + i + \"]*i\" + i\n\t      }).join(\"+\")\n\t  var shapeArg = indices.map(function(i) {\n\t      return \"b\"+i\n\t    }).join(\",\")\n\t  var strideArg = indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")\n\t  code.push(\n\t    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n\t      \"this.shape=[\" + shapeArg + \"]\",\n\t      \"this.stride=[\" + strideArg + \"]\",\n\t      \"this.offset=d|0}\",\n\t    \"var proto=\"+className+\".prototype\",\n\t    \"proto.dtype='\"+dtype+\"'\",\n\t    \"proto.dimension=\"+dimension)\n\t\n\t  //view.size:\n\t  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\n\treturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\t\"}})\")\n\t\n\t  //view.order:\n\t  if(dimension === 1) {\n\t    code.push(\"proto.order=[0]\")\n\t  } else {\n\t    code.push(\"Object.defineProperty(proto,'order',{get:\")\n\t    if(dimension < 4) {\n\t      code.push(\"function \"+className+\"_order(){\")\n\t      if(dimension === 2) {\n\t        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n\t      } else if(dimension === 3) {\n\t        code.push(\n\t\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\n\tif(s0>s1){\\\n\tif(s1>s2){\\\n\treturn [2,1,0];\\\n\t}else if(s0>s2){\\\n\treturn [1,2,0];\\\n\t}else{\\\n\treturn [1,0,2];\\\n\t}\\\n\t}else if(s0>s2){\\\n\treturn [2,0,1];\\\n\t}else if(s2>s1){\\\n\treturn [0,1,2];\\\n\t}else{\\\n\treturn [0,2,1];\\\n\t}}})\")\n\t      }\n\t    } else {\n\t      code.push(\"ORDER})\")\n\t    }\n\t  }\n\t\n\t  //view.set(i0, ..., v):\n\t  code.push(\n\t\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]=v}\")\n\t  }\n\t\n\t  //view.get(i0, ...):\n\t  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.get(\"+index_str+\")}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]}\")\n\t  }\n\t\n\t  //view.index:\n\t  code.push(\n\t    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\t\n\t  //view.hi():\n\t  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"this.stride[\"+i + \"]\"\n\t    }).join(\",\")+\",this.offset)}\")\n\t\n\t  //view.lo():\n\t  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n\t  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n\t  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\n\td=i\"+i+\"|0;\\\n\tb+=c\"+i+\"*d;\\\n\ta\"+i+\"-=d}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")+\",b)}\")\n\t\n\t  //view.step():\n\t  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n\t    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'){\\\n\td=i\"+i+\"|0;\\\n\tif(d<0){\\\n\tc+=b\"+i+\"*(a\"+i+\"-1);\\\n\ta\"+i+\"=ceil(-a\"+i+\"/d)\\\n\t}else{\\\n\ta\"+i+\"=ceil(a\"+i+\"/d)\\\n\t}\\\n\tb\"+i+\"*=d\\\n\t}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\" + i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\" + i\n\t    }).join(\",\")+\",c)}\")\n\t\n\t  //view.transpose():\n\t  var tShape = new Array(dimension)\n\t  var tStride = new Array(dimension)\n\t  for(var i=0; i<dimension; ++i) {\n\t    tShape[i] = \"a[i\"+i+\"]\"\n\t    tStride[i] = \"b[i\"+i+\"]\"\n\t  }\n\t  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n\t    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n\t    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\t\n\t  //view.pick():\n\t  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n\t  }\n\t  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\t\n\t  //Add return statement\n\t  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n\t    indices.map(function(i) {\n\t      return \"shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"stride[\"+i+\"]\"\n\t    }).join(\",\")+\",offset)}\")\n\t\n\t  //Compile procedure\n\t  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n\t  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n\t}\n\t\n\tfunction arrayDType(data) {\n\t  if(isBuffer(data)) {\n\t    return \"buffer\"\n\t  }\n\t  if(hasTypedArrays) {\n\t    switch(Object.prototype.toString.call(data)) {\n\t      case \"[object Float64Array]\":\n\t        return \"float64\"\n\t      case \"[object Float32Array]\":\n\t        return \"float32\"\n\t      case \"[object Int8Array]\":\n\t        return \"int8\"\n\t      case \"[object Int16Array]\":\n\t        return \"int16\"\n\t      case \"[object Int32Array]\":\n\t        return \"int32\"\n\t      case \"[object Uint8Array]\":\n\t        return \"uint8\"\n\t      case \"[object Uint16Array]\":\n\t        return \"uint16\"\n\t      case \"[object Uint32Array]\":\n\t        return \"uint32\"\n\t      case \"[object Uint8ClampedArray]\":\n\t        return \"uint8_clamped\"\n\t    }\n\t  }\n\t  if(Array.isArray(data)) {\n\t    return \"array\"\n\t  }\n\t  return \"generic\"\n\t}\n\t\n\tvar CACHED_CONSTRUCTORS = {\n\t  \"float32\":[],\n\t  \"float64\":[],\n\t  \"int8\":[],\n\t  \"int16\":[],\n\t  \"int32\":[],\n\t  \"uint8\":[],\n\t  \"uint16\":[],\n\t  \"uint32\":[],\n\t  \"array\":[],\n\t  \"uint8_clamped\":[],\n\t  \"buffer\":[],\n\t  \"generic\":[]\n\t}\n\t\n\t;(function() {\n\t  for(var id in CACHED_CONSTRUCTORS) {\n\t    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n\t  }\n\t});\n\t\n\tfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n\t  if(data === undefined) {\n\t    var ctor = CACHED_CONSTRUCTORS.array[0]\n\t    return ctor([])\n\t  } else if(typeof data === \"number\") {\n\t    data = [data]\n\t  }\n\t  if(shape === undefined) {\n\t    shape = [ data.length ]\n\t  }\n\t  var d = shape.length\n\t  if(stride === undefined) {\n\t    stride = new Array(d)\n\t    for(var i=d-1, sz=1; i>=0; --i) {\n\t      stride[i] = sz\n\t      sz *= shape[i]\n\t    }\n\t  }\n\t  if(offset === undefined) {\n\t    offset = 0\n\t    for(var i=0; i<d; ++i) {\n\t      if(stride[i] < 0) {\n\t        offset -= (shape[i]-1)*stride[i]\n\t      }\n\t    }\n\t  }\n\t  var dtype = arrayDType(data)\n\t  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n\t  while(ctor_list.length <= d+1) {\n\t    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n\t  }\n\t  var ctor = ctor_list[d+1]\n\t  return ctor(data, shape, stride, offset)\n\t}\n\t\n\tmodule.exports = wrappedNDArrayCtor\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction iota(n) {\n\t  var result = new Array(n)\n\t  for(var i=0; i<n; ++i) {\n\t    result[i] = i\n\t  }\n\t  return result\n\t}\n\t\n\tmodule.exports = iota\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports) {\n\n\t/*!\n\t * Determine if an object is a Buffer\n\t *\n\t * @author   Feross Aboukhadijeh <https://feross.org>\n\t * @license  MIT\n\t */\n\t\n\t// The _isBuffer check is for Safari 5-7 support, because it's missing\n\t// Object.prototype.constructor. Remove this eventually\n\tmodule.exports = function (obj) {\n\t  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n\t}\n\t\n\tfunction isBuffer (obj) {\n\t  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n\t}\n\t\n\t// For Node v0.10 support. Remove this eventually.\n\tfunction isSlowBuffer (obj) {\n\t  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n\t}\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar compile = __webpack_require__(128)\n\t\n\tvar EmptyProc = {\n\t  body: \"\",\n\t  args: [],\n\t  thisVars: [],\n\t  localVars: []\n\t}\n\t\n\tfunction fixup(x) {\n\t  if(!x) {\n\t    return EmptyProc\n\t  }\n\t  for(var i=0; i<x.args.length; ++i) {\n\t    var a = x.args[i]\n\t    if(i === 0) {\n\t      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n\t    } else {\n\t      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n\t    }\n\t  }\n\t  if(!x.thisVars) {\n\t    x.thisVars = []\n\t  }\n\t  if(!x.localVars) {\n\t    x.localVars = []\n\t  }\n\t  return x\n\t}\n\t\n\tfunction pcompile(user_args) {\n\t  return compile({\n\t    args:     user_args.args,\n\t    pre:      fixup(user_args.pre),\n\t    body:     fixup(user_args.body),\n\t    post:     fixup(user_args.proc),\n\t    funcName: user_args.funcName\n\t  })\n\t}\n\t\n\tfunction makeOp(user_args) {\n\t  var args = []\n\t  for(var i=0; i<user_args.args.length; ++i) {\n\t    args.push(\"a\"+i)\n\t  }\n\t  var wrapper = new Function(\"P\", [\n\t    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n\t  ].join(\"\"))\n\t  return wrapper(pcompile(user_args))\n\t}\n\t\n\tvar assign_ops = {\n\t  add:  \"+\",\n\t  sub:  \"-\",\n\t  mul:  \"*\",\n\t  div:  \"/\",\n\t  mod:  \"%\",\n\t  band: \"&\",\n\t  bor:  \"|\",\n\t  bxor: \"^\",\n\t  lshift: \"<<\",\n\t  rshift: \">>\",\n\t  rrshift: \">>>\"\n\t}\n\t;(function(){\n\t  for(var id in assign_ops) {\n\t    var op = assign_ops[id]\n\t    exports[id] = makeOp({\n\t      args: [\"array\",\"array\",\"array\"],\n\t      body: {args:[\"a\",\"b\",\"c\"],\n\t             body: \"a=b\"+op+\"c\"},\n\t      funcName: id\n\t    })\n\t    exports[id+\"eq\"] = makeOp({\n\t      args: [\"array\",\"array\"],\n\t      body: {args:[\"a\",\"b\"],\n\t             body:\"a\"+op+\"=b\"},\n\t      rvalue: true,\n\t      funcName: id+\"eq\"\n\t    })\n\t    exports[id+\"s\"] = makeOp({\n\t      args: [\"array\", \"array\", \"scalar\"],\n\t      body: {args:[\"a\",\"b\",\"s\"],\n\t             body:\"a=b\"+op+\"s\"},\n\t      funcName: id+\"s\"\n\t    })\n\t    exports[id+\"seq\"] = makeOp({\n\t      args: [\"array\",\"scalar\"],\n\t      body: {args:[\"a\",\"s\"],\n\t             body:\"a\"+op+\"=s\"},\n\t      rvalue: true,\n\t      funcName: id+\"seq\"\n\t    })\n\t  }\n\t})();\n\t\n\tvar unary_ops = {\n\t  not: \"!\",\n\t  bnot: \"~\",\n\t  neg: \"-\",\n\t  recip: \"1.0/\"\n\t}\n\t;(function(){\n\t  for(var id in unary_ops) {\n\t    var op = unary_ops[id]\n\t    exports[id] = makeOp({\n\t      args: [\"array\", \"array\"],\n\t      body: {args:[\"a\",\"b\"],\n\t             body:\"a=\"+op+\"b\"},\n\t      funcName: id\n\t    })\n\t    exports[id+\"eq\"] = makeOp({\n\t      args: [\"array\"],\n\t      body: {args:[\"a\"],\n\t             body:\"a=\"+op+\"a\"},\n\t      rvalue: true,\n\t      count: 2,\n\t      funcName: id+\"eq\"\n\t    })\n\t  }\n\t})();\n\t\n\tvar binary_ops = {\n\t  and: \"&&\",\n\t  or: \"||\",\n\t  eq: \"===\",\n\t  neq: \"!==\",\n\t  lt: \"<\",\n\t  gt: \">\",\n\t  leq: \"<=\",\n\t  geq: \">=\"\n\t}\n\t;(function() {\n\t  for(var id in binary_ops) {\n\t    var op = binary_ops[id]\n\t    exports[id] = makeOp({\n\t      args: [\"array\",\"array\",\"array\"],\n\t      body: {args:[\"a\", \"b\", \"c\"],\n\t             body:\"a=b\"+op+\"c\"},\n\t      funcName: id\n\t    })\n\t    exports[id+\"s\"] = makeOp({\n\t      args: [\"array\",\"array\",\"scalar\"],\n\t      body: {args:[\"a\", \"b\", \"s\"],\n\t             body:\"a=b\"+op+\"s\"},\n\t      funcName: id+\"s\"\n\t    })\n\t    exports[id+\"eq\"] = makeOp({\n\t      args: [\"array\", \"array\"],\n\t      body: {args:[\"a\", \"b\"],\n\t             body:\"a=a\"+op+\"b\"},\n\t      rvalue:true,\n\t      count:2,\n\t      funcName: id+\"eq\"\n\t    })\n\t    exports[id+\"seq\"] = makeOp({\n\t      args: [\"array\", \"scalar\"],\n\t      body: {args:[\"a\",\"s\"],\n\t             body:\"a=a\"+op+\"s\"},\n\t      rvalue:true,\n\t      count:2,\n\t      funcName: id+\"seq\"\n\t    })\n\t  }\n\t})();\n\t\n\tvar math_unary = [\n\t  \"abs\",\n\t  \"acos\",\n\t  \"asin\",\n\t  \"atan\",\n\t  \"ceil\",\n\t  \"cos\",\n\t  \"exp\",\n\t  \"floor\",\n\t  \"log\",\n\t  \"round\",\n\t  \"sin\",\n\t  \"sqrt\",\n\t  \"tan\"\n\t]\n\t;(function() {\n\t  for(var i=0; i<math_unary.length; ++i) {\n\t    var f = math_unary[i]\n\t    exports[f] = makeOp({\n\t                    args: [\"array\", \"array\"],\n\t                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n\t                    funcName: f\n\t                  })\n\t    exports[f+\"eq\"] = makeOp({\n\t                      args: [\"array\"],\n\t                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n\t                      rvalue: true,\n\t                      count: 2,\n\t                      funcName: f+\"eq\"\n\t                    })\n\t  }\n\t})();\n\t\n\tvar math_comm = [\n\t  \"max\",\n\t  \"min\",\n\t  \"atan2\",\n\t  \"pow\"\n\t]\n\t;(function(){\n\t  for(var i=0; i<math_comm.length; ++i) {\n\t    var f= math_comm[i]\n\t    exports[f] = makeOp({\n\t                  args:[\"array\", \"array\", \"array\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n\t                  funcName: f\n\t                })\n\t    exports[f+\"s\"] = makeOp({\n\t                  args:[\"array\", \"array\", \"scalar\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n\t                  funcName: f+\"s\"\n\t                  })\n\t    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n\t                  rvalue: true,\n\t                  count: 2,\n\t                  funcName: f+\"eq\"\n\t                  })\n\t    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n\t                  rvalue:true,\n\t                  count:2,\n\t                  funcName: f+\"seq\"\n\t                  })\n\t  }\n\t})();\n\t\n\tvar math_noncomm = [\n\t  \"atan2\",\n\t  \"pow\"\n\t]\n\t;(function(){\n\t  for(var i=0; i<math_noncomm.length; ++i) {\n\t    var f= math_noncomm[i]\n\t    exports[f+\"op\"] = makeOp({\n\t                  args:[\"array\", \"array\", \"array\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n\t                  funcName: f+\"op\"\n\t                })\n\t    exports[f+\"ops\"] = makeOp({\n\t                  args:[\"array\", \"array\", \"scalar\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n\t                  funcName: f+\"ops\"\n\t                  })\n\t    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n\t                  rvalue: true,\n\t                  count: 2,\n\t                  funcName: f+\"opeq\"\n\t                  })\n\t    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n\t                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n\t                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n\t                  rvalue:true,\n\t                  count:2,\n\t                  funcName: f+\"opseq\"\n\t                  })\n\t  }\n\t})();\n\t\n\texports.any = compile({\n\t  args:[\"array\"],\n\t  pre: EmptyProc,\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n\t  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n\t  funcName: \"any\"\n\t})\n\t\n\texports.all = compile({\n\t  args:[\"array\"],\n\t  pre: EmptyProc,\n\t  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n\t  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n\t  funcName: \"all\"\n\t})\n\t\n\texports.sum = compile({\n\t  args:[\"array\"],\n\t  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n\t  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n\t  funcName: \"sum\"\n\t})\n\t\n\texports.prod = compile({\n\t  args:[\"array\"],\n\t  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n\t  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n\t  funcName: \"prod\"\n\t})\n\t\n\texports.norm2squared = compile({\n\t  args:[\"array\"],\n\t  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n\t  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n\t  funcName: \"norm2squared\"\n\t})\n\t  \n\texports.norm2 = compile({\n\t  args:[\"array\"],\n\t  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n\t  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n\t  funcName: \"norm2\"\n\t})\n\t  \n\t\n\texports.norminf = compile({\n\t  args:[\"array\"],\n\t  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n\t  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n\t  funcName: \"norminf\"\n\t})\n\t\n\texports.norm1 = compile({\n\t  args:[\"array\"],\n\t  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n\t  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n\t  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n\t  funcName: \"norm1\"\n\t})\n\t\n\texports.sup = compile({\n\t  args: [ \"array\" ],\n\t  pre:\n\t   { body: \"this_h=-Infinity\",\n\t     args: [],\n\t     thisVars: [ \"this_h\" ],\n\t     localVars: [] },\n\t  body:\n\t   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n\t     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n\t     thisVars: [ \"this_h\" ],\n\t     localVars: [] },\n\t  post:\n\t   { body: \"return this_h\",\n\t     args: [],\n\t     thisVars: [ \"this_h\" ],\n\t     localVars: [] }\n\t })\n\t\n\texports.inf = compile({\n\t  args: [ \"array\" ],\n\t  pre:\n\t   { body: \"this_h=Infinity\",\n\t     args: [],\n\t     thisVars: [ \"this_h\" ],\n\t     localVars: [] },\n\t  body:\n\t   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n\t     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n\t     thisVars: [ \"this_h\" ],\n\t     localVars: [] },\n\t  post:\n\t   { body: \"return this_h\",\n\t     args: [],\n\t     thisVars: [ \"this_h\" ],\n\t     localVars: [] }\n\t })\n\t\n\texports.argmin = compile({\n\t  args:[\"index\",\"array\",\"shape\"],\n\t  pre:{\n\t    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n\t    args:[\n\t      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n\t      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n\t      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n\t      ],\n\t    thisVars:[\"this_i\",\"this_v\"],\n\t    localVars:[]},\n\t  body:{\n\t    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n\t    args:[\n\t      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n\t      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n\t    thisVars:[\"this_i\",\"this_v\"],\n\t    localVars:[\"_inline_1_k\"]},\n\t  post:{\n\t    body:\"{return this_i}\",\n\t    args:[],\n\t    thisVars:[\"this_i\"],\n\t    localVars:[]}\n\t})\n\t\n\texports.argmax = compile({\n\t  args:[\"index\",\"array\",\"shape\"],\n\t  pre:{\n\t    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n\t    args:[\n\t      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n\t      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n\t      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n\t      ],\n\t    thisVars:[\"this_i\",\"this_v\"],\n\t    localVars:[]},\n\t  body:{\n\t    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n\t    args:[\n\t      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n\t      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n\t    thisVars:[\"this_i\",\"this_v\"],\n\t    localVars:[\"_inline_1_k\"]},\n\t  post:{\n\t    body:\"{return this_i}\",\n\t    args:[],\n\t    thisVars:[\"this_i\"],\n\t    localVars:[]}\n\t})  \n\t\n\texports.random = makeOp({\n\t  args: [\"array\"],\n\t  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n\t  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n\t  funcName: \"random\"\n\t})\n\t\n\texports.assign = makeOp({\n\t  args:[\"array\", \"array\"],\n\t  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n\t  funcName: \"assign\" })\n\t\n\texports.assigns = makeOp({\n\t  args:[\"array\", \"scalar\"],\n\t  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n\t  funcName: \"assigns\" })\n\t\n\t\n\texports.equals = compile({\n\t  args:[\"array\", \"array\"],\n\t  pre: EmptyProc,\n\t  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n\t               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n\t        body: \"if(x!==y){return false}\", \n\t        localVars: [], \n\t        thisVars: []},\n\t  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n\t  funcName: \"equals\"\n\t})\n\t\n\t\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar createThunk = __webpack_require__(129)\n\t\n\tfunction Procedure() {\n\t  this.argTypes = []\n\t  this.shimArgs = []\n\t  this.arrayArgs = []\n\t  this.arrayBlockIndices = []\n\t  this.scalarArgs = []\n\t  this.offsetArgs = []\n\t  this.offsetArgIndex = []\n\t  this.indexArgs = []\n\t  this.shapeArgs = []\n\t  this.funcName = \"\"\n\t  this.pre = null\n\t  this.body = null\n\t  this.post = null\n\t  this.debug = false\n\t}\n\t\n\tfunction compileCwise(user_args) {\n\t  //Create procedure\n\t  var proc = new Procedure()\n\t  \n\t  //Parse blocks\n\t  proc.pre    = user_args.pre\n\t  proc.body   = user_args.body\n\t  proc.post   = user_args.post\n\t\n\t  //Parse arguments\n\t  var proc_args = user_args.args.slice(0)\n\t  proc.argTypes = proc_args\n\t  for(var i=0; i<proc_args.length; ++i) {\n\t    var arg_type = proc_args[i]\n\t    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n\t      proc.argTypes[i] = \"array\"\n\t      proc.arrayArgs.push(i)\n\t      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n\t      proc.shimArgs.push(\"array\" + i)\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n\t        throw new Error(\"cwise: pre() block may not reference array args\")\n\t      }\n\t      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n\t        throw new Error(\"cwise: post() block may not reference array args\")\n\t      }\n\t    } else if(arg_type === \"scalar\") {\n\t      proc.scalarArgs.push(i)\n\t      proc.shimArgs.push(\"scalar\" + i)\n\t    } else if(arg_type === \"index\") {\n\t      proc.indexArgs.push(i)\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n\t        throw new Error(\"cwise: pre() block may not reference array index\")\n\t      }\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n\t        throw new Error(\"cwise: body() block may not write to array index\")\n\t      }\n\t      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n\t        throw new Error(\"cwise: post() block may not reference array index\")\n\t      }\n\t    } else if(arg_type === \"shape\") {\n\t      proc.shapeArgs.push(i)\n\t      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n\t        throw new Error(\"cwise: pre() block may not write to array shape\")\n\t      }\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n\t        throw new Error(\"cwise: body() block may not write to array shape\")\n\t      }\n\t      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n\t        throw new Error(\"cwise: post() block may not write to array shape\")\n\t      }\n\t    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n\t      proc.argTypes[i] = \"offset\"\n\t      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n\t      proc.offsetArgIndex.push(i)\n\t    } else {\n\t      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n\t    }\n\t  }\n\t  \n\t  //Make sure at least one array argument was specified\n\t  if(proc.arrayArgs.length <= 0) {\n\t    throw new Error(\"cwise: No array arguments specified\")\n\t  }\n\t  \n\t  //Make sure arguments are correct\n\t  if(proc.pre.args.length > proc_args.length) {\n\t    throw new Error(\"cwise: Too many arguments in pre() block\")\n\t  }\n\t  if(proc.body.args.length > proc_args.length) {\n\t    throw new Error(\"cwise: Too many arguments in body() block\")\n\t  }\n\t  if(proc.post.args.length > proc_args.length) {\n\t    throw new Error(\"cwise: Too many arguments in post() block\")\n\t  }\n\t\n\t  //Check debug flag\n\t  proc.debug = !!user_args.printCode || !!user_args.debug\n\t  \n\t  //Retrieve name\n\t  proc.funcName = user_args.funcName || \"cwise\"\n\t  \n\t  //Read in block size\n\t  proc.blockSize = user_args.blockSize || 64\n\t\n\t  return createThunk(proc)\n\t}\n\t\n\tmodule.exports = compileCwise\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\t// The function below is called when constructing a cwise function object, and does the following:\n\t// A function object is constructed which accepts as argument a compilation function and returns another function.\n\t// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n\t// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n\t// The compilation passed to the first function object is used for compiling new functions.\n\t// Once this function object is created, it is called with compile as argument, where the first argument of compile\n\t// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n\t// So createThunk roughly works like this:\n\t// function createThunk(proc) {\n\t//   var thunk = function(compileBound) {\n\t//     var CACHED = {}\n\t//     return function(arrays and scalars) {\n\t//       if (dtype and order of arrays in CACHED) {\n\t//         var func = CACHED[dtype and order of arrays]\n\t//       } else {\n\t//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n\t//       }\n\t//       return func(arrays and scalars)\n\t//     }\n\t//   }\n\t//   return thunk(compile.bind1(proc))\n\t// }\n\t\n\tvar compile = __webpack_require__(130)\n\t\n\tfunction createThunk(proc) {\n\t  var code = [\"'use strict'\", \"var CACHED={}\"]\n\t  var vars = []\n\t  var thunkName = proc.funcName + \"_cwise_thunk\"\n\t  \n\t  //Build thunk\n\t  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n\t  var typesig = []\n\t  var string_typesig = []\n\t  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n\t                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n\t  var shapeLengthConditions = [], shapeConditions = []\n\t  // Process array arguments\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\n\t    var j = proc.arrayArgs[i]\n\t    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n\t               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n\t    typesig.push(\"t\" + j)\n\t    typesig.push(\"r\" + j)\n\t    string_typesig.push(\"t\"+j)\n\t    string_typesig.push(\"r\"+j+\".join()\")\n\t    proc_args.push(\"array\" + j + \".data\")\n\t    proc_args.push(\"array\" + j + \".stride\")\n\t    proc_args.push(\"array\" + j + \".offset|0\")\n\t    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n\t      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n\t      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n\t    }\n\t  }\n\t  // Check for shape equality\n\t  if (proc.arrayArgs.length > 1) {\n\t    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n\t    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n\t    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n\t    code.push(\"}\")\n\t  }\n\t  // Process scalar arguments\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\n\t    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n\t  }\n\t  // Check for cached function (and if not present, generate it)\n\t  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n\t  vars.push(\"proc=CACHED[type]\")\n\t  code.push(\"var \" + vars.join(\",\"))\n\t  \n\t  code.push([\"if(!proc){\",\n\t             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n\t             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\t\n\t  if(proc.debug) {\n\t    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n\t  }\n\t  \n\t  //Compile thunk\n\t  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n\t  return thunk(compile.bind(undefined, proc))\n\t}\n\t\n\tmodule.exports = createThunk\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar uniq = __webpack_require__(131)\n\t\n\t// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n\t// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\n\tfunction innerFill(order, proc, body) {\n\t  var dimension = order.length\n\t    , nargs = proc.arrayArgs.length\n\t    , has_index = proc.indexArgs.length>0\n\t    , code = []\n\t    , vars = []\n\t    , idx=0, pidx=0, i, j\n\t  for(i=0; i<dimension; ++i) { // Iteration variables\n\t    vars.push([\"i\",i,\"=0\"].join(\"\"))\n\t  }\n\t  //Compute scan deltas\n\t  for(j=0; j<nargs; ++j) {\n\t    for(i=0; i<dimension; ++i) {\n\t      pidx = idx\n\t      idx = order[i]\n\t      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n\t        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n\t      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n\t        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n\t      }\n\t    }\n\t  }\n\t  if (vars.length > 0) {\n\t    code.push(\"var \" + vars.join(\",\"))\n\t  }  \n\t  //Scan loop\n\t  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n\t    idx = order[i]\n\t    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n\t  }\n\t  //Push body of inner loop\n\t  code.push(body)\n\t  //Advance scan pointers\n\t  for(i=0; i<dimension; ++i) {\n\t    pidx = idx\n\t    idx = order[i]\n\t    for(j=0; j<nargs; ++j) {\n\t      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n\t    }\n\t    if(has_index) {\n\t      if(i > 0) {\n\t        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n\t      }\n\t      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n\t    }\n\t    code.push(\"}\")\n\t  }\n\t  return code.join(\"\\n\")\n\t}\n\t\n\t// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n\t// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n\t//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\n\tfunction outerFill(matched, order, proc, body) {\n\t  var dimension = order.length\n\t    , nargs = proc.arrayArgs.length\n\t    , blockSize = proc.blockSize\n\t    , has_index = proc.indexArgs.length > 0\n\t    , code = []\n\t  for(var i=0; i<nargs; ++i) {\n\t    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n\t  }\n\t  //Generate loops for unmatched dimensions\n\t  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n\t  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n\t  for(var i=matched; i<dimension; ++i) {\n\t    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n\t    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n\t    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n\t    code.push([\"j\",i,\"=0\"].join(\"\"))\n\t    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n\t    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n\t    if(has_index) {\n\t      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n\t    }\n\t  }\n\t  for(var i=0; i<nargs; ++i) {\n\t    var indexStr = [\"offset\"+i]\n\t    for(var j=matched; j<dimension; ++j) {\n\t      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n\t    }\n\t    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n\t  }\n\t  code.push(innerFill(order, proc, body))\n\t  for(var i=matched; i<dimension; ++i) {\n\t    code.push(\"}\")\n\t  }\n\t  return code.join(\"\\n\")\n\t}\n\t\n\t//Count the number of compatible inner orders\n\t// This is the length of the longest common prefix of the arrays in orders.\n\t// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n\t// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\n\tfunction countMatches(orders) {\n\t  var matched = 0, dimension = orders[0].length\n\t  while(matched < dimension) {\n\t    for(var j=1; j<orders.length; ++j) {\n\t      if(orders[j][matched] !== orders[0][matched]) {\n\t        return matched\n\t      }\n\t    }\n\t    ++matched\n\t  }\n\t  return matched\n\t}\n\t\n\t//Processes a block according to the given data types\n\t// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\n\tfunction processBlock(block, proc, dtypes) {\n\t  var code = block.body\n\t  var pre = []\n\t  var post = []\n\t  for(var i=0; i<block.args.length; ++i) {\n\t    var carg = block.args[i]\n\t    if(carg.count <= 0) {\n\t      continue\n\t    }\n\t    var re = new RegExp(carg.name, \"g\")\n\t    var ptrStr = \"\"\n\t    var arrNum = proc.arrayArgs.indexOf(i)\n\t    switch(proc.argTypes[i]) {\n\t      case \"offset\":\n\t        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n\t        var offArg = proc.offsetArgs[offArgIndex]\n\t        arrNum = offArg.array\n\t        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n\t      case \"array\":\n\t        ptrStr = \"p\" + arrNum + ptrStr\n\t        var localStr = \"l\" + i\n\t        var arrStr = \"a\" + arrNum\n\t        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n\t          if(carg.count === 1) { // Argument/array used only once(?)\n\t            if(dtypes[arrNum] === \"generic\") {\n\t              if(carg.lvalue) {\n\t                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n\t                code = code.replace(re, localStr)\n\t                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n\t              } else {\n\t                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n\t              }\n\t            } else {\n\t              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n\t            }\n\t          } else if(dtypes[arrNum] === \"generic\") {\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n\t            code = code.replace(re, localStr)\n\t            if(carg.lvalue) {\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n\t            }\n\t          } else {\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n\t            code = code.replace(re, localStr)\n\t            if(carg.lvalue) {\n\t              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n\t            }\n\t          }\n\t        } else { // Argument to body is a \"block\"\n\t          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n\t          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n\t            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n\t            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n\t          }\n\t          re = new RegExp(reStrArr.join(\"\"), \"g\")\n\t          ptrStr = ptrStrArr.join(\"+\")\n\t          if(dtypes[arrNum] === \"generic\") {\n\t            /*if(carg.lvalue) {\n\t              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n\t              code = code.replace(re, localStr)\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n\t            } else {\n\t              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n\t            }*/\n\t            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n\t          } else {\n\t            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n\t            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n\t          }\n\t        }\n\t      break\n\t      case \"scalar\":\n\t        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n\t      break\n\t      case \"index\":\n\t        code = code.replace(re, \"index\")\n\t      break\n\t      case \"shape\":\n\t        code = code.replace(re, \"shape\")\n\t      break\n\t    }\n\t  }\n\t  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n\t}\n\t\n\tfunction typeSummary(dtypes) {\n\t  var summary = new Array(dtypes.length)\n\t  var allEqual = true\n\t  for(var i=0; i<dtypes.length; ++i) {\n\t    var t = dtypes[i]\n\t    var digits = t.match(/\\d+/)\n\t    if(!digits) {\n\t      digits = \"\"\n\t    } else {\n\t      digits = digits[0]\n\t    }\n\t    if(t.charAt(0) === 0) {\n\t      summary[i] = \"u\" + t.charAt(1) + digits\n\t    } else {\n\t      summary[i] = t.charAt(0) + digits\n\t    }\n\t    if(i > 0) {\n\t      allEqual = allEqual && summary[i] === summary[i-1]\n\t    }\n\t  }\n\t  if(allEqual) {\n\t    return summary[0]\n\t  }\n\t  return summary.join(\"\")\n\t}\n\t\n\t//Generates a cwise operator\n\tfunction generateCWiseOp(proc, typesig) {\n\t\n\t  //Compute dimension\n\t  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n\t  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n\t  var orders = new Array(proc.arrayArgs.length)\n\t  var dtypes = new Array(proc.arrayArgs.length)\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\n\t    dtypes[i] = typesig[2*i]\n\t    orders[i] = typesig[2*i+1]\n\t  }\n\t  \n\t  //Determine where block and loop indices start and end\n\t  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n\t  var loopBegin = [], loopEnd = [] // These indices are iterated over\n\t  var loopOrders = [] // orders restricted to the loop indices\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\n\t    if (proc.arrayBlockIndices[i]<0) {\n\t      loopBegin.push(0)\n\t      loopEnd.push(dimension)\n\t      blockBegin.push(dimension)\n\t      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n\t    } else {\n\t      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n\t      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n\t      blockBegin.push(0)\n\t      blockEnd.push(proc.arrayBlockIndices[i])\n\t    }\n\t    var newOrder = []\n\t    for(var j=0; j<orders[i].length; j++) {\n\t      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n\t        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n\t      }\n\t    }\n\t    loopOrders.push(newOrder)\n\t  }\n\t\n\t  //First create arguments for procedure\n\t  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n\t  var code = [\"'use strict'\"]\n\t  var vars = []\n\t  \n\t  for(var j=0; j<dimension; ++j) {\n\t    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n\t  }\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\n\t    arglist.push(\"a\"+i) // Actual data array\n\t    arglist.push(\"t\"+i) // Strides\n\t    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n\t    \n\t    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n\t      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n\t    }\n\t    \n\t    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n\t      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n\t    }\n\t  }\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\n\t    arglist.push(\"Y\" + i)\n\t  }\n\t  if(proc.shapeArgs.length > 0) {\n\t    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n\t  }\n\t  if(proc.indexArgs.length > 0) {\n\t    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n\t    var zeros = new Array(dimension)\n\t    for(var i=0; i<dimension; ++i) {\n\t      zeros[i] = \"0\"\n\t    }\n\t    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n\t  }\n\t  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n\t    var off_arg = proc.offsetArgs[i]\n\t    var init_string = []\n\t    for(var j=0; j<off_arg.offset.length; ++j) {\n\t      if(off_arg.offset[j] === 0) {\n\t        continue\n\t      } else if(off_arg.offset[j] === 1) {\n\t        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n\t      } else {\n\t        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n\t      }\n\t    }\n\t    if(init_string.length === 0) {\n\t      vars.push(\"q\" + i + \"=0\")\n\t    } else {\n\t      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n\t    }\n\t  }\n\t\n\t  //Prepare this variables\n\t  var thisVars = uniq([].concat(proc.pre.thisVars)\n\t                      .concat(proc.body.thisVars)\n\t                      .concat(proc.post.thisVars))\n\t  vars = vars.concat(thisVars)\n\t  if (vars.length > 0) {\n\t    code.push(\"var \" + vars.join(\",\"))\n\t  }\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\n\t    code.push(\"p\"+i+\"|=0\")\n\t  }\n\t  \n\t  //Inline prelude\n\t  if(proc.pre.body.length > 3) {\n\t    code.push(processBlock(proc.pre, proc, dtypes))\n\t  }\n\t\n\t  //Process body\n\t  var body = processBlock(proc.body, proc, dtypes)\n\t  var matched = countMatches(loopOrders)\n\t  if(matched < dimension) {\n\t    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n\t  } else {\n\t    code.push(innerFill(loopOrders[0], proc, body))\n\t  }\n\t\n\t  //Inline epilog\n\t  if(proc.post.body.length > 3) {\n\t    code.push(processBlock(proc.post, proc, dtypes))\n\t  }\n\t  \n\t  if(proc.debug) {\n\t    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n\t  }\n\t  \n\t  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n\t  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n\t  return f()\n\t}\n\tmodule.exports = generateCWiseOp\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction unique_pred(list, compare) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b=list[0]\n\t  for(var i=1; i<len; ++i) {\n\t    b = a\n\t    a = list[i]\n\t    if(compare(a, b)) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique_eq(list) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b = list[0]\n\t  for(var i=1; i<len; ++i, b=a) {\n\t    b = a\n\t    a = list[i]\n\t    if(a !== b) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique(list, compare, sorted) {\n\t  if(list.length === 0) {\n\t    return list\n\t  }\n\t  if(compare) {\n\t    if(!sorted) {\n\t      list.sort(compare)\n\t    }\n\t    return unique_pred(list, compare)\n\t  }\n\t  if(!sorted) {\n\t    list.sort()\n\t  }\n\t  return unique_eq(list)\n\t}\n\t\n\tmodule.exports = unique\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, Buffer) {'use strict'\n\t\n\tvar bits = __webpack_require__(137)\n\tvar dup = __webpack_require__(138)\n\t\n\t//Legacy pool support\n\tif(!global.__TYPEDARRAY_POOL) {\n\t  global.__TYPEDARRAY_POOL = {\n\t      UINT8   : dup([32, 0])\n\t    , UINT16  : dup([32, 0])\n\t    , UINT32  : dup([32, 0])\n\t    , INT8    : dup([32, 0])\n\t    , INT16   : dup([32, 0])\n\t    , INT32   : dup([32, 0])\n\t    , FLOAT   : dup([32, 0])\n\t    , DOUBLE  : dup([32, 0])\n\t    , DATA    : dup([32, 0])\n\t    , UINT8C  : dup([32, 0])\n\t    , BUFFER  : dup([32, 0])\n\t  }\n\t}\n\t\n\tvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\n\tvar POOL = global.__TYPEDARRAY_POOL\n\t\n\t//Upgrade pool\n\tif(!POOL.UINT8C) {\n\t  POOL.UINT8C = dup([32, 0])\n\t}\n\tif(!POOL.BUFFER) {\n\t  POOL.BUFFER = dup([32, 0])\n\t}\n\t\n\t//New technique: Only allocate from ArrayBufferView and Buffer\n\tvar DATA    = POOL.DATA\n\t  , BUFFER  = POOL.BUFFER\n\t\n\texports.free = function free(array) {\n\t  if(Buffer.isBuffer(array)) {\n\t    BUFFER[bits.log2(array.length)].push(array)\n\t  } else {\n\t    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n\t      array = array.buffer\n\t    }\n\t    if(!array) {\n\t      return\n\t    }\n\t    var n = array.length || array.byteLength\n\t    var log_n = bits.log2(n)|0\n\t    DATA[log_n].push(array)\n\t  }\n\t}\n\t\n\tfunction freeArrayBuffer(buffer) {\n\t  if(!buffer) {\n\t    return\n\t  }\n\t  var n = buffer.length || buffer.byteLength\n\t  var log_n = bits.log2(n)\n\t  DATA[log_n].push(buffer)\n\t}\n\t\n\tfunction freeTypedArray(array) {\n\t  freeArrayBuffer(array.buffer)\n\t}\n\t\n\texports.freeUint8 =\n\texports.freeUint16 =\n\texports.freeUint32 =\n\texports.freeInt8 =\n\texports.freeInt16 =\n\texports.freeInt32 =\n\texports.freeFloat32 = \n\texports.freeFloat =\n\texports.freeFloat64 = \n\texports.freeDouble = \n\texports.freeUint8Clamped = \n\texports.freeDataView = freeTypedArray\n\t\n\texports.freeArrayBuffer = freeArrayBuffer\n\t\n\texports.freeBuffer = function freeBuffer(array) {\n\t  BUFFER[bits.log2(array.length)].push(array)\n\t}\n\t\n\texports.malloc = function malloc(n, dtype) {\n\t  if(dtype === undefined || dtype === 'arraybuffer') {\n\t    return mallocArrayBuffer(n)\n\t  } else {\n\t    switch(dtype) {\n\t      case 'uint8':\n\t        return mallocUint8(n)\n\t      case 'uint16':\n\t        return mallocUint16(n)\n\t      case 'uint32':\n\t        return mallocUint32(n)\n\t      case 'int8':\n\t        return mallocInt8(n)\n\t      case 'int16':\n\t        return mallocInt16(n)\n\t      case 'int32':\n\t        return mallocInt32(n)\n\t      case 'float':\n\t      case 'float32':\n\t        return mallocFloat(n)\n\t      case 'double':\n\t      case 'float64':\n\t        return mallocDouble(n)\n\t      case 'uint8_clamped':\n\t        return mallocUint8Clamped(n)\n\t      case 'buffer':\n\t        return mallocBuffer(n)\n\t      case 'data':\n\t      case 'dataview':\n\t        return mallocDataView(n)\n\t\n\t      default:\n\t        return null\n\t    }\n\t  }\n\t  return null\n\t}\n\t\n\tfunction mallocArrayBuffer(n) {\n\t  var n = bits.nextPow2(n)\n\t  var log_n = bits.log2(n)\n\t  var d = DATA[log_n]\n\t  if(d.length > 0) {\n\t    return d.pop()\n\t  }\n\t  return new ArrayBuffer(n)\n\t}\n\texports.mallocArrayBuffer = mallocArrayBuffer\n\t\n\tfunction mallocUint8(n) {\n\t  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n\t}\n\texports.mallocUint8 = mallocUint8\n\t\n\tfunction mallocUint16(n) {\n\t  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n\t}\n\texports.mallocUint16 = mallocUint16\n\t\n\tfunction mallocUint32(n) {\n\t  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n\t}\n\texports.mallocUint32 = mallocUint32\n\t\n\tfunction mallocInt8(n) {\n\t  return new Int8Array(mallocArrayBuffer(n), 0, n)\n\t}\n\texports.mallocInt8 = mallocInt8\n\t\n\tfunction mallocInt16(n) {\n\t  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n\t}\n\texports.mallocInt16 = mallocInt16\n\t\n\tfunction mallocInt32(n) {\n\t  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n\t}\n\texports.mallocInt32 = mallocInt32\n\t\n\tfunction mallocFloat(n) {\n\t  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n\t}\n\texports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\t\n\tfunction mallocDouble(n) {\n\t  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n\t}\n\texports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\t\n\tfunction mallocUint8Clamped(n) {\n\t  if(hasUint8C) {\n\t    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n\t  } else {\n\t    return mallocUint8(n)\n\t  }\n\t}\n\texports.mallocUint8Clamped = mallocUint8Clamped\n\t\n\tfunction mallocDataView(n) {\n\t  return new DataView(mallocArrayBuffer(n), 0, n)\n\t}\n\texports.mallocDataView = mallocDataView\n\t\n\tfunction mallocBuffer(n) {\n\t  n = bits.nextPow2(n)\n\t  var log_n = bits.log2(n)\n\t  var cache = BUFFER[log_n]\n\t  if(cache.length > 0) {\n\t    return cache.pop()\n\t  }\n\t  return new Buffer(n)\n\t}\n\texports.mallocBuffer = mallocBuffer\n\t\n\texports.clearCache = function clearCache() {\n\t  for(var i=0; i<32; ++i) {\n\t    POOL.UINT8[i].length = 0\n\t    POOL.UINT16[i].length = 0\n\t    POOL.UINT32[i].length = 0\n\t    POOL.INT8[i].length = 0\n\t    POOL.INT16[i].length = 0\n\t    POOL.INT32[i].length = 0\n\t    POOL.FLOAT[i].length = 0\n\t    POOL.DOUBLE[i].length = 0\n\t    POOL.UINT8C[i].length = 0\n\t    DATA[i].length = 0\n\t    BUFFER[i].length = 0\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(133).Buffer))\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(134)\n\tvar ieee754 = __webpack_require__(135)\n\tvar isArray = __webpack_require__(136)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\t// Support decoding URL-safe base64 strings, as Node.js does.\n\t// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction getLens (b64) {\n\t  var len = b64.length\n\t\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // Trim off extra bytes after placeholder bytes are found\n\t  // See: https://github.com/beatgammit/base64-js/issues/42\n\t  var validLen = b64.indexOf('=')\n\t  if (validLen === -1) validLen = len\n\t\n\t  var placeHoldersLen = validLen === len\n\t    ? 0\n\t    : 4 - (validLen % 4)\n\t\n\t  return [validLen, placeHoldersLen]\n\t}\n\t\n\t// base64 is 4/3 + up to two characters of the original data\n\tfunction byteLength (b64) {\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction _byteLength (b64, validLen, placeHoldersLen) {\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var tmp\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t\n\t  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\t\n\t  var curByte = 0\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  var len = placeHoldersLen > 0\n\t    ? validLen - 4\n\t    : validLen\n\t\n\t  var i\n\t  for (i = 0; i < len; i += 4) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 18) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n\t      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n\t      revLookup[b64.charCodeAt(i + 3)]\n\t    arr[curByte++] = (tmp >> 16) & 0xFF\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 2) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 2) |\n\t      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 1) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 10) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n\t      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] +\n\t    lookup[num >> 12 & 0x3F] +\n\t    lookup[num >> 6 & 0x3F] +\n\t    lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp =\n\t      ((uint8[i] << 16) & 0xFF0000) +\n\t      ((uint8[i + 1] << 8) & 0xFF00) +\n\t      (uint8[i + 2] & 0xFF)\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(\n\t      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n\t    ))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 2] +\n\t      lookup[(tmp << 4) & 0x3F] +\n\t      '=='\n\t    )\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 10] +\n\t      lookup[(tmp >> 4) & 0x3F] +\n\t      lookup[(tmp << 2) & 0x3F] +\n\t      '='\n\t    )\n\t  }\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = ((value * c) - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Bit twiddling hacks for JavaScript.\n\t *\n\t * Author: Mikola Lysenko\n\t *\n\t * Ported from Stanford bit twiddling hack library:\n\t *    http://graphics.stanford.edu/~seander/bithacks.html\n\t */\n\t\n\t\"use strict\"; \"use restrict\";\n\t\n\t//Number of bits in an integer\n\tvar INT_BITS = 32;\n\t\n\t//Constants\n\texports.INT_BITS  = INT_BITS;\n\texports.INT_MAX   =  0x7fffffff;\n\texports.INT_MIN   = -1<<(INT_BITS-1);\n\t\n\t//Returns -1, 0, +1 depending on sign of x\n\texports.sign = function(v) {\n\t  return (v > 0) - (v < 0);\n\t}\n\t\n\t//Computes absolute value of integer\n\texports.abs = function(v) {\n\t  var mask = v >> (INT_BITS-1);\n\t  return (v ^ mask) - mask;\n\t}\n\t\n\t//Computes minimum of integers x and y\n\texports.min = function(x, y) {\n\t  return y ^ ((x ^ y) & -(x < y));\n\t}\n\t\n\t//Computes maximum of integers x and y\n\texports.max = function(x, y) {\n\t  return x ^ ((x ^ y) & -(x < y));\n\t}\n\t\n\t//Checks if a number is a power of two\n\texports.isPow2 = function(v) {\n\t  return !(v & (v-1)) && (!!v);\n\t}\n\t\n\t//Computes log base 2 of v\n\texports.log2 = function(v) {\n\t  var r, shift;\n\t  r =     (v > 0xFFFF) << 4; v >>>= r;\n\t  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n\t  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n\t  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n\t  return r | (v >> 1);\n\t}\n\t\n\t//Computes log base 10 of v\n\texports.log10 = function(v) {\n\t  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n\t          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n\t          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n\t}\n\t\n\t//Counts number of bits\n\texports.popCount = function(v) {\n\t  v = v - ((v >>> 1) & 0x55555555);\n\t  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n\t  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n\t}\n\t\n\t//Counts number of trailing zeros\n\tfunction countTrailingZeros(v) {\n\t  var c = 32;\n\t  v &= -v;\n\t  if (v) c--;\n\t  if (v & 0x0000FFFF) c -= 16;\n\t  if (v & 0x00FF00FF) c -= 8;\n\t  if (v & 0x0F0F0F0F) c -= 4;\n\t  if (v & 0x33333333) c -= 2;\n\t  if (v & 0x55555555) c -= 1;\n\t  return c;\n\t}\n\texports.countTrailingZeros = countTrailingZeros;\n\t\n\t//Rounds to next power of 2\n\texports.nextPow2 = function(v) {\n\t  v += v === 0;\n\t  --v;\n\t  v |= v >>> 1;\n\t  v |= v >>> 2;\n\t  v |= v >>> 4;\n\t  v |= v >>> 8;\n\t  v |= v >>> 16;\n\t  return v + 1;\n\t}\n\t\n\t//Rounds down to previous power of 2\n\texports.prevPow2 = function(v) {\n\t  v |= v >>> 1;\n\t  v |= v >>> 2;\n\t  v |= v >>> 4;\n\t  v |= v >>> 8;\n\t  v |= v >>> 16;\n\t  return v - (v>>>1);\n\t}\n\t\n\t//Computes parity of word\n\texports.parity = function(v) {\n\t  v ^= v >>> 16;\n\t  v ^= v >>> 8;\n\t  v ^= v >>> 4;\n\t  v &= 0xf;\n\t  return (0x6996 >>> v) & 1;\n\t}\n\t\n\tvar REVERSE_TABLE = new Array(256);\n\t\n\t(function(tab) {\n\t  for(var i=0; i<256; ++i) {\n\t    var v = i, r = i, s = 7;\n\t    for (v >>>= 1; v; v >>>= 1) {\n\t      r <<= 1;\n\t      r |= v & 1;\n\t      --s;\n\t    }\n\t    tab[i] = (r << s) & 0xff;\n\t  }\n\t})(REVERSE_TABLE);\n\t\n\t//Reverse bits in a 32 bit word\n\texports.reverse = function(v) {\n\t  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n\t          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n\t          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n\t           REVERSE_TABLE[(v >>> 24) & 0xff];\n\t}\n\t\n\t//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\n\texports.interleave2 = function(x, y) {\n\t  x &= 0xFFFF;\n\t  x = (x | (x << 8)) & 0x00FF00FF;\n\t  x = (x | (x << 4)) & 0x0F0F0F0F;\n\t  x = (x | (x << 2)) & 0x33333333;\n\t  x = (x | (x << 1)) & 0x55555555;\n\t\n\t  y &= 0xFFFF;\n\t  y = (y | (y << 8)) & 0x00FF00FF;\n\t  y = (y | (y << 4)) & 0x0F0F0F0F;\n\t  y = (y | (y << 2)) & 0x33333333;\n\t  y = (y | (y << 1)) & 0x55555555;\n\t\n\t  return x | (y << 1);\n\t}\n\t\n\t//Extracts the nth interleaved component\n\texports.deinterleave2 = function(v, n) {\n\t  v = (v >>> n) & 0x55555555;\n\t  v = (v | (v >>> 1))  & 0x33333333;\n\t  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n\t  v = (v | (v >>> 4))  & 0x00FF00FF;\n\t  v = (v | (v >>> 16)) & 0x000FFFF;\n\t  return (v << 16) >> 16;\n\t}\n\t\n\t\n\t//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\n\texports.interleave3 = function(x, y, z) {\n\t  x &= 0x3FF;\n\t  x  = (x | (x<<16)) & 4278190335;\n\t  x  = (x | (x<<8))  & 251719695;\n\t  x  = (x | (x<<4))  & 3272356035;\n\t  x  = (x | (x<<2))  & 1227133513;\n\t\n\t  y &= 0x3FF;\n\t  y  = (y | (y<<16)) & 4278190335;\n\t  y  = (y | (y<<8))  & 251719695;\n\t  y  = (y | (y<<4))  & 3272356035;\n\t  y  = (y | (y<<2))  & 1227133513;\n\t  x |= (y << 1);\n\t  \n\t  z &= 0x3FF;\n\t  z  = (z | (z<<16)) & 4278190335;\n\t  z  = (z | (z<<8))  & 251719695;\n\t  z  = (z | (z<<4))  & 3272356035;\n\t  z  = (z | (z<<2))  & 1227133513;\n\t  \n\t  return x | (z << 2);\n\t}\n\t\n\t//Extracts nth interleaved component of a 3-tuple\n\texports.deinterleave3 = function(v, n) {\n\t  v = (v >>> n)       & 1227133513;\n\t  v = (v | (v>>>2))   & 3272356035;\n\t  v = (v | (v>>>4))   & 251719695;\n\t  v = (v | (v>>>8))   & 4278190335;\n\t  v = (v | (v>>>16))  & 0x3FF;\n\t  return (v<<22)>>22;\n\t}\n\t\n\t//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\n\texports.nextCombination = function(v) {\n\t  var t = v | (v - 1);\n\t  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n\t}\n\t\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction dupe_array(count, value, i) {\n\t  var c = count[i]|0\n\t  if(c <= 0) {\n\t    return []\n\t  }\n\t  var result = new Array(c), j\n\t  if(i === count.length-1) {\n\t    for(j=0; j<c; ++j) {\n\t      result[j] = value\n\t    }\n\t  } else {\n\t    for(j=0; j<c; ++j) {\n\t      result[j] = dupe_array(count, value, i+1)\n\t    }\n\t  }\n\t  return result\n\t}\n\t\n\tfunction dupe_number(count, value) {\n\t  var result, i\n\t  result = new Array(count)\n\t  for(i=0; i<count; ++i) {\n\t    result[i] = value\n\t  }\n\t  return result\n\t}\n\t\n\tfunction dupe(count, value) {\n\t  if(typeof value === \"undefined\") {\n\t    value = 0\n\t  }\n\t  switch(typeof count) {\n\t    case \"number\":\n\t      if(count > 0) {\n\t        return dupe_number(count|0, value)\n\t      }\n\t    break\n\t    case \"object\":\n\t      if(typeof (count.length) === \"number\") {\n\t        return dupe_array(count, value, 0)\n\t      }\n\t    break\n\t  }\n\t  return []\n\t}\n\t\n\tmodule.exports = dupe\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Particles = exports.defaults = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * A fork of [gl-particles](https://github.com/stackgl/gl-particles/blob/master/index.js).\n\tdds support for different draw modes (as opposed to just POINTS) and a more\n\tseparated FBO and vertex setup (so you can have different-sized buffer and\n\tparticles data).\n\tn\ttodo Ideally, to render more logic than 4 floats (RGBA) in a single pass,\n\twe'd like to render to multiple buffers at once - using\n\tdraw_buffers, as shown [here](https://hacks.mozilla.org/2014/01/webgl-deferred-shading/).\n\tt the time of writing, that extension has only [57% support across all\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *       devices](//webglstats.com/).\n\to, for now, have to consider other methods (multi-pass,\n\tencoding/packing more info into each fragment).\n\tn\t\n\t/* global Float32Array */\n\t\n\tvar _glGeometry = __webpack_require__(140);\n\t\n\tvar _glGeometry2 = _interopRequireDefault(_glGeometry);\n\t\n\tvar _glShader = __webpack_require__(55);\n\t\n\tvar _glShader2 = _interopRequireDefault(_glShader);\n\t\n\tvar _glFbo = __webpack_require__(122);\n\t\n\tvar _glFbo2 = _interopRequireDefault(_glFbo);\n\t\n\tvar _ndarray = __webpack_require__(124);\n\t\n\tvar _ndarray2 = _interopRequireDefault(_ndarray);\n\t\n\tvar _isFunction = __webpack_require__(153);\n\t\n\tvar _isFunction2 = _interopRequireDefault(_isFunction);\n\t\n\tvar _utils = __webpack_require__(118);\n\t\n\tvar _screen = __webpack_require__(154);\n\t\n\tvar _screen2 = _interopRequireDefault(_screen);\n\t\n\tvar _index = __webpack_require__(156);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar defaults = exports.defaults = function defaults() {\n\t    return {\n\t        shape: [64, 64],\n\t        geomShape: null,\n\t\n\t        logic: null,\n\t        logicVert: _index2.default,\n\t        logicFrag: null,\n\t\n\t        render: null,\n\t        renderVert: null,\n\t        renderFrag: null\n\t    };\n\t};\n\t\n\tvar Particles = exports.Particles = function () {\n\t    function Particles(gl, options) {\n\t        _classCallCheck(this, Particles);\n\t\n\t        var params = _extends({}, defaults(), options);\n\t\n\t        this.gl = gl;\n\t\n\t        this.screen = new _screen2.default(this.gl);\n\t\n\t        // The dimensions of the state data FBOs. Can be 1:1 with the number of\n\t        // particle vertices, or\n\t        this.shape = params.shape;\n\t        this.geomShape = params.geomShape || [].concat(_toConsumableArray(this.shape));\n\t\n\t        var logic = params.logic || [params.logicVert, params.logicFrag];\n\t\n\t        this.logic = Array.isArray(logic) ? _glShader2.default.apply(undefined, [gl].concat(_toConsumableArray(logic))) : logic;\n\t\n\t        var render = params.render || [params.renderVert, params.renderFrag];\n\t\n\t        this.render = Array.isArray(render) ? _glShader2.default.apply(undefined, [gl].concat(_toConsumableArray(render))) : render;\n\t\n\t        this.geom = (0, _glGeometry2.default)(gl);\n\t        this.geom.attr('uv', Particles.generateLUT(this.geomShape), { size: 2 });\n\t\n\t        this.buffers = [];\n\t\n\t        this.pixels = (0, _ndarray2.default)(new Float32Array(this.shape[0] * this.shape[1] * 4), [this.shape[0], this.shape[1], 4]);\n\t    }\n\t\n\t    _createClass(Particles, [{\n\t        key: 'setup',\n\t        value: function setup() {\n\t            var numBuffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t\n\t            // Add any needed new buffers\n\t            while (this.buffers.length < numBuffers) {\n\t                this.buffers.push((0, _glFbo2.default)(this.gl, [this.shape[0], this.shape[1]], { float: true }));\n\t            }\n\t\n\t            // Remove any unneeded old buffers\n\t            while (this.buffers.length > numBuffers) {\n\t                this.buffers.pop().dispose();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'spawn',\n\t        value: function spawn(map) {\n\t            var pixels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.pixels;\n\t            var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\t\n\t            var data = new Float32Array(4);\n\t\n\t            var pixelsShape = pixels.shape;\n\t            var pixelsData = pixels.data;\n\t\n\t            var i = 0;\n\t\n\t            for (var x = 0; x < pixelsShape[0]; ++x) {\n\t                for (var y = 0; y < pixelsShape[1]; ++y) {\n\t                    data[0] = data[1] = data[2] = data[3] = 0;\n\t\n\t                    map(data, x, y);\n\t\n\t                    pixelsData[i++] = data[0];\n\t                    pixelsData[i++] = data[1];\n\t                    pixelsData[i++] = data[2];\n\t                    pixelsData[i++] = data[3];\n\t                }\n\t            }\n\t\n\t            this.buffers.forEach(function (buffer) {\n\t                return buffer.color[0].setPixels(pixels, offset);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @todo Find a way to use free texture bind units without having to\n\t         *       manually remember them\n\t         */\n\t\n\t    }, {\n\t        key: 'step',\n\t        value: function step(update, buffer) {\n\t            if (buffer) {\n\t                buffer.bind();\n\t            } else {\n\t                (0, _utils.step)(this.buffers);\n\t                this.buffers[0].bind();\n\t            }\n\t\n\t            this.gl.viewport(0, 0, this.shape[0], this.shape[1]);\n\t\n\t            this.logic.bind();\n\t\n\t            Particles.applyUpdate(Object.assign(this.logic.uniforms, {\n\t                dataRes: this.shape,\n\t                geomRes: this.geomShape,\n\t                particles: this.buffers[1].color[0].bind(0)\n\t            }), update);\n\t\n\t            this.screen.render();\n\t            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw(update) {\n\t            var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.gl.POINTS;\n\t\n\t            this.geom.bind(this.render);\n\t\n\t            Particles.applyUpdate(Object.assign(this.render.uniforms, {\n\t                dataRes: this.shape,\n\t                geomRes: this.geomShape,\n\t                particles: this.buffers[0].color[0].bind(0)\n\t            }), update);\n\t\n\t            this.geom.draw(mode);\n\t        }\n\t    }, {\n\t        key: 'updateLogic',\n\t        value: function updateLogic(logicFrag) {\n\t            this.logic.update(_index2.default, logicFrag);\n\t        }\n\t    }, {\n\t        key: 'updateRender',\n\t        value: function updateRender(renderFrag, renderVert) {\n\t            this.render.update(renderVert, renderFrag);\n\t        }\n\t\n\t        // @todo\n\t\n\t    }, {\n\t        key: 'dispose',\n\t        value: function dispose() {}\n\t    }], [{\n\t        key: 'generateLUT',\n\t        value: function generateLUT(shape) {\n\t            var size = shape[0] * shape[1] * 2;\n\t            var data = new Float32Array(size);\n\t            var k = 0;\n\t\n\t            var w = Math.max(shape[0], 2);\n\t            var h = Math.max(shape[1], 2);\n\t\n\t            var invX = 1 / (w - 1);\n\t            var invY = 1 / (h - 1);\n\t\n\t            for (var i = 0; i < w; ++i) {\n\t                for (var j = 0; j < h; ++j) {\n\t                    data[k++] = i * invX;\n\t                    data[k++] = j * invY;\n\t                }\n\t            }\n\t\n\t            return data;\n\t        }\n\t    }, {\n\t        key: 'applyUpdate',\n\t        value: function applyUpdate(state, update) {\n\t            return (0, _isFunction2.default)(update) ? update(state) : Object.assign(state, update);\n\t        }\n\t    }]);\n\t\n\t    return Particles;\n\t}();\n\t\n\texports.default = Particles;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar normalize = __webpack_require__(141)\n\tvar glType = __webpack_require__(148)\n\tvar createVAO = __webpack_require__(149)\n\tvar dtype = __webpack_require__(147)\n\t\n\tmodule.exports = GLGeometry\n\t\n\tfunction GLGeometry (gl) {\n\t  if (!(this instanceof GLGeometry)) {\n\t    return new GLGeometry(gl)\n\t  }\n\t\n\t  this._elementsType = 5123\n\t  this._elementsBytes = 2\n\t  this._attributes = []\n\t  this._dirty = true\n\t  this._attrLength = 0\n\t  this._facesLength = 0\n\t  this._index = null\n\t  this._vao = null\n\t  this._keys = []\n\t  this.gl = gl\n\t}\n\t\n\tGLGeometry.prototype.dispose = function () {\n\t  for (var i = 0; i < this._attributes.length; i++) {\n\t    this._attributes[i].buffer.dispose()\n\t  }\n\t\n\t  this._attributes = []\n\t  this._keys = []\n\t  this._attrLength = 0 // Length of this attribute (the number of vertices it feeds)\n\t  this._facesLength = 0 // Number of vertices needed to draw all faces\n\t  this._dirty = true\n\t\n\t  if (this._index) {\n\t    this._index.dispose()\n\t    this._index = null\n\t  }\n\t\n\t  if (this._vao) {\n\t    this._vao.dispose()\n\t    this._vao = null\n\t  }\n\t}\n\t\n\tGLGeometry.prototype.faces = function faces (attr, opts) {\n\t  var size = opts && opts.size || 3\n\t  attr = attr.cells ? attr.cells : attr\n\t\n\t  this._dirty = true\n\t\n\t  if (this._index) {\n\t    this._index.dispose()\n\t  }\n\t\n\t  this._index = normalize.create(this.gl\n\t    , attr\n\t    , size\n\t    , this.gl.ELEMENT_ARRAY_BUFFER\n\t    , 'uint16'\n\t  )\n\t\n\t  this._facesLength = this._index.length * size\n\t  this._index = this._index.buffer\n\t\n\t  return this\n\t}\n\t\n\tGLGeometry.prototype.attr = function (name, attr, opts) {\n\t  // If we get a simplicial complex\n\t  if (attr.cells && attr.positions) {\n\t    return this.attr(name, attr.positions).faces(attr.cells, opts)\n\t  }\n\t\n\t  opts = opts || {}\n\t  var size = opts.size || 3\n\t\n\t  // Is this a known attribute (ie, an update)?\n\t  var keyIndex = this._keys.indexOf(name)\n\t  if (keyIndex > -1) {\n\t    var toUpdate = this._attributes[keyIndex].buffer\n\t    var offset = opts.offset || undefined\n\t    normalize.update(toUpdate, attr, size, 'float32', offset)\n\t    this._attrLength = toUpdate.length / size / 4\n\t    return this\n\t  }\n\t\n\t  this._dirty = true\n\t\n\t  var gl = this.gl\n\t  var first = !this._attributes.length\n\t\n\t  var attribute = normalize.create(gl, attr, size, gl.ARRAY_BUFFER, 'float32')\n\t  if (!attribute) {\n\t    throw new Error(\n\t      'Unexpected attribute format: needs an ndarray, array, typed array, ' +\n\t      'gl-buffer or simplicial complex'\n\t    )\n\t  }\n\t\n\t  var buffer = attribute.buffer\n\t  var length = attribute.length\n\t\n\t  this._keys.push(name)\n\t  this._attributes.push({\n\t    size: size,\n\t    buffer: buffer\n\t  })\n\t\n\t  if (first) {\n\t    this._attrLength = length\n\t  }\n\t\n\t  return this\n\t}\n\t\n\tGLGeometry.prototype.bind = function bind (shader) {\n\t  this.update()\n\t  this._vao.bind()\n\t\n\t  if (!this._keys) return\n\t  if (!shader) return\n\t\n\t  for (var i = 0; i < this._keys.length; i++) {\n\t    var attr = shader.attributes[this._keys[i]]\n\t    if (attr) attr.location = i\n\t  }\n\t\n\t  shader.bind()\n\t}\n\t\n\tGLGeometry.prototype.draw = function draw (mode, start, stop) {\n\t  start = typeof start === 'undefined' ? 0 : start\n\t  mode = typeof mode === 'undefined' ? this.gl.TRIANGLES : mode\n\t\n\t  this.update()\n\t\n\t  if (this._vao._useElements) {\n\t    stop = typeof stop === 'undefined' ? this._facesLength : stop\n\t    this.gl.drawElements(mode, stop - start, this._elementsType, start * this._elementsBytes)\n\t  } else {\n\t    stop = typeof stop === 'undefined' ? this._attrLength : stop\n\t    this.gl.drawArrays(mode, start, stop - start)\n\t  }\n\t}\n\t\n\tGLGeometry.prototype.unbind = function unbind () {\n\t  this.update()\n\t  this._vao.unbind()\n\t}\n\t\n\tGLGeometry.prototype.update = function update () {\n\t  if (!this._dirty) return\n\t  this._dirty = false\n\t  if (this._vao) this._vao.dispose()\n\t\n\t  this._vao = createVAO(this.gl, this._attributes, this._index)\n\t  this._elementsType = this._vao._elementsType\n\t  this._elementsBytes = dtype(\n\t    glType(this._elementsType) || 'array'\n\t  ).BYTES_PER_ELEMENT || 2\n\t}\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar pack = __webpack_require__(142)\n\tvar ista = __webpack_require__(144)\n\tvar createBuffer = __webpack_require__(145)\n\tvar isnd = __webpack_require__(146)\n\tvar dtype = __webpack_require__(147)\n\t\n\tmodule.exports.create = create\n\tmodule.exports.update = update\n\t\n\tfunction create (gl, attr, size, mode, type) {\n\t  // if we get a gl-buffer\n\t  if (attr.handle instanceof WebGLBuffer) {\n\t    return {\n\t      buffer: attr,\n\t      length: attr.length / size / 4\n\t    }\n\t  }\n\t\n\t  var arr = normalize(attr, size, type)\n\t  return {\n\t    buffer: createBuffer(gl, arr.data, mode),\n\t    length: arr.length\n\t  }\n\t}\n\t\n\tfunction update (buffer, attr, size, type, offset) {\n\t  // if we get a gl-buffer\n\t  if (attr.handle instanceof WebGLBuffer) {\n\t    throw new Error('Unhandled update case: WebGLBuffer')\n\t  }\n\t\n\t  var arr = normalize(attr, size, type)\n\t  buffer.update(arr.data, offset)\n\t}\n\t\n\tfunction normalize (attr, size, type) {\n\t  // if we get a nested 2D array\n\t  if (Array.isArray(attr) && Array.isArray(attr[0])) {\n\t    return {\n\t      data: pack(attr, type),\n\t      length: attr.length\n\t    }\n\t  }\n\t\n\t  // if we get a nested 2D array (with the second array being typed)\n\t  if (Array.isArray(attr) && ista(attr[0])) {\n\t    return {\n\t      data: pack(attr, type),\n\t      length: (attr.length * attr[0].length) / size\n\t    }\n\t  }\n\t\n\t  // if we get a 1D array\n\t  if (Array.isArray(attr)) {\n\t    return {\n\t      data: new (dtype(type))(attr),\n\t      length: attr.length / size\n\t    }\n\t  }\n\t\n\t  // if we get an ndarray\n\t  if (isnd(attr)) {\n\t    return {\n\t      data: attr,\n\t      length: ndlength(attr.shape) / size\n\t    }\n\t  }\n\t\n\t  // if we get a typed array\n\t  if (ista(attr)) {\n\t    if (type && !(attr instanceof dtype(type))) {\n\t      attr = convert(attr, dtype(type))\n\t    }\n\t\n\t    return {\n\t      data: attr,\n\t      length: attr.length / size\n\t    }\n\t  }\n\t}\n\t\n\tfunction ndlength (shape) {\n\t  var length = 1\n\t  for (var i = 0; i < shape.length; i++) length *= shape[i]\n\t  return length\n\t}\n\t\n\tfunction convert (a, B) {\n\t  var b = new B(a.length)\n\t  for (var i = 0; i < a.length; i++) b[i] = a[i]\n\t  return b\n\t}\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar dtype = __webpack_require__(143)\n\t\n\tmodule.exports = pack\n\t\n\tfunction pack(arr, type) {\n\t  type = type || 'float32'\n\t\n\t  if (!arr[0] || !arr[0].length) {\n\t    return arr\n\t  }\n\t\n\t  var Arr = typeof type === 'string'\n\t    ? dtype(type)\n\t    : type\n\t\n\t  var dim = arr[0].length\n\t  var out = new Arr(arr.length * dim)\n\t  var k = 0\n\t\n\t  for (var i = 0; i < arr.length; i++)\n\t  for (var j = 0; j < dim; j++) {\n\t    out[k++] = arr[i][j]\n\t  }\n\t\n\t  return out\n\t}\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function(dtype) {\n\t  switch (dtype) {\n\t    case 'int8':\n\t      return Int8Array\n\t    case 'int16':\n\t      return Int16Array\n\t    case 'int32':\n\t      return Int32Array\n\t    case 'uint8':\n\t      return Uint8Array\n\t    case 'uint16':\n\t      return Uint16Array\n\t    case 'uint32':\n\t      return Uint32Array\n\t    case 'float32':\n\t      return Float32Array\n\t    case 'float64':\n\t      return Float64Array\n\t    case 'array':\n\t      return Array\n\t    case 'uint8_clamped':\n\t      return Uint8ClampedArray\n\t    case 'generic':\n\t    case 'data':\n\t    case 'dataview':\n\t      return ArrayBuffer\n\t    case 'buffer':\n\t      if (typeof Buffer === \"undefined\") return ArrayBuffer\n\t      return Buffer\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(133).Buffer))\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports) {\n\n\tmodule.exports      = isTypedArray\n\tisTypedArray.strict = isStrictTypedArray\n\tisTypedArray.loose  = isLooseTypedArray\n\t\n\tvar toString = Object.prototype.toString\n\tvar names = {\n\t    '[object Int8Array]': true\n\t  , '[object Int16Array]': true\n\t  , '[object Int32Array]': true\n\t  , '[object Uint8Array]': true\n\t  , '[object Uint16Array]': true\n\t  , '[object Uint32Array]': true\n\t  , '[object Float32Array]': true\n\t  , '[object Float64Array]': true\n\t}\n\t\n\tfunction isTypedArray(arr) {\n\t  return (\n\t       isStrictTypedArray(arr)\n\t    || isLooseTypedArray(arr)\n\t  )\n\t}\n\t\n\tfunction isStrictTypedArray(arr) {\n\t  return (\n\t       arr instanceof Int8Array\n\t    || arr instanceof Int16Array\n\t    || arr instanceof Int32Array\n\t    || arr instanceof Uint8Array\n\t    || arr instanceof Uint16Array\n\t    || arr instanceof Uint32Array\n\t    || arr instanceof Float32Array\n\t    || arr instanceof Float64Array\n\t  )\n\t}\n\t\n\tfunction isLooseTypedArray(arr) {\n\t  return names[toString.call(arr)]\n\t}\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar pool = __webpack_require__(132)\n\tvar ops = __webpack_require__(127)\n\tvar ndarray = __webpack_require__(124)\n\t\n\tvar SUPPORTED_TYPES = [\n\t  \"uint8\",\n\t  \"uint8_clamped\",\n\t  \"uint16\",\n\t  \"uint32\",\n\t  \"int8\",\n\t  \"int16\",\n\t  \"int32\",\n\t  \"float32\" ]\n\t\n\tfunction GLBuffer(gl, type, handle, length, usage) {\n\t  this.gl = gl\n\t  this.type = type\n\t  this.handle = handle\n\t  this.length = length\n\t  this.usage = usage\n\t}\n\t\n\tvar proto = GLBuffer.prototype\n\t\n\tproto.bind = function() {\n\t  this.gl.bindBuffer(this.type, this.handle)\n\t}\n\t\n\tproto.unbind = function() {\n\t  this.gl.bindBuffer(this.type, null)\n\t}\n\t\n\tproto.dispose = function() {\n\t  this.gl.deleteBuffer(this.handle)\n\t}\n\t\n\tfunction updateTypeArray(gl, type, len, usage, data, offset) {\n\t  var dataLen = data.length * data.BYTES_PER_ELEMENT\n\t  if(offset < 0) {\n\t    gl.bufferData(type, data, usage)\n\t    return dataLen\n\t  }\n\t  if(dataLen + offset > len) {\n\t    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\")\n\t  }\n\t  gl.bufferSubData(type, offset, data)\n\t  return len\n\t}\n\t\n\tfunction makeScratchTypeArray(array, dtype) {\n\t  var res = pool.malloc(array.length, dtype)\n\t  var n = array.length\n\t  for(var i=0; i<n; ++i) {\n\t    res[i] = array[i]\n\t  }\n\t  return res\n\t}\n\t\n\tfunction isPacked(shape, stride) {\n\t  var n = 1\n\t  for(var i=stride.length-1; i>=0; --i) {\n\t    if(stride[i] !== n) {\n\t      return false\n\t    }\n\t    n *= shape[i]\n\t  }\n\t  return true\n\t}\n\t\n\tproto.update = function(array, offset) {\n\t  if(typeof offset !== \"number\") {\n\t    offset = -1\n\t  }\n\t  this.bind()\n\t  if(typeof array === \"object\" && typeof array.shape !== \"undefined\") { //ndarray\n\t    var dtype = array.dtype\n\t    if(SUPPORTED_TYPES.indexOf(dtype) < 0) {\n\t      dtype = \"float32\"\n\t    }\n\t    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n\t      var ext = gl.getExtension('OES_element_index_uint')\n\t      if(ext && dtype !== \"uint16\") {\n\t        dtype = \"uint32\"\n\t      } else {\n\t        dtype = \"uint16\"\n\t      }\n\t    }\n\t    if(dtype === array.dtype && isPacked(array.shape, array.stride)) {\n\t      if(array.offset === 0 && array.data.length === array.shape[0]) {\n\t        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset)\n\t      } else {\n\t        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset)\n\t      }\n\t    } else {\n\t      var tmp = pool.malloc(array.size, dtype)\n\t      var ndt = ndarray(tmp, array.shape)\n\t      ops.assign(ndt, array)\n\t      if(offset < 0) {\n\t        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset)\n\t      } else {\n\t        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset)\n\t      }\n\t      pool.free(tmp)\n\t    }\n\t  } else if(Array.isArray(array)) { //Vanilla array\n\t    var t\n\t    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n\t      t = makeScratchTypeArray(array, \"uint16\")\n\t    } else {\n\t      t = makeScratchTypeArray(array, \"float32\")\n\t    }\n\t    if(offset < 0) {\n\t      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset)\n\t    } else {\n\t      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset)\n\t    }\n\t    pool.free(t)\n\t  } else if(typeof array === \"object\" && typeof array.length === \"number\") { //Typed array\n\t    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset)\n\t  } else if(typeof array === \"number\" || array === undefined) { //Number/default\n\t    if(offset >= 0) {\n\t      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\")\n\t    }\n\t    array = array | 0\n\t    if(array <= 0) {\n\t      array = 1\n\t    }\n\t    this.gl.bufferData(this.type, array|0, this.usage)\n\t    this.length = array\n\t  } else { //Error, case should not happen\n\t    throw new Error(\"gl-buffer: Invalid data type\")\n\t  }\n\t}\n\t\n\tfunction createBuffer(gl, data, type, usage) {\n\t  type = type || gl.ARRAY_BUFFER\n\t  usage = usage || gl.DYNAMIC_DRAW\n\t  if(type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n\t    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\")\n\t  }\n\t  if(usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n\t    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\")\n\t  }\n\t  var handle = gl.createBuffer()\n\t  var result = new GLBuffer(gl, type, handle, 0, usage)\n\t  result.update(data)\n\t  return result\n\t}\n\t\n\tmodule.exports = createBuffer\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(arr) {\n\t  if (!arr) return false\n\t  if (!arr.dtype) return false\n\t  var re = new RegExp('function View[0-9]+d(:?' + arr.dtype + ')+')\n\t  return re.test(String(arr.constructor))\n\t}\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(dtype) {\n\t  switch (dtype) {\n\t    case 'int8':\n\t      return Int8Array\n\t    case 'int16':\n\t      return Int16Array\n\t    case 'int32':\n\t      return Int32Array\n\t    case 'uint8':\n\t      return Uint8Array\n\t    case 'uint16':\n\t      return Uint16Array\n\t    case 'uint32':\n\t      return Uint32Array\n\t    case 'float32':\n\t      return Float32Array\n\t    case 'float64':\n\t      return Float64Array\n\t    case 'array':\n\t      return Array\n\t  }\n\t}\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = glToType\n\tfunction glToType (flag) {\n\t  switch (flag) {\n\t    case 5126: return 'float32'   // gl.FLOAT\n\t    case 5125: return 'uint32'    // gl.UNSIGNED_INT\n\t    case 5124: return 'int32'     // gl.INT\n\t    case 5123: return 'uint16'    // gl.UNSIGNED_SHORT\n\t    case 32819: return 'uint16'   // gl.UNSIGNED_SHORT_4_4_4_4\n\t    case 32820: return 'uint16'   // gl.UNSIGNED_SHORT_5_5_5_1\n\t    case 33635: return 'uint16'   // gl.UNSIGNED_SHORT_5_6_5\n\t    case 5122: return 'int16'     // gl.SHORT\n\t    case 5121: return 'uint8'     // gl.UNSIGNED_BYTE\n\t    case 5120: return 'int8'      // gl.BYTE\n\t    default: return null\n\t  }\n\t}\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar createVAONative = __webpack_require__(150)\n\tvar createVAOEmulated = __webpack_require__(152)\n\t\n\tfunction ExtensionShim (gl) {\n\t  this.bindVertexArrayOES = gl.bindVertexArray.bind(gl)\n\t  this.createVertexArrayOES = gl.createVertexArray.bind(gl)\n\t  this.deleteVertexArrayOES = gl.deleteVertexArray.bind(gl)\n\t}\n\t\n\tfunction createVAO(gl, attributes, elements, elementsType) {\n\t  var ext = gl.createVertexArray\n\t    ? new ExtensionShim(gl)\n\t    : gl.getExtension('OES_vertex_array_object')\n\t  var vao\n\t\n\t  if(ext) {\n\t    vao = createVAONative(gl, ext)\n\t  } else {\n\t    vao = createVAOEmulated(gl)\n\t  }\n\t  vao.update(attributes, elements, elementsType)\n\t  return vao\n\t}\n\t\n\tmodule.exports = createVAO\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar bindAttribs = __webpack_require__(151)\n\t\n\tfunction VertexAttribute(location, dimension, a, b, c, d) {\n\t  this.location = location\n\t  this.dimension = dimension\n\t  this.a = a\n\t  this.b = b\n\t  this.c = c\n\t  this.d = d\n\t}\n\t\n\tVertexAttribute.prototype.bind = function(gl) {\n\t  switch(this.dimension) {\n\t    case 1:\n\t      gl.vertexAttrib1f(this.location, this.a)\n\t    break\n\t    case 2:\n\t      gl.vertexAttrib2f(this.location, this.a, this.b)\n\t    break\n\t    case 3:\n\t      gl.vertexAttrib3f(this.location, this.a, this.b, this.c)\n\t    break\n\t    case 4:\n\t      gl.vertexAttrib4f(this.location, this.a, this.b, this.c, this.d)\n\t    break\n\t  }\n\t}\n\t\n\tfunction VAONative(gl, ext, handle) {\n\t  this.gl = gl\n\t  this._ext = ext\n\t  this.handle = handle\n\t  this._attribs = []\n\t  this._useElements = false\n\t  this._elementsType = gl.UNSIGNED_SHORT\n\t}\n\t\n\tVAONative.prototype.bind = function() {\n\t  this._ext.bindVertexArrayOES(this.handle)\n\t  for(var i=0; i<this._attribs.length; ++i) {\n\t    this._attribs[i].bind(this.gl)\n\t  }\n\t}\n\t\n\tVAONative.prototype.unbind = function() {\n\t  this._ext.bindVertexArrayOES(null)\n\t}\n\t\n\tVAONative.prototype.dispose = function() {\n\t  this._ext.deleteVertexArrayOES(this.handle)\n\t}\n\t\n\tVAONative.prototype.update = function(attributes, elements, elementsType) {\n\t  this.bind()\n\t  bindAttribs(this.gl, elements, attributes)\n\t  this.unbind()\n\t  this._attribs.length = 0\n\t  if(attributes)\n\t  for(var i=0; i<attributes.length; ++i) {\n\t    var a = attributes[i]\n\t    if(typeof a === \"number\") {\n\t      this._attribs.push(new VertexAttribute(i, 1, a))\n\t    } else if(Array.isArray(a)) {\n\t      this._attribs.push(new VertexAttribute(i, a.length, a[0], a[1], a[2], a[3]))\n\t    }\n\t  }\n\t  this._useElements = !!elements\n\t  this._elementsType = elementsType || this.gl.UNSIGNED_SHORT\n\t}\n\t\n\tVAONative.prototype.draw = function(mode, count, offset) {\n\t  offset = offset || 0\n\t  var gl = this.gl\n\t  if(this._useElements) {\n\t    gl.drawElements(mode, count, this._elementsType, offset)\n\t  } else {\n\t    gl.drawArrays(mode, offset, count)\n\t  }\n\t}\n\t\n\tfunction createVAONative(gl, ext) {\n\t  return new VAONative(gl, ext, ext.createVertexArrayOES())\n\t}\n\t\n\tmodule.exports = createVAONative\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction doBind(gl, elements, attributes) {\n\t  if(elements) {\n\t    elements.bind()\n\t  } else {\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t  }\n\t  var nattribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS)|0\n\t  if(attributes) {\n\t    if(attributes.length > nattribs) {\n\t      throw new Error(\"gl-vao: Too many vertex attributes\")\n\t    }\n\t    for(var i=0; i<attributes.length; ++i) {\n\t      var attrib = attributes[i]\n\t      if(attrib.buffer) {\n\t        var buffer = attrib.buffer\n\t        var size = attrib.size || 4\n\t        var type = attrib.type || gl.FLOAT\n\t        var normalized = !!attrib.normalized\n\t        var stride = attrib.stride || 0\n\t        var offset = attrib.offset || 0\n\t        buffer.bind()\n\t        gl.enableVertexAttribArray(i)\n\t        gl.vertexAttribPointer(i, size, type, normalized, stride, offset)\n\t      } else {\n\t        if(typeof attrib === \"number\") {\n\t          gl.vertexAttrib1f(i, attrib)\n\t        } else if(attrib.length === 1) {\n\t          gl.vertexAttrib1f(i, attrib[0])\n\t        } else if(attrib.length === 2) {\n\t          gl.vertexAttrib2f(i, attrib[0], attrib[1])\n\t        } else if(attrib.length === 3) {\n\t          gl.vertexAttrib3f(i, attrib[0], attrib[1], attrib[2])\n\t        } else if(attrib.length === 4) {\n\t          gl.vertexAttrib4f(i, attrib[0], attrib[1], attrib[2], attrib[3])\n\t        } else {\n\t          throw new Error(\"gl-vao: Invalid vertex attribute\")\n\t        }\n\t        gl.disableVertexAttribArray(i)\n\t      }\n\t    }\n\t    for(; i<nattribs; ++i) {\n\t      gl.disableVertexAttribArray(i)\n\t    }\n\t  } else {\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t    for(var i=0; i<nattribs; ++i) {\n\t      gl.disableVertexAttribArray(i)\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = doBind\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar bindAttribs = __webpack_require__(151)\n\t\n\tfunction VAOEmulated(gl) {\n\t  this.gl = gl\n\t  this._elements = null\n\t  this._attributes = null\n\t  this._elementsType = gl.UNSIGNED_SHORT\n\t}\n\t\n\tVAOEmulated.prototype.bind = function() {\n\t  bindAttribs(this.gl, this._elements, this._attributes)\n\t}\n\t\n\tVAOEmulated.prototype.update = function(attributes, elements, elementsType) {\n\t  this._elements = elements\n\t  this._attributes = attributes\n\t  this._elementsType = elementsType || this.gl.UNSIGNED_SHORT\n\t}\n\t\n\tVAOEmulated.prototype.dispose = function() { }\n\tVAOEmulated.prototype.unbind = function() { }\n\t\n\tVAOEmulated.prototype.draw = function(mode, count, offset) {\n\t  offset = offset || 0\n\t  var gl = this.gl\n\t  if(this._elements) {\n\t    gl.drawElements(mode, count, this._elementsType, offset)\n\t  } else {\n\t    gl.drawArrays(mode, offset, count)\n\t  }\n\t}\n\t\n\tfunction createVAOEmulated(gl) {\n\t  return new VAOEmulated(gl)\n\t}\n\t\n\tmodule.exports = createVAOEmulated\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(39),\n\t    isObject = __webpack_require__(33);\n\t\n\t/** `Object#toString` result references. */\n\tvar asyncTag = '[object AsyncFunction]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    proxyTag = '[object Proxy]';\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  if (!isObject(value)) {\n\t    return false;\n\t  }\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t  var tag = baseGetTag(value);\n\t  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t}\n\t\n\tmodule.exports = isFunction;\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Screen = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _glBigTriangle = __webpack_require__(155);\n\t\n\tvar _glBigTriangle2 = _interopRequireDefault(_glBigTriangle);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Extending `gl-big-triangle` to offer a shorthand for `bind`, `draw`, `unbind`\n\t// (yes, that's what `a-big-triangle` does, but this offers both convenience and\n\t// optimisation options).\n\t\n\tvar Screen = exports.Screen = function (_Triangle) {\n\t    _inherits(Screen, _Triangle);\n\t\n\t    function Screen() {\n\t        _classCallCheck(this, Screen);\n\t\n\t        return _possibleConstructorReturn(this, (Screen.__proto__ || Object.getPrototypeOf(Screen)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Screen, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), 'bind', this).call(this);\n\t            _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), 'draw', this).call(this);\n\t            _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), 'unbind', this).call(this);\n\t        }\n\t    }]);\n\t\n\t    return Screen;\n\t}(_glBigTriangle2.default);\n\t\n\texports.default = Screen;\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar createBuffer = __webpack_require__(145)\n\tvar createVAO = __webpack_require__(149)\n\t\n\tmodule.exports = GLBigTriangle\n\t\n\tfunction GLBigTriangle (gl) {\n\t  if (!(this instanceof GLBigTriangle)) {\n\t    return new GLBigTriangle(gl)\n\t  }\n\t\n\t  this.gl = gl\n\t  this.vao = createVAO(gl, [{\n\t    size: 2,\n\t    type: gl.FLOAT,\n\t    buffer: createBuffer(gl, new Float32Array([\n\t      -1, -1, -1,\n\t      +4, +4, -1\n\t    ]))\n\t  }])\n\t}\n\t\n\tGLBigTriangle.prototype.bind = function () {\n\t  this.vao.bind()\n\t}\n\t\n\tGLBigTriangle.prototype.draw = function () {\n\t  this.gl.drawArrays(this.gl.TRIANGLES, 0, 3)\n\t}\n\t\n\tGLBigTriangle.prototype.unbind = function () {\n\t  this.vao.unbind()\n\t}\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\nvarying vec2 uv;\\n\\nvoid main() {\\n    uv = position.xy;\\n\\n    gl_Position = vec4(position, 1.0, 1.0);\\n}\\n\"\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _inert = __webpack_require__(158);\n\t\n\tvar _inert2 = _interopRequireDefault(_inert);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (data) {\n\t    data[0] = data[1] = _inert2.default;\n\t    data[2] = data[3] = 0;\n\t\n\t    return data;\n\t};\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// @see `./inert.glsl`\n\texports.default = -1000000;\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.coverAspect = exports.containAspect = exports.aspect = undefined;\n\t\n\tvar _glMatrix = __webpack_require__(52);\n\t\n\tvar aspect = exports.aspect = function aspect(out, size, scale) {\n\t    return _glMatrix.vec2.scale(out, _glMatrix.vec2.inverse(out, size), scale);\n\t};\n\t\n\tvar containAspect = exports.containAspect = function containAspect(out, size) {\n\t    return aspect(out, size, Math.min(size[0], size[1]));\n\t};\n\t\n\tvar coverAspect = exports.coverAspect = function coverAspect(out, size) {\n\t    return aspect(out, size, Math.max(size[0], size[1]));\n\t};\n\t\n\texports.default = aspect;\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D particles;\\nuniform sampler2D flow;\\nuniform sampler2D targets;\\n\\nuniform vec2 dataRes;\\n\\nuniform vec2 viewSize;\\n\\nuniform float time;\\nuniform float dt;\\n\\nuniform float speedLimit;\\nuniform float damping;\\n\\nuniform float forceWeight;\\nuniform float flowWeight;\\nuniform float noiseWeight;\\n\\nuniform float flowDecay;\\n\\nuniform float noiseSpeed;\\nuniform float noiseScale;\\n\\nuniform float target;\\n\\n// These are scaled by the values they correspond to\\nuniform float varyForce;\\nuniform float varyFlow;\\nuniform float varyNoise;\\nuniform float varyNoiseScale;\\nuniform float varyNoiseSpeed;\\nuniform float varyTarget;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nconst vec2 inert = vec2(-1000000.0);\\n\\n/**\\n * @requires {float} levels The number of samples to take at different LODs\\n * @requires {float} stride The step up to take between each LOD\\n */\\n\\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec2 map(vec2 value, vec2 inMin, vec2 inMax, vec2 outMin, vec2 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec3 map(vec3 value, vec3 inMin, vec3 inMax, vec3 outMin, vec3 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec4 map(vec4 value, vec4 inMin, vec4 inMax, vec4 outMin, vec4 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nconst vec4 posRange = vec4(-1.0, -1.0, 1.0, 1.0);\\n\\nconst vec4 uvRange = vec4(0.0, 0.0, 1.0, 1.0);\\n\\nvec2 posToUV(vec2 pos) {\\n    return map(pos, posRange.xy, posRange.zw, uvRange.xy, uvRange.zw);\\n}\\n\\n// Time/decay\\n\\nvec2 get(vec3 data, float time, float decay) {\\n    return data.xy*max(0.0, 1.0-((time-data.z)*decay));\\n}\\n\\nvec2 get(vec4 data, float time, float decay) {\\n    return get(data.xyz, time, decay);\\n}\\n\\n// No time/decay\\n\\nvec2 get(vec2 data) {\\n    return data.xy;\\n}\\n\\nvec2 get(vec3 data) {\\n    return get(data.xy);\\n}\\n\\nvec2 get(vec4 data) {\\n    return get(data.xy);\\n}\\n\\n/**\\n * @return The flow velocity and age for a given screen position, sampling\\n *         several scales.\\n */\\nvec2 flowAtScreenPos(vec2 pos, sampler2D flow, float time, float flowDecay) {\\n    vec2 uv = posToUV(pos);\\n    vec2 flowForce = vec2(0.0);\\n    float flowMax = 0.0;\\n\\n    for(float level = 0.0; level < 1.0*1.0; level += 1.0) {\\n        vec4 flowData = texture2D(flow, uv, level);\\n        float factor = 1.0/(level+1.0);\\n\\n        flowForce += get(flowData, time, flowDecay)*factor;\\n        flowMax += factor;\\n    }\\n\\n    return flowForce/flowMax;\\n}\\n\\nfloat vary(float base, float offset, float variance) {\\n    return base+(offset*variance*base);\\n}\\n\\nvoid main() {\\n    vec2 uv = gl_FragCoord.xy/dataRes;\\n\\n    vec4 state = texture2D(particles, uv);\\n    vec2 pos = state.xy;\\n    vec2 vel = state.zw;\\n\\n    vec2 newPos = pos;\\n    vec2 newVel = vel;\\n\\n    if(pos != inert) {\\n        // The 1D index offset of this pixel\\n        float i = (gl_FragCoord.x+(gl_FragCoord.y*dataRes.x))/\\n                (dataRes.x*dataRes.y);\\n\\n        // Wander force\\n\\n        vec2 noisePos = pos*vary(noiseScale, i, varyNoiseScale);\\n\\n        // @todo This doesn't progress linearly - the speed grows with time...\\n        float noiseTime = time*vary(noiseSpeed, i, varyNoiseSpeed);\\n\\n        vec2 wanderForce = vec2(snoise(vec3(noisePos, uv.x+noiseTime)),\\n                snoise(vec3(noisePos, uv.y+noiseTime+1234.5678)));\\n\\n        // Flow force - left by preceeding particles\\n        // (Ensure this is checked before the next flow step is rendered, to avoid\\n        // self-influence.)\\n\\n        vec2 flowForce = flowAtScreenPos(pos*viewSize, flow, time, flowDecay);\\n\\n        // Accumulate weighted forces and damping\\n        newVel = (vel*damping*dt)+\\n            (vary(forceWeight, i, varyForce)*\\n                ((flowForce*dt*vary(flowWeight, i, varyFlow))+\\n                (wanderForce*dt*vary(noiseWeight, i, varyNoise))));\\n\\n        // Tend towards targets\\n        newVel += (texture2D(targets, uv).xy-pos)*vary(target, i, varyTarget);\\n\\n        // Normalize and clamp the velocity\\n        /**\\n         * @todo This seems to cause some problems when dealing with larger max\\n         *       speeds - the particles no longer follow flow forces somehow...\\n         */\\n        float speed = length(newVel);\\n\\n        newVel *= min(speed, speedLimit)/speed;\\n\\n        // Integrate motion\\n        newPos = pos+newVel;\\n    }\\n\\n    gl_FragColor = vec4(newPos, newVel);\\n}\\n\"\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D previous;\\nuniform sampler2D particles;\\n\\nuniform vec2 dataRes;\\nuniform vec2 geomRes;\\n\\nuniform vec2 viewSize;\\n\\nuniform sampler2D colorMap;\\nuniform float colorMapAlpha;\\n\\nuniform vec4 flowColor;\\nuniform vec4 baseColor;\\n\\nuniform float time;\\nuniform float speedLimit;\\nuniform float flowDecay;\\n\\nuniform float speedAlpha;\\n\\nattribute vec2 uv;\\n\\nvarying vec4 color;\\n\\n/**\\n * Pre-generated constants, equivalent to:\\n *     flowAxisR: `angleToVec(0)`\\n *     flowAxisG: `angleToVec(tau/3.0)`\\n *     flowAxisB: `angleToVec(tau*2.0/3.0)`\\n */\\nconst vec2 flowAxisR = vec2(1.0, 0.0);\\nconst vec2 flowAxisG = vec2(-0.5000000000000004, -0.8660254037844385);\\nconst vec2 flowAxisB = vec2(-0.4999999999999998, 0.8660254037844387);\\n\\nconst vec4 minColor = vec4(0.0);\\nconst vec4 maxColor = vec4(1.0);\\n\\nconst vec4 minAlign = vec4(-1.0);\\nconst vec4 maxAlign = vec4(1.0);\\n\\n// @todo Turn some of these `const`s into `uniform`s\\nconst vec2 center = vec2(0.0);\\nconst vec2 fadeRange = vec2(0.2, 1.0);\\nconst vec3 falloff = vec3(fadeRange.x, fadeRange.y, fadeRange.y);\\n\\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec2 map(vec2 value, vec2 inMin, vec2 inMax, vec2 outMin, vec2 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec3 map(vec3 value, vec3 inMin, vec3 inMax, vec3 outMin, vec3 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec4 map(vec4 value, vec4 inMin, vec4 inMax, vec4 outMin, vec4 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nconst vec2 inert = vec2(-1000000.0);\\n\\nfloat length2(vec2 vec) {\\n    return dot(vec, vec);\\n}\\n\\nfloat length2(vec3 vec) {\\n    return dot(vec, vec);\\n}\\n\\nfloat length2(vec4 vec) {\\n    return dot(vec, vec);\\n}\\n\\n/**\\n * Adapted from `bezier`.\\n */\\n\\nfloat bezier(vec2 cp, float t) {\\n    return cp.x+(cp.y-cp.x)*t;\\n}\\n\\nfloat bezier(vec3 cp, float t) {\\n    float ut = 1.0-t;\\n\\n    return (cp.x*ut+cp.y*t)*ut+(cp.y*ut+cp.z*t)*t;\\n}\\n\\nfloat bezier(vec4 cp, float t) {\\n    float ut = 1.0-t;\\n    float a1 = cp.y*ut+cp.z*t;\\n\\n    return ((cp.x*ut+cp.y*t)*ut+a1*t)*ut+(a1*ut+(cp.z*ut+cp.w*t)*t)*t;\\n}\\n\\n// @todo Remove the `1.0-` here?\\nfloat amount(vec2 point, vec2 mid, float limit) {\\n    return min(1.0-(length(point-mid)/limit), 1.0);\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit) {\\n    return max(0.0, amount(point, mid, limit));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, float curve) {\\n    return max(0.0, curve*amount(point, mid, limit));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, vec2 curve) {\\n    return max(0.0, bezier(curve, amount(point, mid, limit)));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, vec3 curve) {\\n    return max(0.0, bezier(curve, amount(point, mid, limit)));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, vec4 curve) {\\n    return max(0.0, bezier(curve, amount(point, mid, limit)));\\n}\\n\\nvec4 preAlpha(vec3 color, float alpha) {\\n    return vec4(color.rgb*alpha, alpha);\\n}\\n\\nvec4 preAlpha(vec4 color) {\\n    return preAlpha(color.rgb, color.a);\\n}\\n\\nconst float frameOffset = 0.25;\\n\\n/**\\n * For every data point, we have two vertices - current and previous state.\\n * Every other vertex looks up previous data. In this way, (vertical)\\n * neighbours alternate from previous to current state.\\n * (Vertical neighbours, because WebGL iterates column-major.)\\n *\\n * @return State data for the vertex, either current or previous.\\n */\\n\\nvec4 stateAtFrame(vec2 uv, vec2 shape, sampler2D previous, sampler2D current) {\\n    float nearIndex = uv.y*shape.y;\\n    float offset = fract(nearIndex);\\n    vec2 lookup = vec2(uv.x, floor(nearIndex)/shape.y);\\n\\n    // @note Some systems comlain about this form of texture lookup:\\n    // return texture2D(((offset > frameOffset)? current : previous), lookup);\\n    return ((offset > frameOffset)?\\n            texture2D(current, lookup)\\n        :   texture2D(previous, lookup));\\n}\\n\\nvoid main() {\\n    vec4 state = stateAtFrame(uv, dataRes, previous, particles);\\n\\n    if(state.xy != inert) {\\n        vec2 pos = state.xy;\\n        vec2 vel = state.zw/speedLimit;\\n        float speedRate = min(length2(vel)/speedAlpha, 1.0);\\n\\n        // Color map\\n\\n        vec4 mappedColor = texture2D(colorMap, uv*geomRes/dataRes);\\n\\n        mappedColor *= colorMapAlpha;\\n\\n        // Flow color\\n        \\n        vec3 alignRGB = vec3(dot(vel, flowAxisR),\\n                dot(vel, flowAxisG), dot(vel, flowAxisB));\\n\\n        vec3 flowAlign = map(mix(alignRGB, alignRGB.gbr*(1.0-flowDecay),\\n                    sin(time*flowDecay)),\\n                minAlign.rgb, maxAlign.rgb, minColor.rgb, maxColor.rgb);\\n\\n        vec4 flowAlignedColor = vec4(flowColor.rgb*flowAlign, flowColor.a);\\n\\n        // Color summation, clamping and pre-multiplying alpha so they don't\\n        // cross over\\n\\n        color = clamp(preAlpha(baseColor), minColor, maxColor)+\\n            clamp(preAlpha(mappedColor), minColor, maxColor)+\\n            clamp(preAlpha(flowAlignedColor), minColor, maxColor);\\n\\n        color.a *= speedRate*clamp(vignette(pos, center, 1.0, falloff),\\n                        fadeRange.x, fadeRange.y);\\n\\n        // Position\\n        gl_Position = vec4(pos*viewSize, 0.0, 1.0);\\n    }\\n}\\n\"\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec4 color;\\n\\nvoid main() {\\n    gl_FragColor = color;\\n}\\n\"\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D previous;\\nuniform sampler2D data;\\n\\nuniform vec2 dataRes;\\n\\nuniform vec2 viewSize;\\n\\nuniform float time;\\nuniform float speedLimit;\\nuniform float flowDecay;\\n\\nattribute vec2 uv;\\n\\nvarying vec4 color;\\n\\n/**\\n * @requires {float} time The current time in ms\\n */\\n\\nvec4 flow(vec2 vel) {\\n    // Faster particles leave a greater influence (opacity).\\n    // Linear interpolation - inaccurate for vectors, will it be OK without\\n    // sudden turns, or do we need a per-fragment lookup?\\n    return vec4(vel, time, length(vel));\\n}\\n\\nvec4 flow(vec2 vel, float speedLimit) {\\n    vec4 values = flow(vel);\\n\\n    return vec4(values.xyz, min(values.a/speedLimit, 1.0));\\n}\\n\\n/**\\n * @requires `./head.vert`\\n * @requires {function} apply A function applying a `vec4` state into a `vec3`\\n *                            color to be drawn.\\n */\\n\\nconst vec2 inert = vec2(-1000000.0);\\n\\nconst float frameOffset = 0.25;\\n\\n/**\\n * For every data point, we have two vertices - current and previous state.\\n * Every other vertex looks up previous data. In this way, (vertical)\\n * neighbours alternate from previous to current state.\\n * (Vertical neighbours, because WebGL iterates column-major.)\\n *\\n * @return State data for the vertex, either current or previous.\\n */\\n\\nvec4 stateAtFrame(vec2 uv, vec2 shape, sampler2D previous, sampler2D current) {\\n    float nearIndex = uv.y*shape.y;\\n    float offset = fract(nearIndex);\\n    vec2 lookup = vec2(uv.x, floor(nearIndex)/shape.y);\\n\\n    // @note Some systems comlain about this form of texture lookup:\\n    // return texture2D(((offset > frameOffset)? current : previous), lookup);\\n    return ((offset > frameOffset)?\\n            texture2D(current, lookup)\\n        :   texture2D(previous, lookup));\\n}\\n\\nvoid main() {\\n    vec4 state = stateAtFrame(uv, dataRes, previous, data);\\n\\n    if(state.xy != inert) {\\n        gl_Position = vec4(state.xy*viewSize, 1.0, 1.0);\\n        color = flow(state.zw, speedLimit);\\n    }\\n}\\n\\n\"\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec4 color;\\n\\nvoid main() {\\n    // @todo SDF from line, to weaken force further away\\n    gl_FragColor = color.rgba;\\n}\\n\"\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform vec4 color;\\n\\nvoid main() {\\n    gl_FragColor = color.rgba;\\n}\\n\"\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D view;\\nuniform vec2 viewRes;\\n\\n// #pragma glslify: fxaa = require(glsl-fxaa)\\n\\nvoid main() {\\n    gl_FragColor = texture2D(view, gl_FragCoord.xy/viewRes);\\n    // gl_FragColor = fxaa(view, gl_FragCoord.xy, viewRes);\\n}\\n\"\n\n/***/ }),\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */,\n/* 197 */,\n/* 198 */,\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */,\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ = __webpack_require__(121);\n\t\n\tObject.keys(_).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _[key];\n\t    }\n\t  });\n\t});\n\tObject.defineProperty(exports, 'default', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_).default;\n\t  }\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3cb7d113ab61cca9fbac","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isObject.js\n// module id = 33\n// module chunks = 0 1 2","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_root.js\n// module id = 35\n// module chunks = 0 1 2","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_freeGlobal.js\n// module id = 36\n// module chunks = 0 1 2","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseGetTag.js\n// module id = 39\n// module chunks = 0 1 2","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Symbol.js\n// module id = 40\n// module chunks = 0 1 2","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getRawTag.js\n// module id = 41\n// module chunks = 0 1 2","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_objectToString.js\n// module id = 42\n// module chunks = 0 1 2","/*!\n@fileoverview gl-matrix - High performance matrix and vector operations\n@author Brandon Jones\n@author Colin MacKenzie IV\n@version 2.7.0\n\nCopyright (c) 2015-2018, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n!function(t,n){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=n();else if(\"function\"==typeof define&&define.amd)define([],n);else{var r=n();for(var a in r)(\"object\"==typeof exports?exports:t)[a]=r[a]}}(\"undefined\"!=typeof self?self:this,function(){return function(t){var n={};function r(a){if(n[a])return n[a].exports;var e=n[a]={i:a,l:!1,exports:{}};return t[a].call(e.exports,e,e.exports,r),e.l=!0,e.exports}return r.m=t,r.c=n,r.d=function(t,n,a){r.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:a})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,n){if(1&n&&(t=r(t)),8&n)return t;if(4&n&&\"object\"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:t}),2&n&&\"string\"!=typeof t)for(var e in t)r.d(a,e,function(n){return t[n]}.bind(null,e));return a},r.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(n,\"a\",n),n},r.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},r.p=\"\",r(r.s=10)}([function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.setMatrixArrayType=function(t){n.ARRAY_TYPE=t},n.toRadian=function(t){return t*e},n.equals=function(t,n){return Math.abs(t-n)<=a*Math.max(1,Math.abs(t),Math.abs(n))};var a=n.EPSILON=1e-6;n.ARRAY_TYPE=\"undefined\"!=typeof Float32Array?Float32Array:Array,n.RANDOM=Math.random;var e=Math.PI/180},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.forEach=n.sqrLen=n.len=n.sqrDist=n.dist=n.div=n.mul=n.sub=void 0,n.create=e,n.clone=function(t){var n=new a.ARRAY_TYPE(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},n.fromValues=function(t,n,r,e){var u=new a.ARRAY_TYPE(4);return u[0]=t,u[1]=n,u[2]=r,u[3]=e,u},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},n.set=function(t,n,r,a,e){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t},n.subtract=u,n.multiply=o,n.divide=i,n.ceil=function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t},n.floor=function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t},n.min=function(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t[2]=Math.min(n[2],r[2]),t[3]=Math.min(n[3],r[3]),t},n.max=function(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t[2]=Math.max(n[2],r[2]),t[3]=Math.max(n[3],r[3]),t},n.round=function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t},n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t},n.scaleAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t},n.distance=s,n.squaredDistance=c,n.length=f,n.squaredLength=M,n.negate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t},n.inverse=function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t},n.normalize=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r*r+a*a+e*e+u*u;o>0&&(o=1/Math.sqrt(o),t[0]=r*o,t[1]=a*o,t[2]=e*o,t[3]=u*o);return t},n.dot=function(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]},n.lerp=function(t,n,r,a){var e=n[0],u=n[1],o=n[2],i=n[3];return t[0]=e+a*(r[0]-e),t[1]=u+a*(r[1]-u),t[2]=o+a*(r[2]-o),t[3]=i+a*(r[3]-i),t},n.random=function(t,n){var r,e,u,o,i,s;n=n||1;do{r=2*a.RANDOM()-1,e=2*a.RANDOM()-1,i=r*r+e*e}while(i>=1);do{u=2*a.RANDOM()-1,o=2*a.RANDOM()-1,s=u*u+o*o}while(s>=1);var c=Math.sqrt((1-i)/s);return t[0]=n*r,t[1]=n*e,t[2]=n*u*c,t[3]=n*o*c,t},n.transformMat4=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3];return t[0]=r[0]*a+r[4]*e+r[8]*u+r[12]*o,t[1]=r[1]*a+r[5]*e+r[9]*u+r[13]*o,t[2]=r[2]*a+r[6]*e+r[10]*u+r[14]*o,t[3]=r[3]*a+r[7]*e+r[11]*u+r[15]*o,t},n.transformQuat=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=r[0],i=r[1],s=r[2],c=r[3],f=c*a+i*u-s*e,M=c*e+s*a-o*u,h=c*u+o*e-i*a,l=-o*a-i*e-s*u;return t[0]=f*c+l*-o+M*-s-h*-i,t[1]=M*c+l*-i+h*-o-f*-s,t[2]=h*c+l*-s+f*-i-M*-o,t[3]=n[3],t},n.str=function(t){return\"vec4(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=n[0],s=n[1],c=n[2],f=n[3];return Math.abs(r-i)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(e-s)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(s))&&Math.abs(u-c)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(o-f)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(f))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(){var t=new a.ARRAY_TYPE(4);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t}function o(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t[2]=n[2]*r[2],t[3]=n[3]*r[3],t}function i(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t[2]=n[2]/r[2],t[3]=n[3]/r[3],t}function s(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2],u=n[3]-t[3];return Math.sqrt(r*r+a*a+e*e+u*u)}function c(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2],u=n[3]-t[3];return r*r+a*a+e*e+u*u}function f(t){var n=t[0],r=t[1],a=t[2],e=t[3];return Math.sqrt(n*n+r*r+a*a+e*e)}function M(t){var n=t[0],r=t[1],a=t[2],e=t[3];return n*n+r*r+a*a+e*e}n.sub=u,n.mul=o,n.div=i,n.dist=s,n.sqrDist=c,n.len=f,n.sqrLen=M,n.forEach=function(){var t=e();return function(n,r,a,e,u,o){var i=void 0,s=void 0;for(r||(r=4),a||(a=0),s=e?Math.min(e*r+a,n.length):n.length,i=a;i<s;i+=r)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],t[3]=n[i+3],u(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2],n[i+3]=t[3];return n}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.forEach=n.sqrLen=n.len=n.sqrDist=n.dist=n.div=n.mul=n.sub=void 0,n.create=e,n.clone=function(t){var n=new a.ARRAY_TYPE(3);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n},n.length=u,n.fromValues=o,n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t},n.set=function(t,n,r,a){return t[0]=n,t[1]=r,t[2]=a,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t},n.subtract=i,n.multiply=s,n.divide=c,n.ceil=function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t},n.floor=function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t},n.min=function(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t[2]=Math.min(n[2],r[2]),t},n.max=function(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t[2]=Math.max(n[2],r[2]),t},n.round=function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t},n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t},n.scaleAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t},n.distance=f,n.squaredDistance=M,n.squaredLength=h,n.negate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t},n.inverse=function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t},n.normalize=l,n.dot=v,n.cross=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=r[0],i=r[1],s=r[2];return t[0]=e*s-u*i,t[1]=u*o-a*s,t[2]=a*i-e*o,t},n.lerp=function(t,n,r,a){var e=n[0],u=n[1],o=n[2];return t[0]=e+a*(r[0]-e),t[1]=u+a*(r[1]-u),t[2]=o+a*(r[2]-o),t},n.hermite=function(t,n,r,a,e,u){var o=u*u,i=o*(2*u-3)+1,s=o*(u-2)+u,c=o*(u-1),f=o*(3-2*u);return t[0]=n[0]*i+r[0]*s+a[0]*c+e[0]*f,t[1]=n[1]*i+r[1]*s+a[1]*c+e[1]*f,t[2]=n[2]*i+r[2]*s+a[2]*c+e[2]*f,t},n.bezier=function(t,n,r,a,e,u){var o=1-u,i=o*o,s=u*u,c=i*o,f=3*u*i,M=3*s*o,h=s*u;return t[0]=n[0]*c+r[0]*f+a[0]*M+e[0]*h,t[1]=n[1]*c+r[1]*f+a[1]*M+e[1]*h,t[2]=n[2]*c+r[2]*f+a[2]*M+e[2]*h,t},n.random=function(t,n){n=n||1;var r=2*a.RANDOM()*Math.PI,e=2*a.RANDOM()-1,u=Math.sqrt(1-e*e)*n;return t[0]=Math.cos(r)*u,t[1]=Math.sin(r)*u,t[2]=e*n,t},n.transformMat4=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=r[3]*a+r[7]*e+r[11]*u+r[15];return o=o||1,t[0]=(r[0]*a+r[4]*e+r[8]*u+r[12])/o,t[1]=(r[1]*a+r[5]*e+r[9]*u+r[13])/o,t[2]=(r[2]*a+r[6]*e+r[10]*u+r[14])/o,t},n.transformMat3=function(t,n,r){var a=n[0],e=n[1],u=n[2];return t[0]=a*r[0]+e*r[3]+u*r[6],t[1]=a*r[1]+e*r[4]+u*r[7],t[2]=a*r[2]+e*r[5]+u*r[8],t},n.transformQuat=function(t,n,r){var a=r[0],e=r[1],u=r[2],o=r[3],i=n[0],s=n[1],c=n[2],f=e*c-u*s,M=u*i-a*c,h=a*s-e*i,l=e*h-u*M,v=u*f-a*h,d=a*M-e*f,b=2*o;return f*=b,M*=b,h*=b,l*=2,v*=2,d*=2,t[0]=i+f+l,t[1]=s+M+v,t[2]=c+h+d,t},n.rotateX=function(t,n,r,a){var e=[],u=[];return e[0]=n[0]-r[0],e[1]=n[1]-r[1],e[2]=n[2]-r[2],u[0]=e[0],u[1]=e[1]*Math.cos(a)-e[2]*Math.sin(a),u[2]=e[1]*Math.sin(a)+e[2]*Math.cos(a),t[0]=u[0]+r[0],t[1]=u[1]+r[1],t[2]=u[2]+r[2],t},n.rotateY=function(t,n,r,a){var e=[],u=[];return e[0]=n[0]-r[0],e[1]=n[1]-r[1],e[2]=n[2]-r[2],u[0]=e[2]*Math.sin(a)+e[0]*Math.cos(a),u[1]=e[1],u[2]=e[2]*Math.cos(a)-e[0]*Math.sin(a),t[0]=u[0]+r[0],t[1]=u[1]+r[1],t[2]=u[2]+r[2],t},n.rotateZ=function(t,n,r,a){var e=[],u=[];return e[0]=n[0]-r[0],e[1]=n[1]-r[1],e[2]=n[2]-r[2],u[0]=e[0]*Math.cos(a)-e[1]*Math.sin(a),u[1]=e[0]*Math.sin(a)+e[1]*Math.cos(a),u[2]=e[2],t[0]=u[0]+r[0],t[1]=u[1]+r[1],t[2]=u[2]+r[2],t},n.angle=function(t,n){var r=o(t[0],t[1],t[2]),a=o(n[0],n[1],n[2]);l(r,r),l(a,a);var e=v(r,a);return e>1?0:e<-1?Math.PI:Math.acos(e)},n.str=function(t){return\"vec3(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=n[0],i=n[1],s=n[2];return Math.abs(r-o)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(e-i)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(i))&&Math.abs(u-s)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(s))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(){var t=new a.ARRAY_TYPE(3);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function u(t){var n=t[0],r=t[1],a=t[2];return Math.sqrt(n*n+r*r+a*a)}function o(t,n,r){var e=new a.ARRAY_TYPE(3);return e[0]=t,e[1]=n,e[2]=r,e}function i(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t}function s(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t[2]=n[2]*r[2],t}function c(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t[2]=n[2]/r[2],t}function f(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2];return Math.sqrt(r*r+a*a+e*e)}function M(t,n){var r=n[0]-t[0],a=n[1]-t[1],e=n[2]-t[2];return r*r+a*a+e*e}function h(t){var n=t[0],r=t[1],a=t[2];return n*n+r*r+a*a}function l(t,n){var r=n[0],a=n[1],e=n[2],u=r*r+a*a+e*e;return u>0&&(u=1/Math.sqrt(u),t[0]=n[0]*u,t[1]=n[1]*u,t[2]=n[2]*u),t}function v(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}n.sub=i,n.mul=s,n.div=c,n.dist=f,n.sqrDist=M,n.len=u,n.sqrLen=h,n.forEach=function(){var t=e();return function(n,r,a,e,u,o){var i=void 0,s=void 0;for(r||(r=3),a||(a=0),s=e?Math.min(e*r+a,n.length):n.length,i=a;i<s;i+=r)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],u(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2];return n}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.setAxes=n.sqlerp=n.rotationTo=n.equals=n.exactEquals=n.normalize=n.sqrLen=n.squaredLength=n.len=n.length=n.lerp=n.dot=n.scale=n.mul=n.add=n.set=n.copy=n.fromValues=n.clone=void 0,n.create=s,n.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},n.setAxisAngle=c,n.getAxisAngle=function(t,n){var r=2*Math.acos(n[3]),e=Math.sin(r/2);e>a.EPSILON?(t[0]=n[0]/e,t[1]=n[1]/e,t[2]=n[2]/e):(t[0]=1,t[1]=0,t[2]=0);return r},n.multiply=f,n.rotateX=function(t,n,r){r*=.5;var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s+o*i,t[1]=e*s+u*i,t[2]=u*s-e*i,t[3]=o*s-a*i,t},n.rotateY=function(t,n,r){r*=.5;var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s-u*i,t[1]=e*s+o*i,t[2]=u*s+a*i,t[3]=o*s-e*i,t},n.rotateZ=function(t,n,r){r*=.5;var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s+e*i,t[1]=e*s-a*i,t[2]=u*s+o*i,t[3]=o*s-u*i,t},n.calculateW=function(t,n){var r=n[0],a=n[1],e=n[2];return t[0]=r,t[1]=a,t[2]=e,t[3]=Math.sqrt(Math.abs(1-r*r-a*a-e*e)),t},n.slerp=M,n.random=function(t){var n=a.RANDOM(),r=a.RANDOM(),e=a.RANDOM(),u=Math.sqrt(1-n),o=Math.sqrt(n);return t[0]=u*Math.sin(2*Math.PI*r),t[1]=u*Math.cos(2*Math.PI*r),t[2]=o*Math.sin(2*Math.PI*e),t[3]=o*Math.cos(2*Math.PI*e),t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r*r+a*a+e*e+u*u,i=o?1/o:0;return t[0]=-r*i,t[1]=-a*i,t[2]=-e*i,t[3]=u*i,t},n.conjugate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t},n.fromMat3=h,n.fromEuler=function(t,n,r,a){var e=.5*Math.PI/180;n*=e,r*=e,a*=e;var u=Math.sin(n),o=Math.cos(n),i=Math.sin(r),s=Math.cos(r),c=Math.sin(a),f=Math.cos(a);return t[0]=u*s*f-o*i*c,t[1]=o*i*f+u*s*c,t[2]=o*s*c-u*i*f,t[3]=o*s*f+u*i*c,t},n.str=function(t){return\"quat(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"};var a=i(r(0)),e=i(r(5)),u=i(r(2)),o=i(r(1));function i(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}function s(){var t=new a.ARRAY_TYPE(4);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function c(t,n,r){r*=.5;var a=Math.sin(r);return t[0]=a*n[0],t[1]=a*n[1],t[2]=a*n[2],t[3]=Math.cos(r),t}function f(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1],c=r[2],f=r[3];return t[0]=a*f+o*i+e*c-u*s,t[1]=e*f+o*s+u*i-a*c,t[2]=u*f+o*c+a*s-e*i,t[3]=o*f-a*i-e*s-u*c,t}function M(t,n,r,e){var u=n[0],o=n[1],i=n[2],s=n[3],c=r[0],f=r[1],M=r[2],h=r[3],l=void 0,v=void 0,d=void 0,b=void 0,m=void 0;return(v=u*c+o*f+i*M+s*h)<0&&(v=-v,c=-c,f=-f,M=-M,h=-h),1-v>a.EPSILON?(l=Math.acos(v),d=Math.sin(l),b=Math.sin((1-e)*l)/d,m=Math.sin(e*l)/d):(b=1-e,m=e),t[0]=b*u+m*c,t[1]=b*o+m*f,t[2]=b*i+m*M,t[3]=b*s+m*h,t}function h(t,n){var r=n[0]+n[4]+n[8],a=void 0;if(r>0)a=Math.sqrt(r+1),t[3]=.5*a,a=.5/a,t[0]=(n[5]-n[7])*a,t[1]=(n[6]-n[2])*a,t[2]=(n[1]-n[3])*a;else{var e=0;n[4]>n[0]&&(e=1),n[8]>n[3*e+e]&&(e=2);var u=(e+1)%3,o=(e+2)%3;a=Math.sqrt(n[3*e+e]-n[3*u+u]-n[3*o+o]+1),t[e]=.5*a,a=.5/a,t[3]=(n[3*u+o]-n[3*o+u])*a,t[u]=(n[3*u+e]+n[3*e+u])*a,t[o]=(n[3*o+e]+n[3*e+o])*a}return t}n.clone=o.clone,n.fromValues=o.fromValues,n.copy=o.copy,n.set=o.set,n.add=o.add,n.mul=f,n.scale=o.scale,n.dot=o.dot,n.lerp=o.lerp;var l=n.length=o.length,v=(n.len=l,n.squaredLength=o.squaredLength),d=(n.sqrLen=v,n.normalize=o.normalize);n.exactEquals=o.exactEquals,n.equals=o.equals,n.rotationTo=function(){var t=u.create(),n=u.fromValues(1,0,0),r=u.fromValues(0,1,0);return function(a,e,o){var i=u.dot(e,o);return i<-.999999?(u.cross(t,n,e),u.len(t)<1e-6&&u.cross(t,r,e),u.normalize(t,t),c(a,t,Math.PI),a):i>.999999?(a[0]=0,a[1]=0,a[2]=0,a[3]=1,a):(u.cross(t,e,o),a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=1+i,d(a,a))}}(),n.sqlerp=function(){var t=s(),n=s();return function(r,a,e,u,o,i){return M(t,a,o,i),M(n,e,u,i),M(r,t,n,2*i*(1-i)),r}}(),n.setAxes=function(){var t=e.create();return function(n,r,a,e){return t[0]=a[0],t[3]=a[1],t[6]=a[2],t[1]=e[0],t[4]=e[1],t[7]=e[2],t[2]=-r[0],t[5]=-r[1],t[8]=-r[2],d(n,h(n,t))}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(16);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0);return t[0]=1,t[5]=1,t[10]=1,t[15]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(16);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},n.fromValues=function(t,n,r,e,u,o,i,s,c,f,M,h,l,v,d,b){var m=new a.ARRAY_TYPE(16);return m[0]=t,m[1]=n,m[2]=r,m[3]=e,m[4]=u,m[5]=o,m[6]=i,m[7]=s,m[8]=c,m[9]=f,m[10]=M,m[11]=h,m[12]=l,m[13]=v,m[14]=d,m[15]=b,m},n.set=function(t,n,r,a,e,u,o,i,s,c,f,M,h,l,v,d,b){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t[6]=i,t[7]=s,t[8]=c,t[9]=f,t[10]=M,t[11]=h,t[12]=l,t[13]=v,t[14]=d,t[15]=b,t},n.identity=e,n.transpose=function(t,n){if(t===n){var r=n[1],a=n[2],e=n[3],u=n[6],o=n[7],i=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=r,t[6]=n[9],t[7]=n[13],t[8]=a,t[9]=u,t[11]=n[14],t[12]=e,t[13]=o,t[14]=i}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15];return t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=n[9],h=n[10],l=n[11],v=n[12],d=n[13],b=n[14],m=n[15],p=r*i-a*o,P=r*s-e*o,A=r*c-u*o,E=a*s-e*i,O=a*c-u*i,R=e*c-u*s,y=f*d-M*v,q=f*b-h*v,x=f*m-l*v,_=M*b-h*d,Y=M*m-l*d,L=h*m-l*b,S=p*L-P*Y+A*_+E*x-O*q+R*y;if(!S)return null;return S=1/S,t[0]=(i*L-s*Y+c*_)*S,t[1]=(e*Y-a*L-u*_)*S,t[2]=(d*R-b*O+m*E)*S,t[3]=(h*O-M*R-l*E)*S,t[4]=(s*x-o*L-c*q)*S,t[5]=(r*L-e*x+u*q)*S,t[6]=(b*A-v*R-m*P)*S,t[7]=(f*R-h*A+l*P)*S,t[8]=(o*Y-i*x+c*y)*S,t[9]=(a*x-r*Y-u*y)*S,t[10]=(v*O-d*A+m*p)*S,t[11]=(M*A-f*O-l*p)*S,t[12]=(i*q-o*_-s*y)*S,t[13]=(r*_-a*q+e*y)*S,t[14]=(d*P-v*E-b*p)*S,t[15]=(f*E-M*P+h*p)*S,t},n.adjoint=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=n[9],h=n[10],l=n[11],v=n[12],d=n[13],b=n[14],m=n[15];return t[0]=i*(h*m-l*b)-M*(s*m-c*b)+d*(s*l-c*h),t[1]=-(a*(h*m-l*b)-M*(e*m-u*b)+d*(e*l-u*h)),t[2]=a*(s*m-c*b)-i*(e*m-u*b)+d*(e*c-u*s),t[3]=-(a*(s*l-c*h)-i*(e*l-u*h)+M*(e*c-u*s)),t[4]=-(o*(h*m-l*b)-f*(s*m-c*b)+v*(s*l-c*h)),t[5]=r*(h*m-l*b)-f*(e*m-u*b)+v*(e*l-u*h),t[6]=-(r*(s*m-c*b)-o*(e*m-u*b)+v*(e*c-u*s)),t[7]=r*(s*l-c*h)-o*(e*l-u*h)+f*(e*c-u*s),t[8]=o*(M*m-l*d)-f*(i*m-c*d)+v*(i*l-c*M),t[9]=-(r*(M*m-l*d)-f*(a*m-u*d)+v*(a*l-u*M)),t[10]=r*(i*m-c*d)-o*(a*m-u*d)+v*(a*c-u*i),t[11]=-(r*(i*l-c*M)-o*(a*l-u*M)+f*(a*c-u*i)),t[12]=-(o*(M*b-h*d)-f*(i*b-s*d)+v*(i*h-s*M)),t[13]=r*(M*b-h*d)-f*(a*b-e*d)+v*(a*h-e*M),t[14]=-(r*(i*b-s*d)-o*(a*b-e*d)+v*(a*s-e*i)),t[15]=r*(i*h-s*M)-o*(a*h-e*M)+f*(a*s-e*i),t},n.determinant=function(t){var n=t[0],r=t[1],a=t[2],e=t[3],u=t[4],o=t[5],i=t[6],s=t[7],c=t[8],f=t[9],M=t[10],h=t[11],l=t[12],v=t[13],d=t[14],b=t[15];return(n*o-r*u)*(M*b-h*d)-(n*i-a*u)*(f*b-h*v)+(n*s-e*u)*(f*d-M*v)+(r*i-a*o)*(c*b-h*l)-(r*s-e*o)*(c*d-M*l)+(a*s-e*i)*(c*v-f*l)},n.multiply=u,n.translate=function(t,n,r){var a=r[0],e=r[1],u=r[2],o=void 0,i=void 0,s=void 0,c=void 0,f=void 0,M=void 0,h=void 0,l=void 0,v=void 0,d=void 0,b=void 0,m=void 0;n===t?(t[12]=n[0]*a+n[4]*e+n[8]*u+n[12],t[13]=n[1]*a+n[5]*e+n[9]*u+n[13],t[14]=n[2]*a+n[6]*e+n[10]*u+n[14],t[15]=n[3]*a+n[7]*e+n[11]*u+n[15]):(o=n[0],i=n[1],s=n[2],c=n[3],f=n[4],M=n[5],h=n[6],l=n[7],v=n[8],d=n[9],b=n[10],m=n[11],t[0]=o,t[1]=i,t[2]=s,t[3]=c,t[4]=f,t[5]=M,t[6]=h,t[7]=l,t[8]=v,t[9]=d,t[10]=b,t[11]=m,t[12]=o*a+f*e+v*u+n[12],t[13]=i*a+M*e+d*u+n[13],t[14]=s*a+h*e+b*u+n[14],t[15]=c*a+l*e+m*u+n[15]);return t},n.scale=function(t,n,r){var a=r[0],e=r[1],u=r[2];return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*e,t[5]=n[5]*e,t[6]=n[6]*e,t[7]=n[7]*e,t[8]=n[8]*u,t[9]=n[9]*u,t[10]=n[10]*u,t[11]=n[11]*u,t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},n.rotate=function(t,n,r,e){var u=e[0],o=e[1],i=e[2],s=Math.sqrt(u*u+o*o+i*i),c=void 0,f=void 0,M=void 0,h=void 0,l=void 0,v=void 0,d=void 0,b=void 0,m=void 0,p=void 0,P=void 0,A=void 0,E=void 0,O=void 0,R=void 0,y=void 0,q=void 0,x=void 0,_=void 0,Y=void 0,L=void 0,S=void 0,w=void 0,I=void 0;if(s<a.EPSILON)return null;u*=s=1/s,o*=s,i*=s,c=Math.sin(r),f=Math.cos(r),M=1-f,h=n[0],l=n[1],v=n[2],d=n[3],b=n[4],m=n[5],p=n[6],P=n[7],A=n[8],E=n[9],O=n[10],R=n[11],y=u*u*M+f,q=o*u*M+i*c,x=i*u*M-o*c,_=u*o*M-i*c,Y=o*o*M+f,L=i*o*M+u*c,S=u*i*M+o*c,w=o*i*M-u*c,I=i*i*M+f,t[0]=h*y+b*q+A*x,t[1]=l*y+m*q+E*x,t[2]=v*y+p*q+O*x,t[3]=d*y+P*q+R*x,t[4]=h*_+b*Y+A*L,t[5]=l*_+m*Y+E*L,t[6]=v*_+p*Y+O*L,t[7]=d*_+P*Y+R*L,t[8]=h*S+b*w+A*I,t[9]=l*S+m*w+E*I,t[10]=v*S+p*w+O*I,t[11]=d*S+P*w+R*I,n!==t&&(t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t},n.rotateX=function(t,n,r){var a=Math.sin(r),e=Math.cos(r),u=n[4],o=n[5],i=n[6],s=n[7],c=n[8],f=n[9],M=n[10],h=n[11];n!==t&&(t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t[4]=u*e+c*a,t[5]=o*e+f*a,t[6]=i*e+M*a,t[7]=s*e+h*a,t[8]=c*e-u*a,t[9]=f*e-o*a,t[10]=M*e-i*a,t[11]=h*e-s*a,t},n.rotateY=function(t,n,r){var a=Math.sin(r),e=Math.cos(r),u=n[0],o=n[1],i=n[2],s=n[3],c=n[8],f=n[9],M=n[10],h=n[11];n!==t&&(t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t[0]=u*e-c*a,t[1]=o*e-f*a,t[2]=i*e-M*a,t[3]=s*e-h*a,t[8]=u*a+c*e,t[9]=o*a+f*e,t[10]=i*a+M*e,t[11]=s*a+h*e,t},n.rotateZ=function(t,n,r){var a=Math.sin(r),e=Math.cos(r),u=n[0],o=n[1],i=n[2],s=n[3],c=n[4],f=n[5],M=n[6],h=n[7];n!==t&&(t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]);return t[0]=u*e+c*a,t[1]=o*e+f*a,t[2]=i*e+M*a,t[3]=s*e+h*a,t[4]=c*e-u*a,t[5]=f*e-o*a,t[6]=M*e-i*a,t[7]=h*e-s*a,t},n.fromTranslation=function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=n[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromRotation=function(t,n,r){var e=r[0],u=r[1],o=r[2],i=Math.sqrt(e*e+u*u+o*o),s=void 0,c=void 0,f=void 0;if(i<a.EPSILON)return null;return e*=i=1/i,u*=i,o*=i,s=Math.sin(n),c=Math.cos(n),f=1-c,t[0]=e*e*f+c,t[1]=u*e*f+o*s,t[2]=o*e*f-u*s,t[3]=0,t[4]=e*u*f-o*s,t[5]=u*u*f+c,t[6]=o*u*f+e*s,t[7]=0,t[8]=e*o*f+u*s,t[9]=u*o*f-e*s,t[10]=o*o*f+c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromXRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=r,t[7]=0,t[8]=0,t[9]=-r,t[10]=a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromYRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=0,t[2]=-r,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=r,t[9]=0,t[10]=a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromZRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=0,t[3]=0,t[4]=-r,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.fromRotationTranslation=o,n.fromQuat2=function(t,n){var r=new a.ARRAY_TYPE(3),e=-n[0],u=-n[1],i=-n[2],s=n[3],c=n[4],f=n[5],M=n[6],h=n[7],l=e*e+u*u+i*i+s*s;l>0?(r[0]=2*(c*s+h*e+f*i-M*u)/l,r[1]=2*(f*s+h*u+M*e-c*i)/l,r[2]=2*(M*s+h*i+c*u-f*e)/l):(r[0]=2*(c*s+h*e+f*i-M*u),r[1]=2*(f*s+h*u+M*e-c*i),r[2]=2*(M*s+h*i+c*u-f*e));return o(t,n,r),t},n.getTranslation=function(t,n){return t[0]=n[12],t[1]=n[13],t[2]=n[14],t},n.getScaling=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[4],o=n[5],i=n[6],s=n[8],c=n[9],f=n[10];return t[0]=Math.sqrt(r*r+a*a+e*e),t[1]=Math.sqrt(u*u+o*o+i*i),t[2]=Math.sqrt(s*s+c*c+f*f),t},n.getRotation=function(t,n){var r=n[0]+n[5]+n[10],a=0;r>0?(a=2*Math.sqrt(r+1),t[3]=.25*a,t[0]=(n[6]-n[9])/a,t[1]=(n[8]-n[2])/a,t[2]=(n[1]-n[4])/a):n[0]>n[5]&&n[0]>n[10]?(a=2*Math.sqrt(1+n[0]-n[5]-n[10]),t[3]=(n[6]-n[9])/a,t[0]=.25*a,t[1]=(n[1]+n[4])/a,t[2]=(n[8]+n[2])/a):n[5]>n[10]?(a=2*Math.sqrt(1+n[5]-n[0]-n[10]),t[3]=(n[8]-n[2])/a,t[0]=(n[1]+n[4])/a,t[1]=.25*a,t[2]=(n[6]+n[9])/a):(a=2*Math.sqrt(1+n[10]-n[0]-n[5]),t[3]=(n[1]-n[4])/a,t[0]=(n[8]+n[2])/a,t[1]=(n[6]+n[9])/a,t[2]=.25*a);return t},n.fromRotationTranslationScale=function(t,n,r,a){var e=n[0],u=n[1],o=n[2],i=n[3],s=e+e,c=u+u,f=o+o,M=e*s,h=e*c,l=e*f,v=u*c,d=u*f,b=o*f,m=i*s,p=i*c,P=i*f,A=a[0],E=a[1],O=a[2];return t[0]=(1-(v+b))*A,t[1]=(h+P)*A,t[2]=(l-p)*A,t[3]=0,t[4]=(h-P)*E,t[5]=(1-(M+b))*E,t[6]=(d+m)*E,t[7]=0,t[8]=(l+p)*O,t[9]=(d-m)*O,t[10]=(1-(M+v))*O,t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t},n.fromRotationTranslationScaleOrigin=function(t,n,r,a,e){var u=n[0],o=n[1],i=n[2],s=n[3],c=u+u,f=o+o,M=i+i,h=u*c,l=u*f,v=u*M,d=o*f,b=o*M,m=i*M,p=s*c,P=s*f,A=s*M,E=a[0],O=a[1],R=a[2],y=e[0],q=e[1],x=e[2],_=(1-(d+m))*E,Y=(l+A)*E,L=(v-P)*E,S=(l-A)*O,w=(1-(h+m))*O,I=(b+p)*O,N=(v+P)*R,g=(b-p)*R,T=(1-(h+d))*R;return t[0]=_,t[1]=Y,t[2]=L,t[3]=0,t[4]=S,t[5]=w,t[6]=I,t[7]=0,t[8]=N,t[9]=g,t[10]=T,t[11]=0,t[12]=r[0]+y-(_*y+S*q+N*x),t[13]=r[1]+q-(Y*y+w*q+g*x),t[14]=r[2]+x-(L*y+I*q+T*x),t[15]=1,t},n.fromQuat=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r+r,i=a+a,s=e+e,c=r*o,f=a*o,M=a*i,h=e*o,l=e*i,v=e*s,d=u*o,b=u*i,m=u*s;return t[0]=1-M-v,t[1]=f+m,t[2]=h-b,t[3]=0,t[4]=f-m,t[5]=1-c-v,t[6]=l+d,t[7]=0,t[8]=h+b,t[9]=l-d,t[10]=1-c-M,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},n.frustum=function(t,n,r,a,e,u,o){var i=1/(r-n),s=1/(e-a),c=1/(u-o);return t[0]=2*u*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*u*s,t[6]=0,t[7]=0,t[8]=(r+n)*i,t[9]=(e+a)*s,t[10]=(o+u)*c,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*u*2*c,t[15]=0,t},n.perspective=function(t,n,r,a,e){var u=1/Math.tan(n/2),o=void 0;t[0]=u/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=e&&e!==1/0?(o=1/(a-e),t[10]=(e+a)*o,t[14]=2*e*a*o):(t[10]=-1,t[14]=-2*a);return t},n.perspectiveFromFieldOfView=function(t,n,r,a){var e=Math.tan(n.upDegrees*Math.PI/180),u=Math.tan(n.downDegrees*Math.PI/180),o=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),s=2/(o+i),c=2/(e+u);return t[0]=s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=c,t[6]=0,t[7]=0,t[8]=-(o-i)*s*.5,t[9]=(e-u)*c*.5,t[10]=a/(r-a),t[11]=-1,t[12]=0,t[13]=0,t[14]=a*r/(r-a),t[15]=0,t},n.ortho=function(t,n,r,a,e,u,o){var i=1/(n-r),s=1/(a-e),c=1/(u-o);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*s,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*c,t[11]=0,t[12]=(n+r)*i,t[13]=(e+a)*s,t[14]=(o+u)*c,t[15]=1,t},n.lookAt=function(t,n,r,u){var o=void 0,i=void 0,s=void 0,c=void 0,f=void 0,M=void 0,h=void 0,l=void 0,v=void 0,d=void 0,b=n[0],m=n[1],p=n[2],P=u[0],A=u[1],E=u[2],O=r[0],R=r[1],y=r[2];if(Math.abs(b-O)<a.EPSILON&&Math.abs(m-R)<a.EPSILON&&Math.abs(p-y)<a.EPSILON)return e(t);h=b-O,l=m-R,v=p-y,d=1/Math.sqrt(h*h+l*l+v*v),o=A*(v*=d)-E*(l*=d),i=E*(h*=d)-P*v,s=P*l-A*h,(d=Math.sqrt(o*o+i*i+s*s))?(o*=d=1/d,i*=d,s*=d):(o=0,i=0,s=0);c=l*s-v*i,f=v*o-h*s,M=h*i-l*o,(d=Math.sqrt(c*c+f*f+M*M))?(c*=d=1/d,f*=d,M*=d):(c=0,f=0,M=0);return t[0]=o,t[1]=c,t[2]=h,t[3]=0,t[4]=i,t[5]=f,t[6]=l,t[7]=0,t[8]=s,t[9]=M,t[10]=v,t[11]=0,t[12]=-(o*b+i*m+s*p),t[13]=-(c*b+f*m+M*p),t[14]=-(h*b+l*m+v*p),t[15]=1,t},n.targetTo=function(t,n,r,a){var e=n[0],u=n[1],o=n[2],i=a[0],s=a[1],c=a[2],f=e-r[0],M=u-r[1],h=o-r[2],l=f*f+M*M+h*h;l>0&&(l=1/Math.sqrt(l),f*=l,M*=l,h*=l);var v=s*h-c*M,d=c*f-i*h,b=i*M-s*f;(l=v*v+d*d+b*b)>0&&(l=1/Math.sqrt(l),v*=l,d*=l,b*=l);return t[0]=v,t[1]=d,t[2]=b,t[3]=0,t[4]=M*b-h*d,t[5]=h*v-f*b,t[6]=f*d-M*v,t[7]=0,t[8]=f,t[9]=M,t[10]=h,t[11]=0,t[12]=e,t[13]=u,t[14]=o,t[15]=1,t},n.str=function(t){return\"mat4(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\", \"+t[8]+\", \"+t[9]+\", \"+t[10]+\", \"+t[11]+\", \"+t[12]+\", \"+t[13]+\", \"+t[14]+\", \"+t[15]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t[6]=n[6]+r[6],t[7]=n[7]+r[7],t[8]=n[8]+r[8],t[9]=n[9]+r[9],t[10]=n[10]+r[10],t[11]=n[11]+r[11],t[12]=n[12]+r[12],t[13]=n[13]+r[13],t[14]=n[14]+r[14],t[15]=n[15]+r[15],t},n.subtract=i,n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=n[7]*r,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=n[11]*r,t[12]=n[12]*r,t[13]=n[13]*r,t[14]=n[14]*r,t[15]=n[15]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t[4]=n[4]+r[4]*a,t[5]=n[5]+r[5]*a,t[6]=n[6]+r[6]*a,t[7]=n[7]+r[7]*a,t[8]=n[8]+r[8]*a,t[9]=n[9]+r[9]*a,t[10]=n[10]+r[10]*a,t[11]=n[11]+r[11]*a,t[12]=n[12]+r[12]*a,t[13]=n[13]+r[13]*a,t[14]=n[14]+r[14]*a,t[15]=n[15]+r[15]*a,t},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=t[6],f=t[7],M=t[8],h=t[9],l=t[10],v=t[11],d=t[12],b=t[13],m=t[14],p=t[15],P=n[0],A=n[1],E=n[2],O=n[3],R=n[4],y=n[5],q=n[6],x=n[7],_=n[8],Y=n[9],L=n[10],S=n[11],w=n[12],I=n[13],N=n[14],g=n[15];return Math.abs(r-P)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(P))&&Math.abs(e-A)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(A))&&Math.abs(u-E)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(E))&&Math.abs(o-O)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(O))&&Math.abs(i-R)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(R))&&Math.abs(s-y)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(y))&&Math.abs(c-q)<=a.EPSILON*Math.max(1,Math.abs(c),Math.abs(q))&&Math.abs(f-x)<=a.EPSILON*Math.max(1,Math.abs(f),Math.abs(x))&&Math.abs(M-_)<=a.EPSILON*Math.max(1,Math.abs(M),Math.abs(_))&&Math.abs(h-Y)<=a.EPSILON*Math.max(1,Math.abs(h),Math.abs(Y))&&Math.abs(l-L)<=a.EPSILON*Math.max(1,Math.abs(l),Math.abs(L))&&Math.abs(v-S)<=a.EPSILON*Math.max(1,Math.abs(v),Math.abs(S))&&Math.abs(d-w)<=a.EPSILON*Math.max(1,Math.abs(d),Math.abs(w))&&Math.abs(b-I)<=a.EPSILON*Math.max(1,Math.abs(b),Math.abs(I))&&Math.abs(m-N)<=a.EPSILON*Math.max(1,Math.abs(m),Math.abs(N))&&Math.abs(p-g)<=a.EPSILON*Math.max(1,Math.abs(p),Math.abs(g))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function u(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=n[9],l=n[10],v=n[11],d=n[12],b=n[13],m=n[14],p=n[15],P=r[0],A=r[1],E=r[2],O=r[3];return t[0]=P*a+A*i+E*M+O*d,t[1]=P*e+A*s+E*h+O*b,t[2]=P*u+A*c+E*l+O*m,t[3]=P*o+A*f+E*v+O*p,P=r[4],A=r[5],E=r[6],O=r[7],t[4]=P*a+A*i+E*M+O*d,t[5]=P*e+A*s+E*h+O*b,t[6]=P*u+A*c+E*l+O*m,t[7]=P*o+A*f+E*v+O*p,P=r[8],A=r[9],E=r[10],O=r[11],t[8]=P*a+A*i+E*M+O*d,t[9]=P*e+A*s+E*h+O*b,t[10]=P*u+A*c+E*l+O*m,t[11]=P*o+A*f+E*v+O*p,P=r[12],A=r[13],E=r[14],O=r[15],t[12]=P*a+A*i+E*M+O*d,t[13]=P*e+A*s+E*h+O*b,t[14]=P*u+A*c+E*l+O*m,t[15]=P*o+A*f+E*v+O*p,t}function o(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=a+a,s=e+e,c=u+u,f=a*i,M=a*s,h=a*c,l=e*s,v=e*c,d=u*c,b=o*i,m=o*s,p=o*c;return t[0]=1-(l+d),t[1]=M+p,t[2]=h-m,t[3]=0,t[4]=M-p,t[5]=1-(f+d),t[6]=v+b,t[7]=0,t[8]=h+m,t[9]=v-b,t[10]=1-(f+l),t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t}function i(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t[4]=n[4]-r[4],t[5]=n[5]-r[5],t[6]=n[6]-r[6],t[7]=n[7]-r[7],t[8]=n[8]-r[8],t[9]=n[9]-r[9],t[10]=n[10]-r[10],t[11]=n[11]-r[11],t[12]=n[12]-r[12],t[13]=n[13]-r[13],t[14]=n[14]-r[14],t[15]=n[15]-r[15],t}n.mul=u,n.sub=i},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(9);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0);return t[0]=1,t[4]=1,t[8]=1,t},n.fromMat4=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[4],t[4]=n[5],t[5]=n[6],t[6]=n[8],t[7]=n[9],t[8]=n[10],t},n.clone=function(t){var n=new a.ARRAY_TYPE(9);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},n.fromValues=function(t,n,r,e,u,o,i,s,c){var f=new a.ARRAY_TYPE(9);return f[0]=t,f[1]=n,f[2]=r,f[3]=e,f[4]=u,f[5]=o,f[6]=i,f[7]=s,f[8]=c,f},n.set=function(t,n,r,a,e,u,o,i,s,c){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t[6]=i,t[7]=s,t[8]=c,t},n.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},n.transpose=function(t,n){if(t===n){var r=n[1],a=n[2],e=n[5];t[1]=n[3],t[2]=n[6],t[3]=r,t[5]=n[7],t[6]=a,t[7]=e}else t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8];return t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=f*o-i*c,h=-f*u+i*s,l=c*u-o*s,v=r*M+a*h+e*l;if(!v)return null;return v=1/v,t[0]=M*v,t[1]=(-f*a+e*c)*v,t[2]=(i*a-e*o)*v,t[3]=h*v,t[4]=(f*r-e*s)*v,t[5]=(-i*r+e*u)*v,t[6]=l*v,t[7]=(-c*r+a*s)*v,t[8]=(o*r-a*u)*v,t},n.adjoint=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8];return t[0]=o*f-i*c,t[1]=e*c-a*f,t[2]=a*i-e*o,t[3]=i*s-u*f,t[4]=r*f-e*s,t[5]=e*u-r*i,t[6]=u*c-o*s,t[7]=a*s-r*c,t[8]=r*o-a*u,t},n.determinant=function(t){var n=t[0],r=t[1],a=t[2],e=t[3],u=t[4],o=t[5],i=t[6],s=t[7],c=t[8];return n*(c*u-o*s)+r*(-c*e+o*i)+a*(s*e-u*i)},n.multiply=e,n.translate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=r[0],l=r[1];return t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=i,t[5]=s,t[6]=h*a+l*o+c,t[7]=h*e+l*i+f,t[8]=h*u+l*s+M,t},n.rotate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=Math.sin(r),l=Math.cos(r);return t[0]=l*a+h*o,t[1]=l*e+h*i,t[2]=l*u+h*s,t[3]=l*o-h*a,t[4]=l*i-h*e,t[5]=l*s-h*u,t[6]=c,t[7]=f,t[8]=M,t},n.scale=function(t,n,r){var a=r[0],e=r[1];return t[0]=a*n[0],t[1]=a*n[1],t[2]=a*n[2],t[3]=e*n[3],t[4]=e*n[4],t[5]=e*n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},n.fromTranslation=function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=n[0],t[7]=n[1],t[8]=1,t},n.fromRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=0,t[3]=-r,t[4]=a,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=n[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},n.fromMat2d=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=0,t[3]=n[2],t[4]=n[3],t[5]=0,t[6]=n[4],t[7]=n[5],t[8]=1,t},n.fromQuat=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r+r,i=a+a,s=e+e,c=r*o,f=a*o,M=a*i,h=e*o,l=e*i,v=e*s,d=u*o,b=u*i,m=u*s;return t[0]=1-M-v,t[3]=f-m,t[6]=h+b,t[1]=f+m,t[4]=1-c-v,t[7]=l-d,t[2]=h-b,t[5]=l+d,t[8]=1-c-M,t},n.normalFromMat4=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=n[6],c=n[7],f=n[8],M=n[9],h=n[10],l=n[11],v=n[12],d=n[13],b=n[14],m=n[15],p=r*i-a*o,P=r*s-e*o,A=r*c-u*o,E=a*s-e*i,O=a*c-u*i,R=e*c-u*s,y=f*d-M*v,q=f*b-h*v,x=f*m-l*v,_=M*b-h*d,Y=M*m-l*d,L=h*m-l*b,S=p*L-P*Y+A*_+E*x-O*q+R*y;if(!S)return null;return S=1/S,t[0]=(i*L-s*Y+c*_)*S,t[1]=(s*x-o*L-c*q)*S,t[2]=(o*Y-i*x+c*y)*S,t[3]=(e*Y-a*L-u*_)*S,t[4]=(r*L-e*x+u*q)*S,t[5]=(a*x-r*Y-u*y)*S,t[6]=(d*R-b*O+m*E)*S,t[7]=(b*A-v*R-m*P)*S,t[8]=(v*O-d*A+m*p)*S,t},n.projection=function(t,n,r){return t[0]=2/n,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/r,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t},n.str=function(t){return\"mat3(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\", \"+t[8]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t[6]=n[6]+r[6],t[7]=n[7]+r[7],t[8]=n[8]+r[8],t},n.subtract=u,n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=n[7]*r,t[8]=n[8]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t[4]=n[4]+r[4]*a,t[5]=n[5]+r[5]*a,t[6]=n[6]+r[6]*a,t[7]=n[7]+r[7]*a,t[8]=n[8]+r[8]*a,t},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=t[6],f=t[7],M=t[8],h=n[0],l=n[1],v=n[2],d=n[3],b=n[4],m=n[5],p=n[6],P=n[7],A=n[8];return Math.abs(r-h)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(e-l)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(u-v)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(v))&&Math.abs(o-d)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(d))&&Math.abs(i-b)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(s-m)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(m))&&Math.abs(c-p)<=a.EPSILON*Math.max(1,Math.abs(c),Math.abs(p))&&Math.abs(f-P)<=a.EPSILON*Math.max(1,Math.abs(f),Math.abs(P))&&Math.abs(M-A)<=a.EPSILON*Math.max(1,Math.abs(M),Math.abs(A))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=n[6],f=n[7],M=n[8],h=r[0],l=r[1],v=r[2],d=r[3],b=r[4],m=r[5],p=r[6],P=r[7],A=r[8];return t[0]=h*a+l*o+v*c,t[1]=h*e+l*i+v*f,t[2]=h*u+l*s+v*M,t[3]=d*a+b*o+m*c,t[4]=d*e+b*i+m*f,t[5]=d*u+b*s+m*M,t[6]=p*a+P*o+A*c,t[7]=p*e+P*i+A*f,t[8]=p*u+P*s+A*M,t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t[4]=n[4]-r[4],t[5]=n[5]-r[5],t[6]=n[6]-r[6],t[7]=n[7]-r[7],t[8]=n[8]-r[8],t}n.mul=e,n.sub=u},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.forEach=n.sqrLen=n.sqrDist=n.dist=n.div=n.mul=n.sub=n.len=void 0,n.create=e,n.clone=function(t){var n=new a.ARRAY_TYPE(2);return n[0]=t[0],n[1]=t[1],n},n.fromValues=function(t,n){var r=new a.ARRAY_TYPE(2);return r[0]=t,r[1]=n,r},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t},n.set=function(t,n,r){return t[0]=n,t[1]=r,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t},n.subtract=u,n.multiply=o,n.divide=i,n.ceil=function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},n.floor=function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},n.min=function(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t},n.max=function(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t},n.round=function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t},n.scaleAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t},n.distance=s,n.squaredDistance=c,n.length=f,n.squaredLength=M,n.negate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t},n.inverse=function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},n.normalize=function(t,n){var r=n[0],a=n[1],e=r*r+a*a;e>0&&(e=1/Math.sqrt(e),t[0]=n[0]*e,t[1]=n[1]*e);return t},n.dot=function(t,n){return t[0]*n[0]+t[1]*n[1]},n.cross=function(t,n,r){var a=n[0]*r[1]-n[1]*r[0];return t[0]=t[1]=0,t[2]=a,t},n.lerp=function(t,n,r,a){var e=n[0],u=n[1];return t[0]=e+a*(r[0]-e),t[1]=u+a*(r[1]-u),t},n.random=function(t,n){n=n||1;var r=2*a.RANDOM()*Math.PI;return t[0]=Math.cos(r)*n,t[1]=Math.sin(r)*n,t},n.transformMat2=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[2]*e,t[1]=r[1]*a+r[3]*e,t},n.transformMat2d=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[2]*e+r[4],t[1]=r[1]*a+r[3]*e+r[5],t},n.transformMat3=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[3]*e+r[6],t[1]=r[1]*a+r[4]*e+r[7],t},n.transformMat4=function(t,n,r){var a=n[0],e=n[1];return t[0]=r[0]*a+r[4]*e+r[12],t[1]=r[1]*a+r[5]*e+r[13],t},n.rotate=function(t,n,r,a){var e=n[0]-r[0],u=n[1]-r[1],o=Math.sin(a),i=Math.cos(a);return t[0]=e*i-u*o+r[0],t[1]=e*o+u*i+r[1],t},n.angle=function(t,n){var r=t[0],a=t[1],e=n[0],u=n[1],o=r*r+a*a;o>0&&(o=1/Math.sqrt(o));var i=e*e+u*u;i>0&&(i=1/Math.sqrt(i));var s=(r*e+a*u)*o*i;return s>1?0:s<-1?Math.PI:Math.acos(s)},n.str=function(t){return\"vec2(\"+t[0]+\", \"+t[1]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]},n.equals=function(t,n){var r=t[0],e=t[1],u=n[0],o=n[1];return Math.abs(r-u)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(u))&&Math.abs(e-o)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(o))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(){var t=new a.ARRAY_TYPE(2);return a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0),t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t}function o(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t}function i(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t}function s(t,n){var r=n[0]-t[0],a=n[1]-t[1];return Math.sqrt(r*r+a*a)}function c(t,n){var r=n[0]-t[0],a=n[1]-t[1];return r*r+a*a}function f(t){var n=t[0],r=t[1];return Math.sqrt(n*n+r*r)}function M(t){var n=t[0],r=t[1];return n*n+r*r}n.len=f,n.sub=u,n.mul=o,n.div=i,n.dist=s,n.sqrDist=c,n.sqrLen=M,n.forEach=function(){var t=e();return function(n,r,a,e,u,o){var i=void 0,s=void 0;for(r||(r=2),a||(a=0),s=e?Math.min(e*r+a,n.length):n.length,i=a;i<s;i+=r)t[0]=n[i],t[1]=n[i+1],u(t,t,o),n[i]=t[0],n[i+1]=t[1];return n}}()},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sqrLen=n.squaredLength=n.len=n.length=n.dot=n.mul=n.setReal=n.getReal=void 0,n.create=function(){var t=new a.ARRAY_TYPE(8);a.ARRAY_TYPE!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0);return t[3]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(8);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n},n.fromValues=function(t,n,r,e,u,o,i,s){var c=new a.ARRAY_TYPE(8);return c[0]=t,c[1]=n,c[2]=r,c[3]=e,c[4]=u,c[5]=o,c[6]=i,c[7]=s,c},n.fromRotationTranslationValues=function(t,n,r,e,u,o,i){var s=new a.ARRAY_TYPE(8);s[0]=t,s[1]=n,s[2]=r,s[3]=e;var c=.5*u,f=.5*o,M=.5*i;return s[4]=c*e+f*r-M*n,s[5]=f*e+M*t-c*r,s[6]=M*e+c*n-f*t,s[7]=-c*t-f*n-M*r,s},n.fromRotationTranslation=i,n.fromTranslation=function(t,n){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*n[0],t[5]=.5*n[1],t[6]=.5*n[2],t[7]=0,t},n.fromRotation=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},n.fromMat4=function(t,n){var r=e.create();u.getRotation(r,n);var o=new a.ARRAY_TYPE(3);return u.getTranslation(o,n),i(t,r,o),t},n.copy=s,n.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},n.set=function(t,n,r,a,e,u,o,i,s){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t[6]=i,t[7]=s,t},n.getDual=function(t,n){return t[0]=n[4],t[1]=n[5],t[2]=n[6],t[3]=n[7],t},n.setDual=function(t,n){return t[4]=n[0],t[5]=n[1],t[6]=n[2],t[7]=n[3],t},n.getTranslation=function(t,n){var r=n[4],a=n[5],e=n[6],u=n[7],o=-n[0],i=-n[1],s=-n[2],c=n[3];return t[0]=2*(r*c+u*o+a*s-e*i),t[1]=2*(a*c+u*i+e*o-r*s),t[2]=2*(e*c+u*s+r*i-a*o),t},n.translate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=.5*r[0],s=.5*r[1],c=.5*r[2],f=n[4],M=n[5],h=n[6],l=n[7];return t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=o*i+e*c-u*s+f,t[5]=o*s+u*i-a*c+M,t[6]=o*c+a*s-e*i+h,t[7]=-a*i-e*s-u*c+l,t},n.rotateX=function(t,n,r){var a=-n[0],u=-n[1],o=-n[2],i=n[3],s=n[4],c=n[5],f=n[6],M=n[7],h=s*i+M*a+c*o-f*u,l=c*i+M*u+f*a-s*o,v=f*i+M*o+s*u-c*a,d=M*i-s*a-c*u-f*o;return e.rotateX(t,n,r),a=t[0],u=t[1],o=t[2],i=t[3],t[4]=h*i+d*a+l*o-v*u,t[5]=l*i+d*u+v*a-h*o,t[6]=v*i+d*o+h*u-l*a,t[7]=d*i-h*a-l*u-v*o,t},n.rotateY=function(t,n,r){var a=-n[0],u=-n[1],o=-n[2],i=n[3],s=n[4],c=n[5],f=n[6],M=n[7],h=s*i+M*a+c*o-f*u,l=c*i+M*u+f*a-s*o,v=f*i+M*o+s*u-c*a,d=M*i-s*a-c*u-f*o;return e.rotateY(t,n,r),a=t[0],u=t[1],o=t[2],i=t[3],t[4]=h*i+d*a+l*o-v*u,t[5]=l*i+d*u+v*a-h*o,t[6]=v*i+d*o+h*u-l*a,t[7]=d*i-h*a-l*u-v*o,t},n.rotateZ=function(t,n,r){var a=-n[0],u=-n[1],o=-n[2],i=n[3],s=n[4],c=n[5],f=n[6],M=n[7],h=s*i+M*a+c*o-f*u,l=c*i+M*u+f*a-s*o,v=f*i+M*o+s*u-c*a,d=M*i-s*a-c*u-f*o;return e.rotateZ(t,n,r),a=t[0],u=t[1],o=t[2],i=t[3],t[4]=h*i+d*a+l*o-v*u,t[5]=l*i+d*u+v*a-h*o,t[6]=v*i+d*o+h*u-l*a,t[7]=d*i-h*a-l*u-v*o,t},n.rotateByQuatAppend=function(t,n,r){var a=r[0],e=r[1],u=r[2],o=r[3],i=n[0],s=n[1],c=n[2],f=n[3];return t[0]=i*o+f*a+s*u-c*e,t[1]=s*o+f*e+c*a-i*u,t[2]=c*o+f*u+i*e-s*a,t[3]=f*o-i*a-s*e-c*u,i=n[4],s=n[5],c=n[6],f=n[7],t[4]=i*o+f*a+s*u-c*e,t[5]=s*o+f*e+c*a-i*u,t[6]=c*o+f*u+i*e-s*a,t[7]=f*o-i*a-s*e-c*u,t},n.rotateByQuatPrepend=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1],c=r[2],f=r[3];return t[0]=a*f+o*i+e*c-u*s,t[1]=e*f+o*s+u*i-a*c,t[2]=u*f+o*c+a*s-e*i,t[3]=o*f-a*i-e*s-u*c,i=r[4],s=r[5],c=r[6],f=r[7],t[4]=a*f+o*i+e*c-u*s,t[5]=e*f+o*s+u*i-a*c,t[6]=u*f+o*c+a*s-e*i,t[7]=o*f-a*i-e*s-u*c,t},n.rotateAroundAxis=function(t,n,r,e){if(Math.abs(e)<a.EPSILON)return s(t,n);var u=Math.sqrt(r[0]*r[0]+r[1]*r[1]+r[2]*r[2]);e*=.5;var o=Math.sin(e),i=o*r[0]/u,c=o*r[1]/u,f=o*r[2]/u,M=Math.cos(e),h=n[0],l=n[1],v=n[2],d=n[3];t[0]=h*M+d*i+l*f-v*c,t[1]=l*M+d*c+v*i-h*f,t[2]=v*M+d*f+h*c-l*i,t[3]=d*M-h*i-l*c-v*f;var b=n[4],m=n[5],p=n[6],P=n[7];return t[4]=b*M+P*i+m*f-p*c,t[5]=m*M+P*c+p*i-b*f,t[6]=p*M+P*f+b*c-m*i,t[7]=P*M-b*i-m*c-p*f,t},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t[6]=n[6]+r[6],t[7]=n[7]+r[7],t},n.multiply=c,n.scale=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=n[7]*r,t},n.lerp=function(t,n,r,a){var e=1-a;f(n,r)<0&&(a=-a);return t[0]=n[0]*e+r[0]*a,t[1]=n[1]*e+r[1]*a,t[2]=n[2]*e+r[2]*a,t[3]=n[3]*e+r[3]*a,t[4]=n[4]*e+r[4]*a,t[5]=n[5]*e+r[5]*a,t[6]=n[6]*e+r[6]*a,t[7]=n[7]*e+r[7]*a,t},n.invert=function(t,n){var r=h(n);return t[0]=-n[0]/r,t[1]=-n[1]/r,t[2]=-n[2]/r,t[3]=n[3]/r,t[4]=-n[4]/r,t[5]=-n[5]/r,t[6]=-n[6]/r,t[7]=n[7]/r,t},n.conjugate=function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t[4]=-n[4],t[5]=-n[5],t[6]=-n[6],t[7]=n[7],t},n.normalize=function(t,n){var r=h(n);if(r>0){r=Math.sqrt(r);var a=n[0]/r,e=n[1]/r,u=n[2]/r,o=n[3]/r,i=n[4],s=n[5],c=n[6],f=n[7],M=a*i+e*s+u*c+o*f;t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=(i-a*M)/r,t[5]=(s-e*M)/r,t[6]=(c-u*M)/r,t[7]=(f-o*M)/r}return t},n.str=function(t){return\"quat2(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\")\"},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=t[6],f=t[7],M=n[0],h=n[1],l=n[2],v=n[3],d=n[4],b=n[5],m=n[6],p=n[7];return Math.abs(r-M)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(M))&&Math.abs(e-h)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(u-l)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(o-v)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(i-d)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(d))&&Math.abs(s-b)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(b))&&Math.abs(c-m)<=a.EPSILON*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(f-p)<=a.EPSILON*Math.max(1,Math.abs(f),Math.abs(p))};var a=o(r(0)),e=o(r(3)),u=o(r(4));function o(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}function i(t,n,r){var a=.5*r[0],e=.5*r[1],u=.5*r[2],o=n[0],i=n[1],s=n[2],c=n[3];return t[0]=o,t[1]=i,t[2]=s,t[3]=c,t[4]=a*c+e*s-u*i,t[5]=e*c+u*o-a*s,t[6]=u*c+a*i-e*o,t[7]=-a*o-e*i-u*s,t}function s(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t}n.getReal=e.copy;n.setReal=e.copy;function c(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[4],s=r[5],c=r[6],f=r[7],M=n[4],h=n[5],l=n[6],v=n[7],d=r[0],b=r[1],m=r[2],p=r[3];return t[0]=a*p+o*d+e*m-u*b,t[1]=e*p+o*b+u*d-a*m,t[2]=u*p+o*m+a*b-e*d,t[3]=o*p-a*d-e*b-u*m,t[4]=a*f+o*i+e*c-u*s+M*p+v*d+h*m-l*b,t[5]=e*f+o*s+u*i-a*c+h*p+v*b+l*d-M*m,t[6]=u*f+o*c+a*s-e*i+l*p+v*m+M*b-h*d,t[7]=o*f-a*i-e*s-u*c+v*p-M*d-h*b-l*m,t}n.mul=c;var f=n.dot=e.dot;var M=n.length=e.length,h=(n.len=M,n.squaredLength=e.squaredLength);n.sqrLen=h},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(6);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0);return t[0]=1,t[3]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(6);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t},n.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},n.fromValues=function(t,n,r,e,u,o){var i=new a.ARRAY_TYPE(6);return i[0]=t,i[1]=n,i[2]=r,i[3]=e,i[4]=u,i[5]=o,i},n.set=function(t,n,r,a,e,u,o){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t[4]=u,t[5]=o,t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=n[4],i=n[5],s=r*u-a*e;if(!s)return null;return s=1/s,t[0]=u*s,t[1]=-a*s,t[2]=-e*s,t[3]=r*s,t[4]=(e*i-u*o)*s,t[5]=(a*o-r*i)*s,t},n.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},n.multiply=e,n.rotate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=Math.sin(r),f=Math.cos(r);return t[0]=a*f+u*c,t[1]=e*f+o*c,t[2]=a*-c+u*f,t[3]=e*-c+o*f,t[4]=i,t[5]=s,t},n.scale=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=r[0],f=r[1];return t[0]=a*c,t[1]=e*c,t[2]=u*f,t[3]=o*f,t[4]=i,t[5]=s,t},n.translate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=r[0],f=r[1];return t[0]=a,t[1]=e,t[2]=u,t[3]=o,t[4]=a*c+u*f+i,t[5]=e*c+o*f+s,t},n.fromRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=-r,t[3]=a,t[4]=0,t[5]=0,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t[4]=0,t[5]=0,t},n.fromTranslation=function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=n[0],t[5]=n[1],t},n.str=function(t){return\"mat2d(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t[4]=n[4]+r[4],t[5]=n[5]+r[5],t},n.subtract=u,n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*r,t[5]=n[5]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t[4]=n[4]+r[4]*a,t[5]=n[5]+r[5]*a,t},n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=t[4],s=t[5],c=n[0],f=n[1],M=n[2],h=n[3],l=n[4],v=n[5];return Math.abs(r-c)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(c))&&Math.abs(e-f)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(f))&&Math.abs(u-M)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(M))&&Math.abs(o-h)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(h))&&Math.abs(i-l)<=a.EPSILON*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(s-v)<=a.EPSILON*Math.max(1,Math.abs(s),Math.abs(v))};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=n[4],s=n[5],c=r[0],f=r[1],M=r[2],h=r[3],l=r[4],v=r[5];return t[0]=a*c+u*f,t[1]=e*c+o*f,t[2]=a*M+u*h,t[3]=e*M+o*h,t[4]=a*l+u*v+i,t[5]=e*l+o*v+s,t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t[4]=n[4]-r[4],t[5]=n[5]-r[5],t}n.mul=e,n.sub=u},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.sub=n.mul=void 0,n.create=function(){var t=new a.ARRAY_TYPE(4);a.ARRAY_TYPE!=Float32Array&&(t[1]=0,t[2]=0);return t[0]=1,t[3]=1,t},n.clone=function(t){var n=new a.ARRAY_TYPE(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},n.copy=function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},n.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},n.fromValues=function(t,n,r,e){var u=new a.ARRAY_TYPE(4);return u[0]=t,u[1]=n,u[2]=r,u[3]=e,u},n.set=function(t,n,r,a,e){return t[0]=n,t[1]=r,t[2]=a,t[3]=e,t},n.transpose=function(t,n){if(t===n){var r=n[1];t[1]=n[2],t[2]=r}else t[0]=n[0],t[1]=n[2],t[2]=n[1],t[3]=n[3];return t},n.invert=function(t,n){var r=n[0],a=n[1],e=n[2],u=n[3],o=r*u-e*a;if(!o)return null;return o=1/o,t[0]=u*o,t[1]=-a*o,t[2]=-e*o,t[3]=r*o,t},n.adjoint=function(t,n){var r=n[0];return t[0]=n[3],t[1]=-n[1],t[2]=-n[2],t[3]=r,t},n.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},n.multiply=e,n.rotate=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=Math.sin(r),s=Math.cos(r);return t[0]=a*s+u*i,t[1]=e*s+o*i,t[2]=a*-i+u*s,t[3]=e*-i+o*s,t},n.scale=function(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1];return t[0]=a*i,t[1]=e*i,t[2]=u*s,t[3]=o*s,t},n.fromRotation=function(t,n){var r=Math.sin(n),a=Math.cos(n);return t[0]=a,t[1]=r,t[2]=-r,t[3]=a,t},n.fromScaling=function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t},n.str=function(t){return\"mat2(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},n.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},n.LDU=function(t,n,r,a){return t[2]=a[2]/a[0],r[0]=a[0],r[1]=a[1],r[3]=a[3]-t[2]*r[1],[t,n,r]},n.add=function(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t[2]=n[2]+r[2],t[3]=n[3]+r[3],t},n.subtract=u,n.exactEquals=function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},n.equals=function(t,n){var r=t[0],e=t[1],u=t[2],o=t[3],i=n[0],s=n[1],c=n[2],f=n[3];return Math.abs(r-i)<=a.EPSILON*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(e-s)<=a.EPSILON*Math.max(1,Math.abs(e),Math.abs(s))&&Math.abs(u-c)<=a.EPSILON*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(o-f)<=a.EPSILON*Math.max(1,Math.abs(o),Math.abs(f))},n.multiplyScalar=function(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t},n.multiplyScalarAndAdd=function(t,n,r,a){return t[0]=n[0]+r[0]*a,t[1]=n[1]+r[1]*a,t[2]=n[2]+r[2]*a,t[3]=n[3]+r[3]*a,t};var a=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}(r(0));function e(t,n,r){var a=n[0],e=n[1],u=n[2],o=n[3],i=r[0],s=r[1],c=r[2],f=r[3];return t[0]=a*i+u*s,t[1]=e*i+o*s,t[2]=a*c+u*f,t[3]=e*c+o*f,t}function u(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t[2]=n[2]-r[2],t[3]=n[3]-r[3],t}n.mul=e,n.sub=u},function(t,n,r){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0}),n.vec4=n.vec3=n.vec2=n.quat2=n.quat=n.mat4=n.mat3=n.mat2d=n.mat2=n.glMatrix=void 0;var a=l(r(0)),e=l(r(9)),u=l(r(8)),o=l(r(5)),i=l(r(4)),s=l(r(3)),c=l(r(7)),f=l(r(6)),M=l(r(2)),h=l(r(1));function l(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n.default=t,n}n.glMatrix=a,n.mat2=e,n.mat2d=u,n.mat3=o,n.mat4=i,n.quat=s,n.quat2=c,n.vec2=f,n.vec3=M,n.vec4=h}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-matrix/dist/gl-matrix.js\n// module id = 52\n// module chunks = 0 1 2","'use strict'\n\nvar createUniformWrapper   = require('./lib/create-uniforms')\nvar createAttributeWrapper = require('./lib/create-attributes')\nvar makeReflect            = require('./lib/reflect')\nvar shaderCache            = require('./lib/shader-cache')\nvar runtime                = require('./lib/runtime-reflect')\nvar GLError                = require(\"./lib/GLError\")\n\n//Shader object\nfunction Shader(gl) {\n  this.gl         = gl\n  this.gl.lastAttribCount = 0  // fixme where else should we store info, safe but not nice on the gl object\n\n  //Default initialize these to null\n  this._vref      =\n  this._fref      =\n  this._relink    =\n  this.vertShader =\n  this.fragShader =\n  this.program    =\n  this.attributes =\n  this.uniforms   =\n  this.types      = null\n}\n\nvar proto = Shader.prototype\n\nproto.bind = function() {\n  if(!this.program) {\n    this._relink()\n  }\n\n  // ensuring that we have the right number of enabled vertex attributes\n  var i\n  var newAttribCount = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES) // more robust approach\n  //var newAttribCount = Object.keys(this.attributes).length // avoids the probably immaterial introspection slowdown\n  var oldAttribCount = this.gl.lastAttribCount\n  if(newAttribCount > oldAttribCount) {\n    for(i = oldAttribCount; i < newAttribCount; i++) {\n      this.gl.enableVertexAttribArray(i)\n    }\n  } else if(oldAttribCount > newAttribCount) {\n    for(i = newAttribCount; i < oldAttribCount; i++) {\n      this.gl.disableVertexAttribArray(i)\n    }\n  }\n\n  this.gl.lastAttribCount = newAttribCount\n\n  this.gl.useProgram(this.program)\n}\n\nproto.dispose = function() {\n\n  // disabling vertex attributes so new shader starts with zero\n  // and it's also useful if all shaders are disposed but the\n  // gl context is reused for subsequent replotting\n  var oldAttribCount = this.gl.lastAttribCount\n  for (var i = 0; i < oldAttribCount; i++) {\n    this.gl.disableVertexAttribArray(i)\n  }\n  this.gl.lastAttribCount = 0\n\n  if(this._fref) {\n    this._fref.dispose()\n  }\n  if(this._vref) {\n    this._vref.dispose()\n  }\n  this.attributes =\n  this.types      =\n  this.vertShader =\n  this.fragShader =\n  this.program    =\n  this._relink    =\n  this._fref      =\n  this._vref      = null\n}\n\nfunction compareAttributes(a, b) {\n  if(a.name < b.name) {\n    return -1\n  }\n  return 1\n}\n\n//Update export hook for glslify-live\nproto.update = function(\n    vertSource\n  , fragSource\n  , uniforms\n  , attributes) {\n\n  //If only one object passed, assume glslify style output\n  if(!fragSource || arguments.length === 1) {\n    var obj = vertSource\n    vertSource = obj.vertex\n    fragSource = obj.fragment\n    uniforms   = obj.uniforms\n    attributes = obj.attributes\n  }\n\n  var wrapper = this\n  var gl      = wrapper.gl\n\n  //Compile vertex and fragment shaders\n  var pvref = wrapper._vref\n  wrapper._vref = shaderCache.shader(gl, gl.VERTEX_SHADER, vertSource)\n  if(pvref) {\n    pvref.dispose()\n  }\n  wrapper.vertShader = wrapper._vref.shader\n  var pfref = this._fref\n  wrapper._fref = shaderCache.shader(gl, gl.FRAGMENT_SHADER, fragSource)\n  if(pfref) {\n    pfref.dispose()\n  }\n  wrapper.fragShader = wrapper._fref.shader\n\n  //If uniforms/attributes is not specified, use RT reflection\n  if(!uniforms || !attributes) {\n\n    //Create initial test program\n    var testProgram = gl.createProgram()\n    gl.attachShader(testProgram, wrapper.fragShader)\n    gl.attachShader(testProgram, wrapper.vertShader)\n    gl.linkProgram(testProgram)\n    if(!gl.getProgramParameter(testProgram, gl.LINK_STATUS)) {\n      var errLog = gl.getProgramInfoLog(testProgram)\n      throw new GLError(errLog, 'Error linking program:' + errLog)\n    }\n\n    //Load data from runtime\n    uniforms   = uniforms   || runtime.uniforms(gl, testProgram)\n    attributes = attributes || runtime.attributes(gl, testProgram)\n\n    //Release test program\n    gl.deleteProgram(testProgram)\n  }\n\n  //Sort attributes lexicographically\n  // overrides undefined WebGL behavior for attribute locations\n  attributes = attributes.slice()\n  attributes.sort(compareAttributes)\n\n  //Convert attribute types, read out locations\n  var attributeUnpacked  = []\n  var attributeNames     = []\n  var attributeLocations = []\n  var i\n  for(i=0; i<attributes.length; ++i) {\n    var attr = attributes[i]\n    if(attr.type.indexOf('mat') >= 0) {\n      var size = attr.type.charAt(attr.type.length-1)|0\n      var locVector = new Array(size)\n      for(var j=0; j<size; ++j) {\n        locVector[j] = attributeLocations.length\n        attributeNames.push(attr.name + '[' + j + ']')\n        if(typeof attr.location === 'number') {\n          attributeLocations.push(attr.location + j)\n        } else if(Array.isArray(attr.location) &&\n                  attr.location.length === size &&\n                  typeof attr.location[j] === 'number') {\n          attributeLocations.push(attr.location[j]|0)\n        } else {\n          attributeLocations.push(-1)\n        }\n      }\n      attributeUnpacked.push({\n        name: attr.name,\n        type: attr.type,\n        locations: locVector\n      })\n    } else {\n      attributeUnpacked.push({\n        name: attr.name,\n        type: attr.type,\n        locations: [ attributeLocations.length ]\n      })\n      attributeNames.push(attr.name)\n      if(typeof attr.location === 'number') {\n        attributeLocations.push(attr.location|0)\n      } else {\n        attributeLocations.push(-1)\n      }\n    }\n  }\n\n  //For all unspecified attributes, assign them lexicographically min attribute\n  var curLocation = 0\n  for(i=0; i<attributeLocations.length; ++i) {\n    if(attributeLocations[i] < 0) {\n      while(attributeLocations.indexOf(curLocation) >= 0) {\n        curLocation += 1\n      }\n      attributeLocations[i] = curLocation\n    }\n  }\n\n  //Rebuild program and recompute all uniform locations\n  var uniformLocations = new Array(uniforms.length)\n  function relink() {\n    wrapper.program = shaderCache.program(\n        gl\n      , wrapper._vref\n      , wrapper._fref\n      , attributeNames\n      , attributeLocations)\n\n    for(var i=0; i<uniforms.length; ++i) {\n      uniformLocations[i] = gl.getUniformLocation(\n          wrapper.program\n        , uniforms[i].name)\n    }\n  }\n\n  //Perform initial linking, reuse program used for reflection\n  relink()\n\n  //Save relinking procedure, defer until runtime\n  wrapper._relink = relink\n\n  //Generate type info\n  wrapper.types = {\n    uniforms:   makeReflect(uniforms),\n    attributes: makeReflect(attributes)\n  }\n\n  //Generate attribute wrappers\n  wrapper.attributes = createAttributeWrapper(\n      gl\n    , wrapper\n    , attributeUnpacked\n    , attributeLocations)\n\n  //Generate uniform wrappers\n  Object.defineProperty(wrapper, 'uniforms', createUniformWrapper(\n      gl\n    , wrapper\n    , uniforms\n    , uniformLocations))\n}\n\n//Compiles and links a shader program with the given attribute and vertex list\nfunction createShader(\n    gl\n  , vertSource\n  , fragSource\n  , uniforms\n  , attributes) {\n\n  var shader = new Shader(gl)\n\n  shader.update(\n      vertSource\n    , fragSource\n    , uniforms\n    , attributes)\n\n  return shader\n}\n\nmodule.exports = createShader\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/index.js\n// module id = 55\n// module chunks = 0 1 2","'use strict'\n\nvar coallesceUniforms = require('./reflect')\nvar GLError = require(\"./GLError\")\n\nmodule.exports = createUniformWrapper\n\n//Binds a function and returns a value\nfunction identity(x) {\n  var c = new Function('y', 'return function(){return y}')\n  return c(x)\n}\n\nfunction makeVector(length, fill) {\n  var result = new Array(length)\n  for(var i=0; i<length; ++i) {\n    result[i] = fill\n  }\n  return result\n}\n\n//Create shims for uniforms\nfunction createUniformWrapper(gl, wrapper, uniforms, locations) {\n\n  function makeGetter(index) {\n    var proc = new Function(\n        'gl'\n      , 'wrapper'\n      , 'locations'\n      , 'return function(){return gl.getUniform(wrapper.program,locations[' + index + '])}')\n    return proc(gl, wrapper, locations)\n  }\n\n  function makePropSetter(path, index, type) {\n    switch(type) {\n      case 'bool':\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 'gl.uniform1i(locations[' + index + '],obj' + path + ')'\n      case 'float':\n        return 'gl.uniform1f(locations[' + index + '],obj' + path + ')'\n      default:\n        var vidx = type.indexOf('vec')\n        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type')\n          }\n          switch(type.charAt(0)) {\n            case 'b':\n            case 'i':\n              return 'gl.uniform' + d + 'iv(locations[' + index + '],obj' + path + ')'\n            case 'v':\n              return 'gl.uniform' + d + 'fv(locations[' + index + '],obj' + path + ')'\n            default:\n              throw new GLError('', 'Unrecognized data type for vector ' + name + ': ' + type)\n          }\n        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n          }\n          return 'gl.uniformMatrix' + d + 'fv(locations[' + index + '],false,obj' + path + ')'\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n\n  function enumerateIndices(prefix, type) {\n    if(typeof type !== 'object') {\n      return [ [prefix, type] ]\n    }\n    var indices = []\n    for(var id in type) {\n      var prop = type[id]\n      var tprefix = prefix\n      if(parseInt(id) + '' === id) {\n        tprefix += '[' + id + ']'\n      } else {\n        tprefix += '.' + id\n      }\n      if(typeof prop === 'object') {\n        indices.push.apply(indices, enumerateIndices(tprefix, prop))\n      } else {\n        indices.push([tprefix, prop])\n      }\n    }\n    return indices\n  }\n\n  function makeSetter(type) {\n    var code = [ 'return function updateProperty(obj){' ]\n    var indices = enumerateIndices('', type)\n    for(var i=0; i<indices.length; ++i) {\n      var item = indices[i]\n      var path = item[0]\n      var idx  = item[1]\n      if(locations[idx]) {\n        code.push(makePropSetter(path, idx, uniforms[idx].type))\n      }\n    }\n    code.push('return obj}')\n    var proc = new Function('gl', 'locations', code.join('\\n'))\n    return proc(gl, locations)\n  }\n\n  function defaultValue(type) {\n    switch(type) {\n      case 'bool':\n        return false\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 0\n      case 'float':\n        return 0.0\n      default:\n        var vidx = type.indexOf('vec')\n        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type')\n          }\n          if(type.charAt(0) === 'b') {\n            return makeVector(d, false)\n          }\n          return makeVector(d, 0)\n        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n          }\n          return makeVector(d*d, 0)\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n\n  function storeProperty(obj, prop, type) {\n    if(typeof type === 'object') {\n      var child = processObject(type)\n      Object.defineProperty(obj, prop, {\n        get: identity(child),\n        set: makeSetter(type),\n        enumerable: true,\n        configurable: false\n      })\n    } else {\n      if(locations[type]) {\n        Object.defineProperty(obj, prop, {\n          get: makeGetter(type),\n          set: makeSetter(type),\n          enumerable: true,\n          configurable: false\n        })\n      } else {\n        obj[prop] = defaultValue(uniforms[type].type)\n      }\n    }\n  }\n\n  function processObject(obj) {\n    var result\n    if(Array.isArray(obj)) {\n      result = new Array(obj.length)\n      for(var i=0; i<obj.length; ++i) {\n        storeProperty(result, i, obj[i])\n      }\n    } else {\n      result = {}\n      for(var id in obj) {\n        storeProperty(result, id, obj[id])\n      }\n    }\n    return result\n  }\n\n  //Return data\n  var coallesced = coallesceUniforms(uniforms, true)\n  return {\n    get: identity(processObject(coallesced)),\n    set: makeSetter(coallesced),\n    enumerable: true,\n    configurable: true\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/lib/create-uniforms.js\n// module id = 56\n// module chunks = 0 1 2","'use strict'\n\nmodule.exports = makeReflectTypes\n\n//Construct type info for reflection.\n//\n// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n//\n// The leaves of the resulting object are either indices or type strings representing primitive glslify types\nfunction makeReflectTypes(uniforms, useIndex) {\n  var obj = {}\n  for(var i=0; i<uniforms.length; ++i) {\n    var n = uniforms[i].name\n    var parts = n.split(\".\")\n    var o = obj\n    for(var j=0; j<parts.length; ++j) {\n      var x = parts[j].split(\"[\")\n      if(x.length > 1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = []\n        }\n        o = o[x[0]]\n        for(var k=1; k<x.length; ++k) {\n          var y = parseInt(x[k])\n          if(k<x.length-1 || j<parts.length-1) {\n            if(!(y in o)) {\n              if(k < x.length-1) {\n                o[y] = []\n              } else {\n                o[y] = {}\n              }\n            }\n            o = o[y]\n          } else {\n            if(useIndex) {\n              o[y] = i\n            } else {\n              o[y] = uniforms[i].type\n            }\n          }\n        }\n      } else if(j < parts.length-1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = {}\n        }\n        o = o[x[0]]\n      } else {\n        if(useIndex) {\n          o[x[0]] = i\n        } else {\n          o[x[0]] = uniforms[i].type\n        }\n      }\n    }\n  }\n  return obj\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/lib/reflect.js\n// module id = 57\n// module chunks = 0 1 2","function GLError (rawError, shortMessage, longMessage) {\n    this.shortMessage = shortMessage || ''\n    this.longMessage = longMessage || ''\n    this.rawError = rawError || ''\n    this.message =\n      'gl-shader: ' + (shortMessage || rawError || '') +\n      (longMessage ? '\\n'+longMessage : '')\n    this.stack = (new Error()).stack\n}\nGLError.prototype = new Error\nGLError.prototype.name = 'GLError'\nGLError.prototype.constructor = GLError\nmodule.exports = GLError\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/lib/GLError.js\n// module id = 58\n// module chunks = 0 1 2","'use strict'\n\nmodule.exports = createAttributeWrapper\n\nvar GLError = require(\"./GLError\")\n\nfunction ShaderAttribute(\n    gl\n  , wrapper\n  , index\n  , locations\n  , dimension\n  , constFunc) {\n  this._gl        = gl\n  this._wrapper   = wrapper\n  this._index     = index\n  this._locations = locations\n  this._dimension = dimension\n  this._constFunc = constFunc\n}\n\nvar proto = ShaderAttribute.prototype\n\nproto.pointer = function setAttribPointer(\n    type\n  , normalized\n  , stride\n  , offset) {\n\n  var self      = this\n  var gl        = self._gl\n  var location  = self._locations[self._index]\n\n  gl.vertexAttribPointer(\n      location\n    , self._dimension\n    , type || gl.FLOAT\n    , !!normalized\n    , stride || 0\n    , offset || 0)\n  gl.enableVertexAttribArray(location)\n}\n\nproto.set = function(x0, x1, x2, x3) {\n  return this._constFunc(this._locations[this._index], x0, x1, x2, x3)\n}\n\nObject.defineProperty(proto, 'location', {\n  get: function() {\n    return this._locations[this._index]\n  }\n  , set: function(v) {\n    if(v !== this._locations[this._index]) {\n      this._locations[this._index] = v|0\n      this._wrapper.program = null\n    }\n    return v|0\n  }\n})\n\n//Adds a vector attribute to obj\nfunction addVectorAttribute(\n    gl\n  , wrapper\n  , index\n  , locations\n  , dimension\n  , obj\n  , name) {\n\n  //Construct constant function\n  var constFuncArgs = [ 'gl', 'v' ]\n  var varNames = []\n  for(var i=0; i<dimension; ++i) {\n    constFuncArgs.push('x'+i)\n    varNames.push('x'+i)\n  }\n  constFuncArgs.push(\n    'if(x0.length===void 0){return gl.vertexAttrib' +\n    dimension + 'f(v,' +\n    varNames.join() +\n    ')}else{return gl.vertexAttrib' +\n    dimension +\n    'fv(v,x0)}')\n  var constFunc = Function.apply(null, constFuncArgs)\n\n  //Create attribute wrapper\n  var attr = new ShaderAttribute(\n      gl\n    , wrapper\n    , index\n    , locations\n    , dimension\n    , constFunc)\n\n  //Create accessor\n  Object.defineProperty(obj, name, {\n    set: function(x) {\n      gl.disableVertexAttribArray(locations[index])\n      constFunc(gl, locations[index], x)\n      return x\n    }\n    , get: function() {\n      return attr\n    }\n    , enumerable: true\n  })\n}\n\nfunction addMatrixAttribute(\n    gl\n  , wrapper\n  , index\n  , locations\n  , dimension\n  , obj\n  , name) {\n\n  var parts = new Array(dimension)\n  var attrs = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    addVectorAttribute(\n        gl\n      , wrapper\n      , index[i]\n      , locations\n      , dimension\n      , parts\n      , i)\n    attrs[i] = parts[i]\n  }\n\n  Object.defineProperty(parts, 'location', {\n    set: function(v) {\n      if(Array.isArray(v)) {\n        for(var i=0; i<dimension; ++i) {\n          attrs[i].location = v[i]\n        }\n      } else {\n        for(var i=0; i<dimension; ++i) {\n          attrs[i].location = v + i\n        }\n      }\n      return v\n    }\n    , get: function() {\n      var result = new Array(dimension)\n      for(var i=0; i<dimension; ++i) {\n        result[i] = locations[index[i]]\n      }\n      return result\n    }\n    , enumerable: true\n  })\n\n  parts.pointer = function(type, normalized, stride, offset) {\n    type       = type || gl.FLOAT\n    normalized = !!normalized\n    stride     = stride || (dimension * dimension)\n    offset     = offset || 0\n    for(var i=0; i<dimension; ++i) {\n      var location = locations[index[i]]\n      gl.vertexAttribPointer(\n            location\n          , dimension\n          , type\n          , normalized\n          , stride\n          , offset + i * dimension)\n      gl.enableVertexAttribArray(location)\n    }\n  }\n\n  var scratch = new Array(dimension)\n  var vertexAttrib = gl['vertexAttrib' + dimension + 'fv']\n\n  Object.defineProperty(obj, name, {\n    set: function(x) {\n      for(var i=0; i<dimension; ++i) {\n        var loc = locations[index[i]]\n        gl.disableVertexAttribArray(loc)\n        if(Array.isArray(x[0])) {\n          vertexAttrib.call(gl, loc, x[i])\n        } else {\n          for(var j=0; j<dimension; ++j) {\n            scratch[j] = x[dimension*i + j]\n          }\n          vertexAttrib.call(gl, loc, scratch)\n        }\n      }\n      return x\n    }\n    , get: function() {\n      return parts\n    }\n    , enumerable: true\n  })\n}\n\n//Create shims for attributes\nfunction createAttributeWrapper(\n    gl\n  , wrapper\n  , attributes\n  , locations) {\n\n  var obj = {}\n  for(var i=0, n=attributes.length; i<n; ++i) {\n\n    var a = attributes[i]\n    var name = a.name\n    var type = a.type\n    var locs = a.locations\n\n    switch(type) {\n      case 'bool':\n      case 'int':\n      case 'float':\n        addVectorAttribute(\n            gl\n          , wrapper\n          , locs[0]\n          , locations\n          , 1\n          , obj\n          , name)\n      break\n\n      default:\n        if(type.indexOf('vec') >= 0) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type for attribute ' + name + ': ' + type)\n          }\n          addVectorAttribute(\n              gl\n            , wrapper\n            , locs[0]\n            , locations\n            , d\n            , obj\n            , name)\n        } else if(type.indexOf('mat') >= 0) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type for attribute ' + name + ': ' + type)\n          }\n          addMatrixAttribute(\n              gl\n            , wrapper\n            , locs\n            , locations\n            , d\n            , obj\n            , name)\n        } else {\n          throw new GLError('', 'Unknown data type for attribute ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n  return obj\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/lib/create-attributes.js\n// module id = 59\n// module chunks = 0 1 2","'use strict'\n\nexports.shader   = getShaderReference\nexports.program  = createProgram\n\nvar GLError = require(\"./GLError\")\nvar formatCompilerError = require('gl-format-compiler-error');\n\nvar weakMap = typeof WeakMap === 'undefined' ? require('weakmap-shim') : WeakMap\nvar CACHE = new weakMap()\n\nvar SHADER_COUNTER = 0\n\nfunction ShaderReference(id, src, type, shader, programs, count, cache) {\n  this.id       = id\n  this.src      = src\n  this.type     = type\n  this.shader   = shader\n  this.count    = count\n  this.programs = []\n  this.cache    = cache\n}\n\nShaderReference.prototype.dispose = function() {\n  if(--this.count === 0) {\n    var cache    = this.cache\n    var gl       = cache.gl\n\n    //Remove program references\n    var programs = this.programs\n    for(var i=0, n=programs.length; i<n; ++i) {\n      var p = cache.programs[programs[i]]\n      if(p) {\n        delete cache.programs[i]\n        gl.deleteProgram(p)\n      }\n    }\n\n    //Remove shader reference\n    gl.deleteShader(this.shader)\n    delete cache.shaders[(this.type === gl.FRAGMENT_SHADER)|0][this.src]\n  }\n}\n\nfunction ContextCache(gl) {\n  this.gl       = gl\n  this.shaders  = [{}, {}]\n  this.programs = {}\n}\n\nvar proto = ContextCache.prototype\n\nfunction compileShader(gl, type, src) {\n  var shader = gl.createShader(type)\n  gl.shaderSource(shader, src)\n  gl.compileShader(shader)\n  if(!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    var errLog = gl.getShaderInfoLog(shader)\n    try {\n        var fmt = formatCompilerError(errLog, src, type);\n    } catch (e){\n        console.warn('Failed to format compiler error: ' + e);\n        throw new GLError(errLog, 'Error compiling shader:\\n' + errLog)\n    }\n    throw new GLError(errLog, fmt.short, fmt.long)\n  }\n  return shader\n}\n\nproto.getShaderReference = function(type, src) {\n  var gl      = this.gl\n  var shaders = this.shaders[(type === gl.FRAGMENT_SHADER)|0]\n  var shader  = shaders[src]\n  if(!shader || !gl.isShader(shader.shader)) {\n    var shaderObj = compileShader(gl, type, src)\n    shader = shaders[src] = new ShaderReference(\n      SHADER_COUNTER++,\n      src,\n      type,\n      shaderObj,\n      [],\n      1,\n      this)\n  } else {\n    shader.count += 1\n  }\n  return shader\n}\n\nfunction linkProgram(gl, vshader, fshader, attribs, locations) {\n  var program = gl.createProgram()\n  gl.attachShader(program, vshader)\n  gl.attachShader(program, fshader)\n  for(var i=0; i<attribs.length; ++i) {\n    gl.bindAttribLocation(program, locations[i], attribs[i])\n  }\n  gl.linkProgram(program)\n  if(!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    var errLog = gl.getProgramInfoLog(program)\n    throw new GLError(errLog, 'Error linking program: ' + errLog)\n  }\n  return program\n}\n\nproto.getProgram = function(vref, fref, attribs, locations) {\n  var token = [vref.id, fref.id, attribs.join(':'), locations.join(':')].join('@')\n  var prog  = this.programs[token]\n  if(!prog || !this.gl.isProgram(prog)) {\n    this.programs[token] = prog = linkProgram(\n      this.gl,\n      vref.shader,\n      fref.shader,\n      attribs,\n      locations)\n    vref.programs.push(token)\n    fref.programs.push(token)\n  }\n  return prog\n}\n\nfunction getCache(gl) {\n  var ctxCache = CACHE.get(gl)\n  if(!ctxCache) {\n    ctxCache = new ContextCache(gl)\n    CACHE.set(gl, ctxCache)\n  }\n  return ctxCache\n}\n\nfunction getShaderReference(gl, type, src) {\n  return getCache(gl).getShaderReference(type, src)\n}\n\nfunction createProgram(gl, vref, fref, attribs, locations) {\n  return getCache(gl).getProgram(vref, fref, attribs, locations)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/lib/shader-cache.js\n// module id = 60\n// module chunks = 0 1 2","\nvar sprintf = require('sprintf-js').sprintf;\nvar glConstants = require('gl-constants/lookup');\nvar shaderName = require('glsl-shader-name');\nvar addLineNumbers = require('add-line-numbers');\n\nmodule.exports = formatCompilerError;\n\nfunction formatCompilerError(errLog, src, type) {\n    \"use strict\";\n\n    var name = shaderName(src) || 'of unknown name (see npm glsl-shader-name)';\n\n    var typeName = 'unknown type';\n    if (type !== undefined) {\n        typeName = type === glConstants.FRAGMENT_SHADER ? 'fragment' : 'vertex'\n    }\n\n    var longForm = sprintf('Error compiling %s shader %s:\\n', typeName, name);\n    var shortForm = sprintf(\"%s%s\", longForm, errLog);\n\n    var errorStrings = errLog.split('\\n');\n    var errors = {};\n\n    for (var i = 0; i < errorStrings.length; i++) {\n        var errorString = errorStrings[i];\n        if (errorString === '' || errorString === \"\\0\") continue;\n        var lineNo = parseInt(errorString.split(':')[2]);\n        if (isNaN(lineNo)) {\n            throw new Error(sprintf('Could not parse error: %s', errorString));\n        }\n        errors[lineNo] = errorString;\n    }\n\n    var lines = addLineNumbers(src).split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n        if (!errors[i+3] && !errors[i+2] && !errors[i+1]) continue;\n        var line = lines[i];\n        longForm += line + '\\n';\n        if (errors[i+1]) {\n            var e = errors[i+1];\n            e = e.substr(e.split(':', 3).join(':').length + 1).trim();\n            longForm += sprintf('^^^ %s\\n\\n', e);\n        }\n    }\n\n    return {\n        long: longForm.trim(),\n        short: shortForm.trim()\n    };\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-format-compiler-error/index.js\n// module id = 61\n// module chunks = 0 1 2","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sprintf-js/src/sprintf.js\n// module id = 62\n// module chunks = 0 1 2","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 63\n// module chunks = 0 1 2","var gl10 = require('./1.0/numbers')\n\nmodule.exports = function lookupConstant (number) {\n  return gl10[number]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-constants/lookup.js\n// module id = 64\n// module chunks = 0 1 2","module.exports = {\n  0: 'NONE',\n  1: 'ONE',\n  2: 'LINE_LOOP',\n  3: 'LINE_STRIP',\n  4: 'TRIANGLES',\n  5: 'TRIANGLE_STRIP',\n  6: 'TRIANGLE_FAN',\n  256: 'DEPTH_BUFFER_BIT',\n  512: 'NEVER',\n  513: 'LESS',\n  514: 'EQUAL',\n  515: 'LEQUAL',\n  516: 'GREATER',\n  517: 'NOTEQUAL',\n  518: 'GEQUAL',\n  519: 'ALWAYS',\n  768: 'SRC_COLOR',\n  769: 'ONE_MINUS_SRC_COLOR',\n  770: 'SRC_ALPHA',\n  771: 'ONE_MINUS_SRC_ALPHA',\n  772: 'DST_ALPHA',\n  773: 'ONE_MINUS_DST_ALPHA',\n  774: 'DST_COLOR',\n  775: 'ONE_MINUS_DST_COLOR',\n  776: 'SRC_ALPHA_SATURATE',\n  1024: 'STENCIL_BUFFER_BIT',\n  1028: 'FRONT',\n  1029: 'BACK',\n  1032: 'FRONT_AND_BACK',\n  1280: 'INVALID_ENUM',\n  1281: 'INVALID_VALUE',\n  1282: 'INVALID_OPERATION',\n  1285: 'OUT_OF_MEMORY',\n  1286: 'INVALID_FRAMEBUFFER_OPERATION',\n  2304: 'CW',\n  2305: 'CCW',\n  2849: 'LINE_WIDTH',\n  2884: 'CULL_FACE',\n  2885: 'CULL_FACE_MODE',\n  2886: 'FRONT_FACE',\n  2928: 'DEPTH_RANGE',\n  2929: 'DEPTH_TEST',\n  2930: 'DEPTH_WRITEMASK',\n  2931: 'DEPTH_CLEAR_VALUE',\n  2932: 'DEPTH_FUNC',\n  2960: 'STENCIL_TEST',\n  2961: 'STENCIL_CLEAR_VALUE',\n  2962: 'STENCIL_FUNC',\n  2963: 'STENCIL_VALUE_MASK',\n  2964: 'STENCIL_FAIL',\n  2965: 'STENCIL_PASS_DEPTH_FAIL',\n  2966: 'STENCIL_PASS_DEPTH_PASS',\n  2967: 'STENCIL_REF',\n  2968: 'STENCIL_WRITEMASK',\n  2978: 'VIEWPORT',\n  3024: 'DITHER',\n  3042: 'BLEND',\n  3088: 'SCISSOR_BOX',\n  3089: 'SCISSOR_TEST',\n  3106: 'COLOR_CLEAR_VALUE',\n  3107: 'COLOR_WRITEMASK',\n  3317: 'UNPACK_ALIGNMENT',\n  3333: 'PACK_ALIGNMENT',\n  3379: 'MAX_TEXTURE_SIZE',\n  3386: 'MAX_VIEWPORT_DIMS',\n  3408: 'SUBPIXEL_BITS',\n  3410: 'RED_BITS',\n  3411: 'GREEN_BITS',\n  3412: 'BLUE_BITS',\n  3413: 'ALPHA_BITS',\n  3414: 'DEPTH_BITS',\n  3415: 'STENCIL_BITS',\n  3553: 'TEXTURE_2D',\n  4352: 'DONT_CARE',\n  4353: 'FASTEST',\n  4354: 'NICEST',\n  5120: 'BYTE',\n  5121: 'UNSIGNED_BYTE',\n  5122: 'SHORT',\n  5123: 'UNSIGNED_SHORT',\n  5124: 'INT',\n  5125: 'UNSIGNED_INT',\n  5126: 'FLOAT',\n  5386: 'INVERT',\n  5890: 'TEXTURE',\n  6401: 'STENCIL_INDEX',\n  6402: 'DEPTH_COMPONENT',\n  6406: 'ALPHA',\n  6407: 'RGB',\n  6408: 'RGBA',\n  6409: 'LUMINANCE',\n  6410: 'LUMINANCE_ALPHA',\n  7680: 'KEEP',\n  7681: 'REPLACE',\n  7682: 'INCR',\n  7683: 'DECR',\n  7936: 'VENDOR',\n  7937: 'RENDERER',\n  7938: 'VERSION',\n  9728: 'NEAREST',\n  9729: 'LINEAR',\n  9984: 'NEAREST_MIPMAP_NEAREST',\n  9985: 'LINEAR_MIPMAP_NEAREST',\n  9986: 'NEAREST_MIPMAP_LINEAR',\n  9987: 'LINEAR_MIPMAP_LINEAR',\n  10240: 'TEXTURE_MAG_FILTER',\n  10241: 'TEXTURE_MIN_FILTER',\n  10242: 'TEXTURE_WRAP_S',\n  10243: 'TEXTURE_WRAP_T',\n  10497: 'REPEAT',\n  10752: 'POLYGON_OFFSET_UNITS',\n  16384: 'COLOR_BUFFER_BIT',\n  32769: 'CONSTANT_COLOR',\n  32770: 'ONE_MINUS_CONSTANT_COLOR',\n  32771: 'CONSTANT_ALPHA',\n  32772: 'ONE_MINUS_CONSTANT_ALPHA',\n  32773: 'BLEND_COLOR',\n  32774: 'FUNC_ADD',\n  32777: 'BLEND_EQUATION_RGB',\n  32778: 'FUNC_SUBTRACT',\n  32779: 'FUNC_REVERSE_SUBTRACT',\n  32819: 'UNSIGNED_SHORT_4_4_4_4',\n  32820: 'UNSIGNED_SHORT_5_5_5_1',\n  32823: 'POLYGON_OFFSET_FILL',\n  32824: 'POLYGON_OFFSET_FACTOR',\n  32854: 'RGBA4',\n  32855: 'RGB5_A1',\n  32873: 'TEXTURE_BINDING_2D',\n  32926: 'SAMPLE_ALPHA_TO_COVERAGE',\n  32928: 'SAMPLE_COVERAGE',\n  32936: 'SAMPLE_BUFFERS',\n  32937: 'SAMPLES',\n  32938: 'SAMPLE_COVERAGE_VALUE',\n  32939: 'SAMPLE_COVERAGE_INVERT',\n  32968: 'BLEND_DST_RGB',\n  32969: 'BLEND_SRC_RGB',\n  32970: 'BLEND_DST_ALPHA',\n  32971: 'BLEND_SRC_ALPHA',\n  33071: 'CLAMP_TO_EDGE',\n  33170: 'GENERATE_MIPMAP_HINT',\n  33189: 'DEPTH_COMPONENT16',\n  33306: 'DEPTH_STENCIL_ATTACHMENT',\n  33635: 'UNSIGNED_SHORT_5_6_5',\n  33648: 'MIRRORED_REPEAT',\n  33901: 'ALIASED_POINT_SIZE_RANGE',\n  33902: 'ALIASED_LINE_WIDTH_RANGE',\n  33984: 'TEXTURE0',\n  33985: 'TEXTURE1',\n  33986: 'TEXTURE2',\n  33987: 'TEXTURE3',\n  33988: 'TEXTURE4',\n  33989: 'TEXTURE5',\n  33990: 'TEXTURE6',\n  33991: 'TEXTURE7',\n  33992: 'TEXTURE8',\n  33993: 'TEXTURE9',\n  33994: 'TEXTURE10',\n  33995: 'TEXTURE11',\n  33996: 'TEXTURE12',\n  33997: 'TEXTURE13',\n  33998: 'TEXTURE14',\n  33999: 'TEXTURE15',\n  34000: 'TEXTURE16',\n  34001: 'TEXTURE17',\n  34002: 'TEXTURE18',\n  34003: 'TEXTURE19',\n  34004: 'TEXTURE20',\n  34005: 'TEXTURE21',\n  34006: 'TEXTURE22',\n  34007: 'TEXTURE23',\n  34008: 'TEXTURE24',\n  34009: 'TEXTURE25',\n  34010: 'TEXTURE26',\n  34011: 'TEXTURE27',\n  34012: 'TEXTURE28',\n  34013: 'TEXTURE29',\n  34014: 'TEXTURE30',\n  34015: 'TEXTURE31',\n  34016: 'ACTIVE_TEXTURE',\n  34024: 'MAX_RENDERBUFFER_SIZE',\n  34041: 'DEPTH_STENCIL',\n  34055: 'INCR_WRAP',\n  34056: 'DECR_WRAP',\n  34067: 'TEXTURE_CUBE_MAP',\n  34068: 'TEXTURE_BINDING_CUBE_MAP',\n  34069: 'TEXTURE_CUBE_MAP_POSITIVE_X',\n  34070: 'TEXTURE_CUBE_MAP_NEGATIVE_X',\n  34071: 'TEXTURE_CUBE_MAP_POSITIVE_Y',\n  34072: 'TEXTURE_CUBE_MAP_NEGATIVE_Y',\n  34073: 'TEXTURE_CUBE_MAP_POSITIVE_Z',\n  34074: 'TEXTURE_CUBE_MAP_NEGATIVE_Z',\n  34076: 'MAX_CUBE_MAP_TEXTURE_SIZE',\n  34338: 'VERTEX_ATTRIB_ARRAY_ENABLED',\n  34339: 'VERTEX_ATTRIB_ARRAY_SIZE',\n  34340: 'VERTEX_ATTRIB_ARRAY_STRIDE',\n  34341: 'VERTEX_ATTRIB_ARRAY_TYPE',\n  34342: 'CURRENT_VERTEX_ATTRIB',\n  34373: 'VERTEX_ATTRIB_ARRAY_POINTER',\n  34466: 'NUM_COMPRESSED_TEXTURE_FORMATS',\n  34467: 'COMPRESSED_TEXTURE_FORMATS',\n  34660: 'BUFFER_SIZE',\n  34661: 'BUFFER_USAGE',\n  34816: 'STENCIL_BACK_FUNC',\n  34817: 'STENCIL_BACK_FAIL',\n  34818: 'STENCIL_BACK_PASS_DEPTH_FAIL',\n  34819: 'STENCIL_BACK_PASS_DEPTH_PASS',\n  34877: 'BLEND_EQUATION_ALPHA',\n  34921: 'MAX_VERTEX_ATTRIBS',\n  34922: 'VERTEX_ATTRIB_ARRAY_NORMALIZED',\n  34930: 'MAX_TEXTURE_IMAGE_UNITS',\n  34962: 'ARRAY_BUFFER',\n  34963: 'ELEMENT_ARRAY_BUFFER',\n  34964: 'ARRAY_BUFFER_BINDING',\n  34965: 'ELEMENT_ARRAY_BUFFER_BINDING',\n  34975: 'VERTEX_ATTRIB_ARRAY_BUFFER_BINDING',\n  35040: 'STREAM_DRAW',\n  35044: 'STATIC_DRAW',\n  35048: 'DYNAMIC_DRAW',\n  35632: 'FRAGMENT_SHADER',\n  35633: 'VERTEX_SHADER',\n  35660: 'MAX_VERTEX_TEXTURE_IMAGE_UNITS',\n  35661: 'MAX_COMBINED_TEXTURE_IMAGE_UNITS',\n  35663: 'SHADER_TYPE',\n  35664: 'FLOAT_VEC2',\n  35665: 'FLOAT_VEC3',\n  35666: 'FLOAT_VEC4',\n  35667: 'INT_VEC2',\n  35668: 'INT_VEC3',\n  35669: 'INT_VEC4',\n  35670: 'BOOL',\n  35671: 'BOOL_VEC2',\n  35672: 'BOOL_VEC3',\n  35673: 'BOOL_VEC4',\n  35674: 'FLOAT_MAT2',\n  35675: 'FLOAT_MAT3',\n  35676: 'FLOAT_MAT4',\n  35678: 'SAMPLER_2D',\n  35680: 'SAMPLER_CUBE',\n  35712: 'DELETE_STATUS',\n  35713: 'COMPILE_STATUS',\n  35714: 'LINK_STATUS',\n  35715: 'VALIDATE_STATUS',\n  35716: 'INFO_LOG_LENGTH',\n  35717: 'ATTACHED_SHADERS',\n  35718: 'ACTIVE_UNIFORMS',\n  35719: 'ACTIVE_UNIFORM_MAX_LENGTH',\n  35720: 'SHADER_SOURCE_LENGTH',\n  35721: 'ACTIVE_ATTRIBUTES',\n  35722: 'ACTIVE_ATTRIBUTE_MAX_LENGTH',\n  35724: 'SHADING_LANGUAGE_VERSION',\n  35725: 'CURRENT_PROGRAM',\n  36003: 'STENCIL_BACK_REF',\n  36004: 'STENCIL_BACK_VALUE_MASK',\n  36005: 'STENCIL_BACK_WRITEMASK',\n  36006: 'FRAMEBUFFER_BINDING',\n  36007: 'RENDERBUFFER_BINDING',\n  36048: 'FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE',\n  36049: 'FRAMEBUFFER_ATTACHMENT_OBJECT_NAME',\n  36050: 'FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL',\n  36051: 'FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE',\n  36053: 'FRAMEBUFFER_COMPLETE',\n  36054: 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT',\n  36055: 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT',\n  36057: 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS',\n  36061: 'FRAMEBUFFER_UNSUPPORTED',\n  36064: 'COLOR_ATTACHMENT0',\n  36096: 'DEPTH_ATTACHMENT',\n  36128: 'STENCIL_ATTACHMENT',\n  36160: 'FRAMEBUFFER',\n  36161: 'RENDERBUFFER',\n  36162: 'RENDERBUFFER_WIDTH',\n  36163: 'RENDERBUFFER_HEIGHT',\n  36164: 'RENDERBUFFER_INTERNAL_FORMAT',\n  36168: 'STENCIL_INDEX8',\n  36176: 'RENDERBUFFER_RED_SIZE',\n  36177: 'RENDERBUFFER_GREEN_SIZE',\n  36178: 'RENDERBUFFER_BLUE_SIZE',\n  36179: 'RENDERBUFFER_ALPHA_SIZE',\n  36180: 'RENDERBUFFER_DEPTH_SIZE',\n  36181: 'RENDERBUFFER_STENCIL_SIZE',\n  36194: 'RGB565',\n  36336: 'LOW_FLOAT',\n  36337: 'MEDIUM_FLOAT',\n  36338: 'HIGH_FLOAT',\n  36339: 'LOW_INT',\n  36340: 'MEDIUM_INT',\n  36341: 'HIGH_INT',\n  36346: 'SHADER_COMPILER',\n  36347: 'MAX_VERTEX_UNIFORM_VECTORS',\n  36348: 'MAX_VARYING_VECTORS',\n  36349: 'MAX_FRAGMENT_UNIFORM_VECTORS',\n  37440: 'UNPACK_FLIP_Y_WEBGL',\n  37441: 'UNPACK_PREMULTIPLY_ALPHA_WEBGL',\n  37442: 'CONTEXT_LOST_WEBGL',\n  37443: 'UNPACK_COLORSPACE_CONVERSION_WEBGL',\n  37444: 'BROWSER_DEFAULT_WEBGL'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-constants/1.0/numbers.js\n// module id = 65\n// module chunks = 0 1 2","var tokenize = require('glsl-tokenizer')\nvar atob     = require('atob-lite')\n\nmodule.exports = getName\n\nfunction getName(src) {\n  var tokens = Array.isArray(src)\n    ? src\n    : tokenize(src)\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.type !== 'preprocessor') continue\n    var match = token.data.match(/\\#define\\s+SHADER_NAME(_B64)?\\s+(.+)$/)\n    if (!match) continue\n    if (!match[2]) continue\n\n    var b64  = match[1]\n    var name = match[2]\n\n    return (b64 ? atob(name) : name).trim()\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-shader-name/index.js\n// module id = 66\n// module chunks = 0 1 2","var tokenize = require('./index')\r\n\r\nmodule.exports = tokenizeString\r\n\r\nfunction tokenizeString(str, opt) {\r\n  var generator = tokenize(opt)\r\n  var tokens = []\r\n\r\n  tokens = tokens.concat(generator(str))\r\n  tokens = tokens.concat(generator(null))\r\n\r\n  return tokens\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/string.js\n// module id = 67\n// module chunks = 0 1 2","module.exports = tokenize\r\n\r\nvar literals100 = require('./lib/literals')\r\n  , operators = require('./lib/operators')\r\n  , builtins100 = require('./lib/builtins')\r\n  , literals300es = require('./lib/literals-300es')\r\n  , builtins300es = require('./lib/builtins-300es')\r\n\r\nvar NORMAL = 999          // <-- never emitted\r\n  , TOKEN = 9999          // <-- never emitted\r\n  , BLOCK_COMMENT = 0\r\n  , LINE_COMMENT = 1\r\n  , PREPROCESSOR = 2\r\n  , OPERATOR = 3\r\n  , INTEGER = 4\r\n  , FLOAT = 5\r\n  , IDENT = 6\r\n  , BUILTIN = 7\r\n  , KEYWORD = 8\r\n  , WHITESPACE = 9\r\n  , EOF = 10\r\n  , HEX = 11\r\n\r\nvar map = [\r\n    'block-comment'\r\n  , 'line-comment'\r\n  , 'preprocessor'\r\n  , 'operator'\r\n  , 'integer'\r\n  , 'float'\r\n  , 'ident'\r\n  , 'builtin'\r\n  , 'keyword'\r\n  , 'whitespace'\r\n  , 'eof'\r\n  , 'integer'\r\n]\r\n\r\nfunction tokenize(opt) {\r\n  var i = 0\r\n    , total = 0\r\n    , mode = NORMAL\r\n    , c\r\n    , last\r\n    , content = []\r\n    , tokens = []\r\n    , token_idx = 0\r\n    , token_offs = 0\r\n    , line = 1\r\n    , col = 0\r\n    , start = 0\r\n    , isnum = false\r\n    , isoperator = false\r\n    , input = ''\r\n    , len\r\n\r\n  opt = opt || {}\r\n  var allBuiltins = builtins100\r\n  var allLiterals = literals100\r\n  if (opt.version === '300 es') {\r\n    allBuiltins = builtins300es\r\n    allLiterals = literals300es\r\n  }\r\n\r\n  // cache by name\r\n  var builtinsDict = {}, literalsDict = {}\r\n  for (var i = 0; i < allBuiltins.length; i++) {\r\n    builtinsDict[allBuiltins[i]] = true\r\n  }\r\n  for (var i = 0; i < allLiterals.length; i++) {\r\n    literalsDict[allLiterals[i]] = true\r\n  }\r\n\r\n  return function(data) {\r\n    tokens = []\r\n    if (data !== null) return write(data)\r\n    return end()\r\n  }\r\n\r\n  function token(data) {\r\n    if (data.length) {\r\n      tokens.push({\r\n        type: map[mode]\r\n      , data: data\r\n      , position: start\r\n      , line: line\r\n      , column: col\r\n      })\r\n    }\r\n  }\r\n\r\n  function write(chunk) {\r\n    i = 0\r\n\r\n    if (chunk.toString) chunk = chunk.toString()\r\n\r\n    input += chunk.replace(/\\r\\n/g, '\\n')\r\n    len = input.length\r\n\r\n\r\n    var last\r\n\r\n    while(c = input[i], i < len) {\r\n      last = i\r\n\r\n      switch(mode) {\r\n        case BLOCK_COMMENT: i = block_comment(); break\r\n        case LINE_COMMENT: i = line_comment(); break\r\n        case PREPROCESSOR: i = preprocessor(); break\r\n        case OPERATOR: i = operator(); break\r\n        case INTEGER: i = integer(); break\r\n        case HEX: i = hex(); break\r\n        case FLOAT: i = decimal(); break\r\n        case TOKEN: i = readtoken(); break\r\n        case WHITESPACE: i = whitespace(); break\r\n        case NORMAL: i = normal(); break\r\n      }\r\n\r\n      if(last !== i) {\r\n        switch(input[last]) {\r\n          case '\\n': col = 0; ++line; break\r\n          default: ++col; break\r\n        }\r\n      }\r\n    }\r\n\r\n    total += i\r\n    input = input.slice(i)\r\n    return tokens\r\n  }\r\n\r\n  function end(chunk) {\r\n    if(content.length) {\r\n      token(content.join(''))\r\n    }\r\n\r\n    mode = EOF\r\n    token('(eof)')\r\n    return tokens\r\n  }\r\n\r\n  function normal() {\r\n    content = content.length ? [] : content\r\n\r\n    if(last === '/' && c === '*') {\r\n      start = total + i - 1\r\n      mode = BLOCK_COMMENT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(last === '/' && c === '/') {\r\n      start = total + i - 1\r\n      mode = LINE_COMMENT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(c === '#') {\r\n      mode = PREPROCESSOR\r\n      start = total + i\r\n      return i\r\n    }\r\n\r\n    if(/\\s/.test(c)) {\r\n      mode = WHITESPACE\r\n      start = total + i\r\n      return i\r\n    }\r\n\r\n    isnum = /\\d/.test(c)\r\n    isoperator = /[^\\w_]/.test(c)\r\n\r\n    start = total + i\r\n    mode = isnum ? INTEGER : isoperator ? OPERATOR : TOKEN\r\n    return i\r\n  }\r\n\r\n  function whitespace() {\r\n    if(/[^\\s]/g.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function preprocessor() {\r\n    if((c === '\\r' || c === '\\n') && last !== '\\\\') {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function line_comment() {\r\n    return preprocessor()\r\n  }\r\n\r\n  function block_comment() {\r\n    if(c === '/' && last === '*') {\r\n      content.push(c)\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i + 1\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function operator() {\r\n    if(last === '.' && /\\d/.test(c)) {\r\n      mode = FLOAT\r\n      return i\r\n    }\r\n\r\n    if(last === '/' && c === '*') {\r\n      mode = BLOCK_COMMENT\r\n      return i\r\n    }\r\n\r\n    if(last === '/' && c === '/') {\r\n      mode = LINE_COMMENT\r\n      return i\r\n    }\r\n\r\n    if(c === '.' && content.length) {\r\n      while(determine_operator(content));\r\n\r\n      mode = FLOAT\r\n      return i\r\n    }\r\n\r\n    if(c === ';' || c === ')' || c === '(') {\r\n      if(content.length) while(determine_operator(content));\r\n      token(c)\r\n      mode = NORMAL\r\n      return i + 1\r\n    }\r\n\r\n    var is_composite_operator = content.length === 2 && c !== '='\r\n    if(/[\\w_\\d\\s]/.test(c) || is_composite_operator) {\r\n      while(determine_operator(content));\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function determine_operator(buf) {\r\n    var j = 0\r\n      , idx\r\n      , res\r\n\r\n    do {\r\n      idx = operators.indexOf(buf.slice(0, buf.length + j).join(''))\r\n      res = operators[idx]\r\n\r\n      if(idx === -1) {\r\n        if(j-- + buf.length > 0) continue\r\n        res = buf.slice(0, 1).join('')\r\n      }\r\n\r\n      token(res)\r\n\r\n      start += res.length\r\n      content = content.slice(res.length)\r\n      return content.length\r\n    } while(1)\r\n  }\r\n\r\n  function hex() {\r\n    if(/[^a-fA-F0-9]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function integer() {\r\n    if(c === '.') {\r\n      content.push(c)\r\n      mode = FLOAT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[eE]/.test(c)) {\r\n      content.push(c)\r\n      mode = FLOAT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(c === 'x' && content.length === 1 && content[0] === '0') {\r\n      mode = HEX\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[^\\d]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function decimal() {\r\n    if(c === 'f') {\r\n      content.push(c)\r\n      last = c\r\n      i += 1\r\n    }\r\n\r\n    if(/[eE]/.test(c)) {\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if ((c === '-' || c === '+') && /[eE]/.test(last)) {\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[^\\d]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function readtoken() {\r\n    if(/[^\\d\\w_]/.test(c)) {\r\n      var contentstr = content.join('')\r\n      if(literalsDict[contentstr]) {\r\n        mode = KEYWORD\r\n      } else if(builtinsDict[contentstr]) {\r\n        mode = BUILTIN\r\n      } else {\r\n        mode = IDENT\r\n      }\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/index.js\n// module id = 68\n// module chunks = 0 1 2","module.exports = [\r\n  // current\r\n    'precision'\r\n  , 'highp'\r\n  , 'mediump'\r\n  , 'lowp'\r\n  , 'attribute'\r\n  , 'const'\r\n  , 'uniform'\r\n  , 'varying'\r\n  , 'break'\r\n  , 'continue'\r\n  , 'do'\r\n  , 'for'\r\n  , 'while'\r\n  , 'if'\r\n  , 'else'\r\n  , 'in'\r\n  , 'out'\r\n  , 'inout'\r\n  , 'float'\r\n  , 'int'\r\n  , 'uint'\r\n  , 'void'\r\n  , 'bool'\r\n  , 'true'\r\n  , 'false'\r\n  , 'discard'\r\n  , 'return'\r\n  , 'mat2'\r\n  , 'mat3'\r\n  , 'mat4'\r\n  , 'vec2'\r\n  , 'vec3'\r\n  , 'vec4'\r\n  , 'ivec2'\r\n  , 'ivec3'\r\n  , 'ivec4'\r\n  , 'bvec2'\r\n  , 'bvec3'\r\n  , 'bvec4'\r\n  , 'sampler1D'\r\n  , 'sampler2D'\r\n  , 'sampler3D'\r\n  , 'samplerCube'\r\n  , 'sampler1DShadow'\r\n  , 'sampler2DShadow'\r\n  , 'struct'\r\n\r\n  // future\r\n  , 'asm'\r\n  , 'class'\r\n  , 'union'\r\n  , 'enum'\r\n  , 'typedef'\r\n  , 'template'\r\n  , 'this'\r\n  , 'packed'\r\n  , 'goto'\r\n  , 'switch'\r\n  , 'default'\r\n  , 'inline'\r\n  , 'noinline'\r\n  , 'volatile'\r\n  , 'public'\r\n  , 'static'\r\n  , 'extern'\r\n  , 'external'\r\n  , 'interface'\r\n  , 'long'\r\n  , 'short'\r\n  , 'double'\r\n  , 'half'\r\n  , 'fixed'\r\n  , 'unsigned'\r\n  , 'input'\r\n  , 'output'\r\n  , 'hvec2'\r\n  , 'hvec3'\r\n  , 'hvec4'\r\n  , 'dvec2'\r\n  , 'dvec3'\r\n  , 'dvec4'\r\n  , 'fvec2'\r\n  , 'fvec3'\r\n  , 'fvec4'\r\n  , 'sampler2DRect'\r\n  , 'sampler3DRect'\r\n  , 'sampler2DRectShadow'\r\n  , 'sizeof'\r\n  , 'cast'\r\n  , 'namespace'\r\n  , 'using'\r\n]\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/lib/literals.js\n// module id = 69\n// module chunks = 0 1 2","module.exports = [\r\n    '<<='\r\n  , '>>='\r\n  , '++'\r\n  , '--'\r\n  , '<<'\r\n  , '>>'\r\n  , '<='\r\n  , '>='\r\n  , '=='\r\n  , '!='\r\n  , '&&'\r\n  , '||'\r\n  , '+='\r\n  , '-='\r\n  , '*='\r\n  , '/='\r\n  , '%='\r\n  , '&='\r\n  , '^^'\r\n  , '^='\r\n  , '|='\r\n  , '('\r\n  , ')'\r\n  , '['\r\n  , ']'\r\n  , '.'\r\n  , '!'\r\n  , '~'\r\n  , '*'\r\n  , '/'\r\n  , '%'\r\n  , '+'\r\n  , '-'\r\n  , '<'\r\n  , '>'\r\n  , '&'\r\n  , '^'\r\n  , '|'\r\n  , '?'\r\n  , ':'\r\n  , '='\r\n  , ','\r\n  , ';'\r\n  , '{'\r\n  , '}'\r\n]\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/lib/operators.js\n// module id = 70\n// module chunks = 0 1 2","module.exports = [\r\n  // Keep this list sorted\r\n  'abs'\r\n  , 'acos'\r\n  , 'all'\r\n  , 'any'\r\n  , 'asin'\r\n  , 'atan'\r\n  , 'ceil'\r\n  , 'clamp'\r\n  , 'cos'\r\n  , 'cross'\r\n  , 'dFdx'\r\n  , 'dFdy'\r\n  , 'degrees'\r\n  , 'distance'\r\n  , 'dot'\r\n  , 'equal'\r\n  , 'exp'\r\n  , 'exp2'\r\n  , 'faceforward'\r\n  , 'floor'\r\n  , 'fract'\r\n  , 'gl_BackColor'\r\n  , 'gl_BackLightModelProduct'\r\n  , 'gl_BackLightProduct'\r\n  , 'gl_BackMaterial'\r\n  , 'gl_BackSecondaryColor'\r\n  , 'gl_ClipPlane'\r\n  , 'gl_ClipVertex'\r\n  , 'gl_Color'\r\n  , 'gl_DepthRange'\r\n  , 'gl_DepthRangeParameters'\r\n  , 'gl_EyePlaneQ'\r\n  , 'gl_EyePlaneR'\r\n  , 'gl_EyePlaneS'\r\n  , 'gl_EyePlaneT'\r\n  , 'gl_Fog'\r\n  , 'gl_FogCoord'\r\n  , 'gl_FogFragCoord'\r\n  , 'gl_FogParameters'\r\n  , 'gl_FragColor'\r\n  , 'gl_FragCoord'\r\n  , 'gl_FragData'\r\n  , 'gl_FragDepth'\r\n  , 'gl_FragDepthEXT'\r\n  , 'gl_FrontColor'\r\n  , 'gl_FrontFacing'\r\n  , 'gl_FrontLightModelProduct'\r\n  , 'gl_FrontLightProduct'\r\n  , 'gl_FrontMaterial'\r\n  , 'gl_FrontSecondaryColor'\r\n  , 'gl_LightModel'\r\n  , 'gl_LightModelParameters'\r\n  , 'gl_LightModelProducts'\r\n  , 'gl_LightProducts'\r\n  , 'gl_LightSource'\r\n  , 'gl_LightSourceParameters'\r\n  , 'gl_MaterialParameters'\r\n  , 'gl_MaxClipPlanes'\r\n  , 'gl_MaxCombinedTextureImageUnits'\r\n  , 'gl_MaxDrawBuffers'\r\n  , 'gl_MaxFragmentUniformComponents'\r\n  , 'gl_MaxLights'\r\n  , 'gl_MaxTextureCoords'\r\n  , 'gl_MaxTextureImageUnits'\r\n  , 'gl_MaxTextureUnits'\r\n  , 'gl_MaxVaryingFloats'\r\n  , 'gl_MaxVertexAttribs'\r\n  , 'gl_MaxVertexTextureImageUnits'\r\n  , 'gl_MaxVertexUniformComponents'\r\n  , 'gl_ModelViewMatrix'\r\n  , 'gl_ModelViewMatrixInverse'\r\n  , 'gl_ModelViewMatrixInverseTranspose'\r\n  , 'gl_ModelViewMatrixTranspose'\r\n  , 'gl_ModelViewProjectionMatrix'\r\n  , 'gl_ModelViewProjectionMatrixInverse'\r\n  , 'gl_ModelViewProjectionMatrixInverseTranspose'\r\n  , 'gl_ModelViewProjectionMatrixTranspose'\r\n  , 'gl_MultiTexCoord0'\r\n  , 'gl_MultiTexCoord1'\r\n  , 'gl_MultiTexCoord2'\r\n  , 'gl_MultiTexCoord3'\r\n  , 'gl_MultiTexCoord4'\r\n  , 'gl_MultiTexCoord5'\r\n  , 'gl_MultiTexCoord6'\r\n  , 'gl_MultiTexCoord7'\r\n  , 'gl_Normal'\r\n  , 'gl_NormalMatrix'\r\n  , 'gl_NormalScale'\r\n  , 'gl_ObjectPlaneQ'\r\n  , 'gl_ObjectPlaneR'\r\n  , 'gl_ObjectPlaneS'\r\n  , 'gl_ObjectPlaneT'\r\n  , 'gl_Point'\r\n  , 'gl_PointCoord'\r\n  , 'gl_PointParameters'\r\n  , 'gl_PointSize'\r\n  , 'gl_Position'\r\n  , 'gl_ProjectionMatrix'\r\n  , 'gl_ProjectionMatrixInverse'\r\n  , 'gl_ProjectionMatrixInverseTranspose'\r\n  , 'gl_ProjectionMatrixTranspose'\r\n  , 'gl_SecondaryColor'\r\n  , 'gl_TexCoord'\r\n  , 'gl_TextureEnvColor'\r\n  , 'gl_TextureMatrix'\r\n  , 'gl_TextureMatrixInverse'\r\n  , 'gl_TextureMatrixInverseTranspose'\r\n  , 'gl_TextureMatrixTranspose'\r\n  , 'gl_Vertex'\r\n  , 'greaterThan'\r\n  , 'greaterThanEqual'\r\n  , 'inversesqrt'\r\n  , 'length'\r\n  , 'lessThan'\r\n  , 'lessThanEqual'\r\n  , 'log'\r\n  , 'log2'\r\n  , 'matrixCompMult'\r\n  , 'max'\r\n  , 'min'\r\n  , 'mix'\r\n  , 'mod'\r\n  , 'normalize'\r\n  , 'not'\r\n  , 'notEqual'\r\n  , 'pow'\r\n  , 'radians'\r\n  , 'reflect'\r\n  , 'refract'\r\n  , 'sign'\r\n  , 'sin'\r\n  , 'smoothstep'\r\n  , 'sqrt'\r\n  , 'step'\r\n  , 'tan'\r\n  , 'texture2D'\r\n  , 'texture2DLod'\r\n  , 'texture2DProj'\r\n  , 'texture2DProjLod'\r\n  , 'textureCube'\r\n  , 'textureCubeLod'\r\n  , 'texture2DLodEXT'\r\n  , 'texture2DProjLodEXT'\r\n  , 'textureCubeLodEXT'\r\n  , 'texture2DGradEXT'\r\n  , 'texture2DProjGradEXT'\r\n  , 'textureCubeGradEXT'\r\n]\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/lib/builtins.js\n// module id = 71\n// module chunks = 0 1 2","var v100 = require('./literals')\r\n\r\nmodule.exports = v100.slice().concat([\r\n   'layout'\r\n  , 'centroid'\r\n  , 'smooth'\r\n  , 'case'\r\n  , 'mat2x2'\r\n  , 'mat2x3'\r\n  , 'mat2x4'\r\n  , 'mat3x2'\r\n  , 'mat3x3'\r\n  , 'mat3x4'\r\n  , 'mat4x2'\r\n  , 'mat4x3'\r\n  , 'mat4x4'\r\n  , 'uvec2'\r\n  , 'uvec3'\r\n  , 'uvec4'\r\n  , 'samplerCubeShadow'\r\n  , 'sampler2DArray'\r\n  , 'sampler2DArrayShadow'\r\n  , 'isampler2D'\r\n  , 'isampler3D'\r\n  , 'isamplerCube'\r\n  , 'isampler2DArray'\r\n  , 'usampler2D'\r\n  , 'usampler3D'\r\n  , 'usamplerCube'\r\n  , 'usampler2DArray'\r\n  , 'coherent'\r\n  , 'restrict'\r\n  , 'readonly'\r\n  , 'writeonly'\r\n  , 'resource'\r\n  , 'atomic_uint'\r\n  , 'noperspective'\r\n  , 'patch'\r\n  , 'sample'\r\n  , 'subroutine'\r\n  , 'common'\r\n  , 'partition'\r\n  , 'active'\r\n  , 'filter'\r\n  , 'image1D'\r\n  , 'image2D'\r\n  , 'image3D'\r\n  , 'imageCube'\r\n  , 'iimage1D'\r\n  , 'iimage2D'\r\n  , 'iimage3D'\r\n  , 'iimageCube'\r\n  , 'uimage1D'\r\n  , 'uimage2D'\r\n  , 'uimage3D'\r\n  , 'uimageCube'\r\n  , 'image1DArray'\r\n  , 'image2DArray'\r\n  , 'iimage1DArray'\r\n  , 'iimage2DArray'\r\n  , 'uimage1DArray'\r\n  , 'uimage2DArray'\r\n  , 'image1DShadow'\r\n  , 'image2DShadow'\r\n  , 'image1DArrayShadow'\r\n  , 'image2DArrayShadow'\r\n  , 'imageBuffer'\r\n  , 'iimageBuffer'\r\n  , 'uimageBuffer'\r\n  , 'sampler1DArray'\r\n  , 'sampler1DArrayShadow'\r\n  , 'isampler1D'\r\n  , 'isampler1DArray'\r\n  , 'usampler1D'\r\n  , 'usampler1DArray'\r\n  , 'isampler2DRect'\r\n  , 'usampler2DRect'\r\n  , 'samplerBuffer'\r\n  , 'isamplerBuffer'\r\n  , 'usamplerBuffer'\r\n  , 'sampler2DMS'\r\n  , 'isampler2DMS'\r\n  , 'usampler2DMS'\r\n  , 'sampler2DMSArray'\r\n  , 'isampler2DMSArray'\r\n  , 'usampler2DMSArray'\r\n])\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/lib/literals-300es.js\n// module id = 72\n// module chunks = 0 1 2","// 300es builtins/reserved words that were previously valid in v100\r\nvar v100 = require('./builtins')\r\n\r\n// The texture2D|Cube functions have been removed\r\n// And the gl_ features are updated\r\nv100 = v100.slice().filter(function (b) {\r\n  return !/^(gl\\_|texture)/.test(b)\r\n})\r\n\r\nmodule.exports = v100.concat([\r\n  // the updated gl_ constants\r\n    'gl_VertexID'\r\n  , 'gl_InstanceID'\r\n  , 'gl_Position'\r\n  , 'gl_PointSize'\r\n  , 'gl_FragCoord'\r\n  , 'gl_FrontFacing'\r\n  , 'gl_FragDepth'\r\n  , 'gl_PointCoord'\r\n  , 'gl_MaxVertexAttribs'\r\n  , 'gl_MaxVertexUniformVectors'\r\n  , 'gl_MaxVertexOutputVectors'\r\n  , 'gl_MaxFragmentInputVectors'\r\n  , 'gl_MaxVertexTextureImageUnits'\r\n  , 'gl_MaxCombinedTextureImageUnits'\r\n  , 'gl_MaxTextureImageUnits'\r\n  , 'gl_MaxFragmentUniformVectors'\r\n  , 'gl_MaxDrawBuffers'\r\n  , 'gl_MinProgramTexelOffset'\r\n  , 'gl_MaxProgramTexelOffset'\r\n  , 'gl_DepthRangeParameters'\r\n  , 'gl_DepthRange'\r\n\r\n  // other builtins\r\n  , 'trunc'\r\n  , 'round'\r\n  , 'roundEven'\r\n  , 'isnan'\r\n  , 'isinf'\r\n  , 'floatBitsToInt'\r\n  , 'floatBitsToUint'\r\n  , 'intBitsToFloat'\r\n  , 'uintBitsToFloat'\r\n  , 'packSnorm2x16'\r\n  , 'unpackSnorm2x16'\r\n  , 'packUnorm2x16'\r\n  , 'unpackUnorm2x16'\r\n  , 'packHalf2x16'\r\n  , 'unpackHalf2x16'\r\n  , 'outerProduct'\r\n  , 'transpose'\r\n  , 'determinant'\r\n  , 'inverse'\r\n  , 'texture'\r\n  , 'textureSize'\r\n  , 'textureProj'\r\n  , 'textureLod'\r\n  , 'textureOffset'\r\n  , 'texelFetch'\r\n  , 'texelFetchOffset'\r\n  , 'textureProjOffset'\r\n  , 'textureLodOffset'\r\n  , 'textureProjLod'\r\n  , 'textureProjLodOffset'\r\n  , 'textureGrad'\r\n  , 'textureGradOffset'\r\n  , 'textureProjGrad'\r\n  , 'textureProjGradOffset'\r\n])\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glsl-tokenizer/lib/builtins-300es.js\n// module id = 73\n// module chunks = 0 1 2","module.exports = function _atob(str) {\n  return atob(str)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/atob-lite/atob-browser.js\n// module id = 74\n// module chunks = 0 1 2","var padLeft = require('pad-left')\n\nmodule.exports = addLineNumbers\nfunction addLineNumbers (string, start, delim) {\n  start = typeof start === 'number' ? start : 1\n  delim = delim || ': '\n\n  var lines = string.split(/\\r?\\n/)\n  var totalDigits = String(lines.length + start - 1).length\n  return lines.map(function (line, i) {\n    var c = i + start\n    var digits = String(c).length\n    var prefix = padLeft(c, totalDigits - digits)\n    return prefix + delim + line\n  }).join('\\n')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/add-line-numbers/index.js\n// module id = 75\n// module chunks = 0 1 2","/*!\n * pad-left <https://github.com/jonschlinkert/pad-left>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = function padLeft(str, num, ch) {\n  ch = typeof ch !== 'undefined' ? (ch + '') : ' ';\n  return repeat(ch, num) + str;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pad-left/index.js\n// module id = 76\n// module chunks = 0 1 2","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/repeat-string/index.js\n// module id = 77\n// module chunks = 0 1 2","// Original - @Gozola.\n// https://gist.github.com/Gozala/1269991\n// This is a reimplemented version (with a few bug fixes).\n\nvar createStore = require('./create-store.js');\n\nmodule.exports = weakMap;\n\nfunction weakMap() {\n    var privates = createStore();\n\n    return {\n        'get': function (key, fallback) {\n            var store = privates(key)\n            return store.hasOwnProperty('value') ?\n                store.value : fallback\n        },\n        'set': function (key, value) {\n            privates(key).value = value;\n            return this;\n        },\n        'has': function(key) {\n            return 'value' in privates(key);\n        },\n        'delete': function (key) {\n            return delete privates(key).value;\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/weakmap-shim/index.js\n// module id = 78\n// module chunks = 0 1 2","var hiddenStore = require('./hidden-store.js');\n\nmodule.exports = createStore;\n\nfunction createStore() {\n    var key = {};\n\n    return function (obj) {\n        if ((typeof obj !== 'object' || obj === null) &&\n            typeof obj !== 'function'\n        ) {\n            throw new Error('Weakmap-shim: Key must be object')\n        }\n\n        var store = obj.valueOf(key);\n        return store && store.identity === key ?\n            store : hiddenStore(obj, key);\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/weakmap-shim/create-store.js\n// module id = 79\n// module chunks = 0 1 2","module.exports = hiddenStore;\n\nfunction hiddenStore(obj, key) {\n    var store = { identity: key };\n    var valueOf = obj.valueOf;\n\n    Object.defineProperty(obj, \"valueOf\", {\n        value: function (value) {\n            return value !== key ?\n                valueOf.apply(this, arguments) : store;\n        },\n        writable: true\n    });\n\n    return store;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/weakmap-shim/hidden-store.js\n// module id = 80\n// module chunks = 0 1 2","'use strict'\n\nexports.uniforms    = runtimeUniforms\nexports.attributes  = runtimeAttributes\n\nvar GL_TO_GLSL_TYPES = {\n  'FLOAT':       'float',\n  'FLOAT_VEC2':  'vec2',\n  'FLOAT_VEC3':  'vec3',\n  'FLOAT_VEC4':  'vec4',\n  'INT':         'int',\n  'INT_VEC2':    'ivec2',\n  'INT_VEC3':    'ivec3',\n  'INT_VEC4':    'ivec4',\n  'BOOL':        'bool',\n  'BOOL_VEC2':   'bvec2',\n  'BOOL_VEC3':   'bvec3',\n  'BOOL_VEC4':   'bvec4',\n  'FLOAT_MAT2':  'mat2',\n  'FLOAT_MAT3':  'mat3',\n  'FLOAT_MAT4':  'mat4',\n  'SAMPLER_2D':  'sampler2D',\n  'SAMPLER_CUBE':'samplerCube'\n}\n\nvar GL_TABLE = null\n\nfunction getType(gl, type) {\n  if(!GL_TABLE) {\n    var typeNames = Object.keys(GL_TO_GLSL_TYPES)\n    GL_TABLE = {}\n    for(var i=0; i<typeNames.length; ++i) {\n      var tn = typeNames[i]\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn]\n    }\n  }\n  return GL_TABLE[type]\n}\n\nfunction runtimeUniforms(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)\n  var result = []\n  for(var i=0; i<numUniforms; ++i) {\n    var info = gl.getActiveUniform(program, i)\n    if(info) {\n      var type = getType(gl, info.type)\n      if(info.size > 1) {\n        for(var j=0; j<info.size; ++j) {\n          result.push({\n            name: info.name.replace('[0]', '[' + j + ']'),\n            type: type\n          })\n        }\n      } else {\n        result.push({\n          name: info.name,\n          type: type\n        })\n      }\n    }\n  }\n  return result\n}\n\nfunction runtimeAttributes(gl, program) {\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)\n  var result = []\n  for(var i=0; i<numAttributes; ++i) {\n    var info = gl.getActiveAttrib(program, i)\n    if(info) {\n      result.push({\n        name: info.name,\n        type: getType(gl, info.type)\n      })\n    }\n  }\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-shader/lib/runtime-reflect.js\n// module id = 81\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.step = step;\nfunction step(array) {\n    var next = Array.prototype.pop.call(array);\n\n    Array.prototype.unshift.call(array, next);\n\n    return next;\n}\n\nvar wrapIndex = exports.wrapIndex = function wrapIndex(index, array) {\n    return array[(array.length + Math.round(index)) % array.length];\n};\n\nvar invLog2 = 1 / Math.log(2);\n\nvar nextPow2 = exports.nextPow2 = function nextPow2(x) {\n    return Math.pow(2, Math.ceil(Math.log(x) * invLog2));\n};\n\n// Handle paths on different hosts - for local/Github/etc hosting.\n// @todo Coupled to the hosting setup - remove where not relevant.\nvar rootPath = exports.rootPath = ('/' + ((location.href.match(/:\\/\\/.+?\\/([^\\/\\?]+?(?=[\\/\\?]|$))?/i) || [])[1] || '') + '/').replace(/\\/+/gi, '/');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/index.js\n// module id = 118\n// module chunks = 0 1 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Timer = function () {\n    function Timer(now, since) {\n        _classCallCheck(this, Timer);\n\n        this.time = 0;\n        this.since = 0;\n\n        this.offset = 0;\n\n        this.rate = 1;\n        this.step = -1;\n\n        this.dt = 0;\n\n        this.paused = false;\n        this.end = -1;\n        this.loop = false;\n\n        this.reset(now, since);\n    }\n\n    _createClass(Timer, [{\n        key: \"now\",\n        value: function now() {\n            var _now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n\n            return (_now - this.offset) * this.rate;\n        }\n    }, {\n        key: \"tick\",\n        value: function tick(now) {\n            var time = this.time;\n            var dt = 0;\n\n            if (this.step >= 0) {\n                dt = this.step * this.rate;\n                time += dt;\n            } else {\n                var past = time;\n\n                time = this.now(now);\n                dt = time - past;\n            }\n\n            if (this.paused) {\n                this.offset += dt;\n                dt = 0;\n            } else if (this.end < 0) {\n                this.time = time;\n            } else if (this.loop) {\n                this.time = time % this.end;\n            } else {\n                this.time = (this.rate > 0 ? Math.min : Math.max)(time, this.end);\n\n                if (this.time !== time) {\n                    this.paused = true;\n                }\n            }\n\n            this.dt = dt;\n\n            return this;\n        }\n    }, {\n        key: \"seek\",\n        value: function seek(to) {\n            this.offset = -to;\n\n            return this;\n        }\n    }, {\n        key: \"scrub\",\n        value: function scrub(by) {\n            this.offset -= by;\n\n            return this;\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            var now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n            var since = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : now;\n\n            this.since = this.offset = since;\n            this.time = this.now(now);\n\n            return this;\n        }\n    }]);\n\n    return Timer;\n}();\n\nexports.Timer = Timer;\nexports.default = Timer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timer.js\n// module id = 120\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Tendrils = exports.glSettings = exports.defaults = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n// Shaders\n\nvar _glShader = require('gl-shader');\n\nvar _glShader2 = _interopRequireDefault(_glShader);\n\nvar _glFbo = require('gl-fbo');\n\nvar _glFbo2 = _interopRequireDefault(_glFbo);\n\nvar _particles2 = require('./particles');\n\nvar _particles3 = _interopRequireDefault(_particles2);\n\nvar _timer = require('./timer');\n\nvar _timer2 = _interopRequireDefault(_timer);\n\nvar _utils = require('./utils');\n\nvar _cpu = require('./spawn/init/cpu');\n\nvar _cpu2 = _interopRequireDefault(_cpu);\n\nvar _aspect = require('./utils/aspect');\n\nvar _screen = require('./screen');\n\nvar _screen2 = _interopRequireDefault(_screen);\n\nvar _logic = require('./logic.frag');\n\nvar _logic2 = _interopRequireDefault(_logic);\n\nvar _index = require('./render/index.vert');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./render/index.frag');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('./flow/index.vert');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('./flow/index.frag');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = require('./screen/index.vert');\n\nvar _index10 = _interopRequireDefault(_index9);\n\nvar _index11 = require('./screen/index.frag');\n\nvar _index12 = _interopRequireDefault(_index11);\n\nvar _copy = require('./screen/copy.frag');\n\nvar _copy2 = _interopRequireDefault(_copy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaults = exports.defaults = function defaults() {\n    return {\n        state: {\n            rootNum: Math.pow(2, 9),\n\n            autoClearView: false,\n            autoFade: true,\n\n            damping: 0.043,\n            speedLimit: 0.01,\n\n            forceWeight: 0.016,\n            varyForce: -0.1,\n\n            flowWeight: 1,\n            varyFlow: 0.2,\n\n            noiseWeight: 0.002,\n            varyNoise: 0.3,\n\n            flowDecay: 0.003,\n            flowWidth: 5,\n\n            noiseScale: 2.125,\n            varyNoiseScale: 0.5,\n\n            noiseSpeed: 0.00025,\n            varyNoiseSpeed: 0.1,\n\n            target: 0,\n            varyTarget: 1,\n\n            lineWidth: 1,\n            speedAlpha: 0.000001,\n            colorMapAlpha: 0.4,\n\n            baseColor: [1, 1, 1, 0.5],\n            flowColor: [1, 1, 1, 0.04],\n            fadeColor: [0.1333, 0.1333, 0.1333, 0]\n        },\n        timer: Object.assign(new _timer2.default(), { step: 1000 / 60 }),\n        numBuffers: 0,\n        logicShader: null,\n        renderShader: [_index2.default, _index4.default],\n        flowShader: [_index6.default, _index8.default],\n        fillShader: [_index10.default, _index12.default],\n        copyShader: [_index10.default, _copy2.default],\n        colorMap: null\n    };\n};\n\nvar glSettings = exports.glSettings = {\n    preserveDrawingBuffer: true,\n    antialias: true\n};\n\nvar Tendrils = exports.Tendrils = function () {\n    function Tendrils(gl, options) {\n        _classCallCheck(this, Tendrils);\n\n        var params = _extends({}, defaults(), options);\n\n        this.gl = gl;\n\n        this.state = params.state;\n\n        if (!(this.colorMap = params.colorMap)) {\n            this.colorMap = (0, _glFbo2.default)(this.gl, [1, 1], { float: true });\n        }\n\n        this.screen = new _screen2.default(this.gl);\n\n        // The FBO into which the particle flow will be rendered, creating the\n        // feedback/self-influence\n        this.flow = (0, _glFbo2.default)(this.gl, [1, 1], { float: true });\n\n        // Targets for the particles, to allow a degree of explicit control\n        this.targets = (0, _glFbo2.default)(this.gl, [1, 1], { float: true });\n\n        // Multiple bufferring\n        this.buffers = [];\n        this.setupBuffers(params.numBuffers);\n\n        this.logicShader = null;\n\n        this.renderShader = Array.isArray(params.renderShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.renderShader))) : params.renderShader;\n\n        this.flowShader = Array.isArray(params.flowShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.flowShader))) : params.flowShader;\n\n        this.copyShader = Array.isArray(params.copyShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.copyShader))) : params.copyShader;\n\n        this.fillShader = Array.isArray(params.fillShader) ? _glShader2.default.apply(undefined, [this.gl].concat(_toConsumableArray(params.fillShader))) : params.fillShader;\n\n        this.uniforms = {\n            render: {},\n            update: {}\n        };\n\n        this.particles = null;\n\n        this.viewRes = [0, 0];\n        // this.pow2Res = [0, 0];\n\n        this.viewSize = [0, 0];\n\n        this.timer = params.timer;\n\n        this.tempData = [];\n    }\n\n    _createClass(Tendrils, [{\n        key: 'setup',\n        value: function setup() {\n            this.setupParticles.apply(this, arguments);\n            this.reset();\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.spawn();\n\n            return this;\n        }\n\n        // @todo\n\n    }, {\n        key: 'dispose',\n        value: function dispose() {\n            this.particles.dispose();\n\n            delete this.particles;\n\n            return this;\n        }\n    }, {\n        key: 'setupBuffers',\n        value: function setupBuffers() {\n            var numBuffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            // Add any needed new buffers\n            while (this.buffers.length < numBuffers) {\n                this.buffers.push((0, _glFbo2.default)(this.gl, [1, 1]));\n            }\n\n            // Remove any unneeded old buffers\n            while (this.buffers.length > numBuffers) {\n                this.buffers.pop().dispose();\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setupParticles',\n        value: function setupParticles() {\n            var rootNum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.rootNum;\n            var numBuffers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n            this.state.rootNum = rootNum;\n\n            var shape = [rootNum, rootNum];\n\n            this.particles = new _particles3.default(this.gl, {\n                shape: shape,\n\n                // Double the rootNum of (vertical neighbour) vertices, to have\n                // pairs alternating between previous and current state.\n                // (Vertical neighbours, because WebGL iterates column-major.)\n                geomShape: [shape[0], shape[1] * 2],\n\n                logicFrag: _logic2.default,\n                render: this.renderShader\n            });\n\n            this.logicShader = this.particles.logic;\n\n            this.particles.setup(numBuffers);\n\n            this.targets.shape = shape;\n\n            return this;\n        }\n\n        // Rendering and logic\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.clearView();\n            this.clearFlow();\n\n            return this;\n        }\n    }, {\n        key: 'clearView',\n        value: function clearView() {\n            var _this = this;\n\n            this.buffers.forEach(function (buffer) {\n                buffer.bind();\n                _this.gl.clear(_this.gl.COLOR_BUFFER_BIT);\n            });\n\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n            return this;\n        }\n    }, {\n        key: 'clearFlow',\n        value: function clearFlow() {\n            this.flow.bind();\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n            return this;\n        }\n    }, {\n        key: 'restart',\n        value: function restart() {\n            this.clear();\n            this.reset();\n\n            return this;\n        }\n    }, {\n        key: 'step',\n        value: function step() {\n            if (!this.timer.paused) {\n                this.particles.logic = this.logicShader;\n\n                // Disabling blending here is important\n                this.gl.disable(this.gl.BLEND);\n\n                Object.assign(this.uniforms.update, this.state, {\n                    dt: this.timer.dt,\n                    time: this.timer.time,\n                    start: this.timer.since,\n                    flow: this.flow.color[0].bind(1),\n                    targets: this.targets.color[0].bind(2),\n                    viewSize: this.viewSize,\n                    viewRes: this.viewRes\n                });\n\n                this.particles.step(this.uniforms.update);\n\n                this.gl.enable(this.gl.BLEND);\n                this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n            }\n\n            return this;\n        }\n\n        /**\n         * @todo Find a way to use free texture bind units without having to\n         *       manually remember them\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.viewport();\n\n            // Flow FBO and view renders\n\n            Object.assign(this.uniforms.render, this.state, {\n                time: this.timer.time,\n                previous: this.particles.buffers[1].color[0].bind(1),\n                viewSize: this.viewSize,\n                viewRes: this.viewRes,\n\n                colorMap: (this.colorMap.color && this.colorMap.color[0] ? this.colorMap.color[0] : this.colorMap).bind(2),\n                colorMapRes: this.colorMap.shape\n            });\n\n            this.particles.render = this.flowShader;\n\n            // Render to the flow FBO - after the logic render, so particles don't\n            // respond to their own flow.\n\n            this.flow.bind();\n\n            this.gl.lineWidth(Math.max(0, this.state.flowWidth));\n            this.particles.draw(this.uniforms.render, this.gl.LINES);\n\n            /**\n             * @todo Mipmaps for global flow sampling - not working at the moment.\n             * @todo Instead of auto-generating mipmaps, should we re-render at each\n             *       scale, with different opacities and line widths? This would\n             *       mean the influence is spread out when drawing, instead of when\n             *       sampling.\n             */\n            // this.flow.color[0].generateMipmap();\n\n\n            // Render to the view.\n\n            if (this.buffers.length === 0) {\n                // Render the particles directly to the screen\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n            } else {\n                // Multi-buffer passes\n                this.buffers[0].bind();\n            }\n\n            if (this.state.autoClearView) {\n                this.clearView();\n            }\n\n            if (this.state.autoFade) {\n                this.drawFade();\n            }\n\n            // Draw the particles\n            this.particles.render = this.renderShader;\n            this.gl.lineWidth(Math.max(0, this.state.lineWidth));\n            this.particles.draw(this.uniforms.render, this.gl.LINES);\n\n            return this;\n        }\n    }, {\n        key: 'drawFade',\n        value: function drawFade() {\n            if (this.state.fadeColor[3] > 0) {\n                this.drawFill(this.state.fadeColor);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'drawFill',\n        value: function drawFill() {\n            var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.fadeColor;\n\n            this.fillShader.bind();\n            this.fillShader.uniforms.color = color;\n            this.screen.render();\n\n            return this;\n        }\n\n        // Draw a buffer's contents to the screen\n\n    }, {\n        key: 'drawBuffer',\n        value: function drawBuffer(index) {\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n\n            if (this.state.autoClearView) {\n                this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            }\n\n            return this.copyBuffer(index).stepBuffers();\n        }\n\n        // Copy a buffer's contents into the current render target\n\n    }, {\n        key: 'copyBuffer',\n        value: function copyBuffer() {\n            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            if (index < this.buffers.length) {\n                this.copyShader.bind();\n\n                Object.assign(this.copyShader.uniforms, {\n                    view: this.buffers[index].color[0].bind(0),\n                    viewRes: this.viewRes\n                });\n\n                this.screen.render();\n            }\n\n            return this;\n        }\n    }, {\n        key: 'stepBuffers',\n        value: function stepBuffers() {\n            if (this.buffers.length > 1) {\n                (0, _utils.step)(this.buffers);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'resize',\n        value: function resize() {\n            var _this2 = this;\n\n            this.viewRes[0] = this.gl.drawingBufferWidth;\n            this.viewRes[1] = this.gl.drawingBufferHeight;\n\n            // NDC dimensions in the range [-1, 1] -> [-(max radius), (max radius)]\n            (0, _aspect.coverAspect)(this.viewSize, this.viewRes);\n\n            // this.pow2Res.fill(nextPow2(Math.max(...this.viewRes)));\n\n            this.buffers.forEach(function (buffer) {\n                return buffer.shape = _this2.viewRes;\n            });\n\n            // this.flow.shape = this.pow2Res;\n            this.flow.shape = this.viewRes;\n\n            return this;\n        }\n    }, {\n        key: 'viewport',\n        value: function viewport() {\n            /**\n             * @todo Why do these 2 lines seem to be equivalent? Something to do\n             *       with how `gl-big-triangle` scales its geometry over the screen?\n             */\n            // this.gl.viewport(0, 0, 1, 1);\n            this.gl.viewport(0, 0, this.viewRes[0], this.viewRes[1]);\n\n            return this;\n        }\n\n        // Respawn\n\n        // Populate the particles with the given spawn function\n\n    }, {\n        key: 'spawn',\n        value: function spawn() {\n            var spawner = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _cpu2.default;\n\n            this.particles.spawn(spawner);\n\n            return this;\n        }\n\n        // Respawn on the GPU using a given shader\n\n    }, {\n        key: 'spawnShader',\n        value: function spawnShader(shader, update) {\n            var _particles;\n\n            this.timer.tick();\n\n            this.particles.logic = shader;\n\n            // @todo Allow switching between the particles data and the targets.\n\n            // Disabling blending here is important\n            this.gl.disable(this.gl.BLEND);\n\n            for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n                rest[_key - 2] = arguments[_key];\n            }\n\n            (_particles = this.particles).step.apply(_particles, [_particles3.default.applyUpdate(_extends({}, this.state, {\n                time: this.timer.time,\n                viewSize: this.viewSize,\n                viewRes: this.viewRes\n            }), update)].concat(rest));\n\n            this.particles.logic = this.logicShader;\n\n            this.gl.enable(this.gl.BLEND);\n            this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n            return this;\n        }\n    }]);\n\n    return Tendrils;\n}();\n\nexports.default = Tendrils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 121\n// module chunks = 0 1 2","'use strict'\n\nvar createTexture = require('gl-texture2d')\n\nmodule.exports = createFBO\n\nvar colorAttachmentArrays = null\nvar FRAMEBUFFER_UNSUPPORTED\nvar FRAMEBUFFER_INCOMPLETE_ATTACHMENT\nvar FRAMEBUFFER_INCOMPLETE_DIMENSIONS\nvar FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n\nfunction saveFBOState(gl) {\n  var fbo = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n  var rbo = gl.getParameter(gl.RENDERBUFFER_BINDING)\n  var tex = gl.getParameter(gl.TEXTURE_BINDING_2D)\n  return [fbo, rbo, tex]\n}\n\nfunction restoreFBOState(gl, data) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, data[0])\n  gl.bindRenderbuffer(gl.RENDERBUFFER, data[1])\n  gl.bindTexture(gl.TEXTURE_2D, data[2])\n}\n\nfunction lazyInitColorAttachments(gl, ext) {\n  var maxColorAttachments = gl.getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL)\n  colorAttachmentArrays = new Array(maxColorAttachments + 1)\n  for(var i=0; i<=maxColorAttachments; ++i) {\n    var x = new Array(maxColorAttachments)\n    for(var j=0; j<i; ++j) {\n      x[j] = gl.COLOR_ATTACHMENT0 + j\n    }\n    for(var j=i; j<maxColorAttachments; ++j) {\n      x[j] = gl.NONE\n    }\n    colorAttachmentArrays[i] = x\n  }\n}\n\n//Throw an appropriate error\nfunction throwFBOError(status) {\n  switch(status){\n    case FRAMEBUFFER_UNSUPPORTED:\n      throw new Error('gl-fbo: Framebuffer unsupported')\n    case FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      throw new Error('gl-fbo: Framebuffer incomplete attachment')\n    case FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      throw new Error('gl-fbo: Framebuffer incomplete dimensions')\n    case FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      throw new Error('gl-fbo: Framebuffer incomplete missing attachment')\n    default:\n      throw new Error('gl-fbo: Framebuffer failed for unspecified reason')\n  }\n}\n\n//Initialize a texture object\nfunction initTexture(gl, width, height, type, format, attachment) {\n  if(!type) {\n    return null\n  }\n  var result = createTexture(gl, width, height, format, type)\n  result.magFilter = gl.NEAREST\n  result.minFilter = gl.NEAREST\n  result.mipSamples = 1\n  result.bind()\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, result.handle, 0)\n  return result\n}\n\n//Initialize a render buffer object\nfunction initRenderBuffer(gl, width, height, component, attachment) {\n  var result = gl.createRenderbuffer()\n  gl.bindRenderbuffer(gl.RENDERBUFFER, result)\n  gl.renderbufferStorage(gl.RENDERBUFFER, component, width, height)\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, result)\n  return result\n}\n\n//Rebuild the frame buffer\nfunction rebuildFBO(fbo) {\n\n  //Save FBO state\n  var state = saveFBOState(fbo.gl)\n\n  var gl = fbo.gl\n  var handle = fbo.handle = gl.createFramebuffer()\n  var width = fbo._shape[0]\n  var height = fbo._shape[1]\n  var numColors = fbo.color.length\n  var ext = fbo._ext\n  var useStencil = fbo._useStencil\n  var useDepth = fbo._useDepth\n  var colorType = fbo._colorType\n\n  //Bind the fbo\n  gl.bindFramebuffer(gl.FRAMEBUFFER, handle)\n\n  //Allocate color buffers\n  for(var i=0; i<numColors; ++i) {\n    fbo.color[i] = initTexture(gl, width, height, colorType, gl.RGBA, gl.COLOR_ATTACHMENT0 + i)\n  }\n  if(numColors === 0) {\n    fbo._color_rb = initRenderBuffer(gl, width, height, gl.RGBA4, gl.COLOR_ATTACHMENT0)\n    if(ext) {\n      ext.drawBuffersWEBGL(colorAttachmentArrays[0])\n    }\n  } else if(numColors > 1) {\n    ext.drawBuffersWEBGL(colorAttachmentArrays[numColors])\n  }\n\n  //Allocate depth/stencil buffers\n  var WEBGL_depth_texture = gl.getExtension('WEBGL_depth_texture')\n  if(WEBGL_depth_texture) {\n    if(useStencil) {\n      fbo.depth = initTexture(gl, width, height,\n                          WEBGL_depth_texture.UNSIGNED_INT_24_8_WEBGL,\n                          gl.DEPTH_STENCIL,\n                          gl.DEPTH_STENCIL_ATTACHMENT)\n    } else if(useDepth) {\n      fbo.depth = initTexture(gl, width, height,\n                          gl.UNSIGNED_SHORT,\n                          gl.DEPTH_COMPONENT,\n                          gl.DEPTH_ATTACHMENT)\n    }\n  } else {\n    if(useDepth && useStencil) {\n      fbo._depth_rb = initRenderBuffer(gl, width, height, gl.DEPTH_STENCIL, gl.DEPTH_STENCIL_ATTACHMENT)\n    } else if(useDepth) {\n      fbo._depth_rb = initRenderBuffer(gl, width, height, gl.DEPTH_COMPONENT16, gl.DEPTH_ATTACHMENT)\n    } else if(useStencil) {\n      fbo._depth_rb = initRenderBuffer(gl, width, height, gl.STENCIL_INDEX, gl.STENCIL_ATTACHMENT)\n    }\n  }\n\n  //Check frame buffer state\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n  if(status !== gl.FRAMEBUFFER_COMPLETE) {\n\n    //Release all partially allocated resources\n    fbo._destroyed = true\n\n    //Release all resources\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n    gl.deleteFramebuffer(fbo.handle)\n    fbo.handle = null\n    if(fbo.depth) {\n      fbo.depth.dispose()\n      fbo.depth = null\n    }\n    if(fbo._depth_rb) {\n      gl.deleteRenderbuffer(fbo._depth_rb)\n      fbo._depth_rb = null\n    }\n    for(var i=0; i<fbo.color.length; ++i) {\n      fbo.color[i].dispose()\n      fbo.color[i] = null\n    }\n    if(fbo._color_rb) {\n      gl.deleteRenderbuffer(fbo._color_rb)\n      fbo._color_rb = null\n    }\n\n    restoreFBOState(gl, state)\n\n    //Throw the frame buffer error\n    throwFBOError(status)\n  }\n\n  //Everything ok, let's get on with life\n  restoreFBOState(gl, state)\n}\n\nfunction Framebuffer(gl, width, height, colorType, numColors, useDepth, useStencil, ext) {\n\n  //Handle and set properties\n  this.gl = gl\n  this._shape = [width|0, height|0]\n  this._destroyed = false\n  this._ext = ext\n\n  //Allocate buffers\n  this.color = new Array(numColors)\n  for(var i=0; i<numColors; ++i) {\n    this.color[i] = null\n  }\n  this._color_rb = null\n  this.depth = null\n  this._depth_rb = null\n\n  //Save depth and stencil flags\n  this._colorType = colorType\n  this._useDepth = useDepth\n  this._useStencil = useStencil\n\n  //Shape vector for resizing\n  var parent = this\n  var shapeVector = [width|0, height|0]\n  Object.defineProperties(shapeVector, {\n    0: {\n      get: function() {\n        return parent._shape[0]\n      },\n      set: function(w) {\n        return parent.width = w\n      }\n    },\n    1: {\n      get: function() {\n        return parent._shape[1]\n      },\n      set: function(h) {\n        return parent.height = h\n      }\n    }\n  })\n  this._shapeVector = shapeVector\n\n  //Initialize all attachments\n  rebuildFBO(this)\n}\n\nvar proto = Framebuffer.prototype\n\nfunction reshapeFBO(fbo, w, h) {\n  //If fbo is invalid, just skip this\n  if(fbo._destroyed) {\n    throw new Error('gl-fbo: Can\\'t resize destroyed FBO')\n  }\n\n  //Don't resize if no change in shape\n  if( (fbo._shape[0] === w) &&\n      (fbo._shape[1] === h) ) {\n    return\n  }\n\n  var gl = fbo.gl\n\n  //Check parameter ranges\n  var maxFBOSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)\n  if( w < 0 || w > maxFBOSize ||\n      h < 0 || h > maxFBOSize) {\n    throw new Error('gl-fbo: Can\\'t resize FBO, invalid dimensions')\n  }\n\n  //Update shape\n  fbo._shape[0] = w\n  fbo._shape[1] = h\n\n  //Save framebuffer state\n  var state = saveFBOState(gl)\n\n  //Resize framebuffer attachments\n  for(var i=0; i<fbo.color.length; ++i) {\n    fbo.color[i].shape = fbo._shape\n  }\n  if(fbo._color_rb) {\n    gl.bindRenderbuffer(gl.RENDERBUFFER, fbo._color_rb)\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.RGBA4, fbo._shape[0], fbo._shape[1])\n  }\n  if(fbo.depth) {\n    fbo.depth.shape = fbo._shape\n  }\n  if(fbo._depth_rb) {\n    gl.bindRenderbuffer(gl.RENDERBUFFER, fbo._depth_rb)\n    if(fbo._useDepth && fbo._useStencil) {\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, fbo._shape[0], fbo._shape[1])\n    } else if(fbo._useDepth) {\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, fbo._shape[0], fbo._shape[1])\n    } else if(fbo._useStencil) {\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX, fbo._shape[0], fbo._shape[1])\n    }\n  }\n\n  //Check FBO status after resize, if something broke then die in a fire\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.handle)\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n  if(status !== gl.FRAMEBUFFER_COMPLETE) {\n    fbo.dispose()\n    restoreFBOState(gl, state)\n    throwFBOError(status)\n  }\n\n  //Restore framebuffer state\n  restoreFBOState(gl, state)\n}\n\nObject.defineProperties(proto, {\n  'shape': {\n    get: function() {\n      if(this._destroyed) {\n        return [0,0]\n      }\n      return this._shapeVector\n    },\n    set: function(x) {\n      if(!Array.isArray(x)) {\n        x = [x|0, x|0]\n      }\n      if(x.length !== 2) {\n        throw new Error('gl-fbo: Shape vector must be length 2')\n      }\n\n      var w = x[0]|0\n      var h = x[1]|0\n      reshapeFBO(this, w, h)\n\n      return [w, h]\n    },\n    enumerable: false\n  },\n  'width': {\n    get: function() {\n      if(this._destroyed) {\n        return 0\n      }\n      return this._shape[0]\n    },\n    set: function(w) {\n      w = w|0\n      reshapeFBO(this, w, this._shape[1])\n      return w\n    },\n    enumerable: false\n  },\n  'height': {\n    get: function() {\n      if(this._destroyed) {\n        return 0\n      }\n      return this._shape[1]\n    },\n    set: function(h) {\n      h = h|0\n      reshapeFBO(this, this._shape[0], h)\n      return h\n    },\n    enumerable: false\n  }\n})\n\nproto.bind = function() {\n  if(this._destroyed) {\n    return\n  }\n  var gl = this.gl\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.handle)\n  gl.viewport(0, 0, this._shape[0], this._shape[1])\n}\n\nproto.dispose = function() {\n  if(this._destroyed) {\n    return\n  }\n  this._destroyed = true\n  var gl = this.gl\n  gl.deleteFramebuffer(this.handle)\n  this.handle = null\n  if(this.depth) {\n    this.depth.dispose()\n    this.depth = null\n  }\n  if(this._depth_rb) {\n    gl.deleteRenderbuffer(this._depth_rb)\n    this._depth_rb = null\n  }\n  for(var i=0; i<this.color.length; ++i) {\n    this.color[i].dispose()\n    this.color[i] = null\n  }\n  if(this._color_rb) {\n    gl.deleteRenderbuffer(this._color_rb)\n    this._color_rb = null\n  }\n}\n\nfunction createFBO(gl, width, height, options) {\n\n  //Update frame buffer error code values\n  if(!FRAMEBUFFER_UNSUPPORTED) {\n    FRAMEBUFFER_UNSUPPORTED = gl.FRAMEBUFFER_UNSUPPORTED\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n  }\n\n  //Lazily initialize color attachment arrays\n  var WEBGL_draw_buffers = gl.getExtension('WEBGL_draw_buffers')\n  if(!colorAttachmentArrays && WEBGL_draw_buffers) {\n    lazyInitColorAttachments(gl, WEBGL_draw_buffers)\n  }\n\n  //Special case: Can accept an array as argument\n  if(Array.isArray(width)) {\n    options = height\n    height = width[1]|0\n    width = width[0]|0\n  }\n\n  if(typeof width !== 'number') {\n    throw new Error('gl-fbo: Missing shape parameter')\n  }\n\n  //Validate width/height properties\n  var maxFBOSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)\n  if(width < 0 || width > maxFBOSize || height < 0 || height > maxFBOSize) {\n    throw new Error('gl-fbo: Parameters are too large for FBO')\n  }\n\n  //Handle each option type\n  options = options || {}\n\n  //Figure out number of color buffers to use\n  var numColors = 1\n  if('color' in options) {\n    numColors = Math.max(options.color|0, 0)\n    if(numColors < 0) {\n      throw new Error('gl-fbo: Must specify a nonnegative number of colors')\n    }\n    if(numColors > 1) {\n      //Check if multiple render targets supported\n      if(!WEBGL_draw_buffers) {\n        throw new Error('gl-fbo: Multiple draw buffer extension not supported')\n      } else if(numColors > gl.getParameter(WEBGL_draw_buffers.MAX_COLOR_ATTACHMENTS_WEBGL)) {\n        throw new Error('gl-fbo: Context does not support ' + numColors + ' draw buffers')\n      }\n    }\n  }\n\n  //Determine whether to use floating point textures\n  var colorType = gl.UNSIGNED_BYTE\n  var OES_texture_float = gl.getExtension('OES_texture_float')\n  if(options.float && numColors > 0) {\n    if(!OES_texture_float) {\n      throw new Error('gl-fbo: Context does not support floating point textures')\n    }\n    colorType = gl.FLOAT\n  } else if(options.preferFloat && numColors > 0) {\n    if(OES_texture_float) {\n      colorType = gl.FLOAT\n    }\n  }\n\n  //Check if we should use depth buffer\n  var useDepth = true\n  if('depth' in options) {\n    useDepth = !!options.depth\n  }\n\n  //Check if we should use a stencil buffer\n  var useStencil = false\n  if('stencil' in options) {\n    useStencil = !!options.stencil\n  }\n\n  return new Framebuffer(\n    gl,\n    width,\n    height,\n    colorType,\n    numColors,\n    useDepth,\n    useStencil,\n    WEBGL_draw_buffers)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-fbo/fbo.js\n// module id = 122\n// module chunks = 0 1 2","'use strict'\n\nvar ndarray = require('ndarray')\nvar ops     = require('ndarray-ops')\nvar pool    = require('typedarray-pool')\n\nmodule.exports = createTexture2D\n\nvar linearTypes = null\nvar filterTypes = null\nvar wrapTypes   = null\n\nfunction lazyInitLinearTypes(gl) {\n  linearTypes = [\n    gl.LINEAR,\n    gl.NEAREST_MIPMAP_LINEAR,\n    gl.LINEAR_MIPMAP_NEAREST,\n    gl.LINEAR_MIPMAP_NEAREST\n  ]\n  filterTypes = [\n    gl.NEAREST,\n    gl.LINEAR,\n    gl.NEAREST_MIPMAP_NEAREST,\n    gl.NEAREST_MIPMAP_LINEAR,\n    gl.LINEAR_MIPMAP_NEAREST,\n    gl.LINEAR_MIPMAP_LINEAR\n  ]\n  wrapTypes = [\n    gl.REPEAT,\n    gl.CLAMP_TO_EDGE,\n    gl.MIRRORED_REPEAT\n  ]\n}\n\nfunction acceptTextureDOM (obj) {\n  return (\n    ('undefined' != typeof HTMLCanvasElement && obj instanceof HTMLCanvasElement) ||\n    ('undefined' != typeof HTMLImageElement && obj instanceof HTMLImageElement) ||\n    ('undefined' != typeof HTMLVideoElement && obj instanceof HTMLVideoElement) ||\n    ('undefined' != typeof ImageData && obj instanceof ImageData))\n}\n\nvar convertFloatToUint8 = function(out, inp) {\n  ops.muls(out, inp, 255.0)\n}\n\nfunction reshapeTexture(tex, w, h) {\n  var gl = tex.gl\n  var maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if(w < 0 || w > maxSize || h < 0 || h > maxSize) {\n    throw new Error('gl-texture2d: Invalid texture size')\n  }\n  tex._shape = [w, h]\n  tex.bind()\n  gl.texImage2D(gl.TEXTURE_2D, 0, tex.format, w, h, 0, tex.format, tex.type, null)\n  tex._mipLevels = [0]\n  return tex\n}\n\nfunction Texture2D(gl, handle, width, height, format, type) {\n  this.gl = gl\n  this.handle = handle\n  this.format = format\n  this.type = type\n  this._shape = [width, height]\n  this._mipLevels = [0]\n  this._magFilter = gl.NEAREST\n  this._minFilter = gl.NEAREST\n  this._wrapS = gl.CLAMP_TO_EDGE\n  this._wrapT = gl.CLAMP_TO_EDGE\n  this._anisoSamples = 1\n\n  var parent = this\n  var wrapVector = [this._wrapS, this._wrapT]\n  Object.defineProperties(wrapVector, [\n    {\n      get: function() {\n        return parent._wrapS\n      },\n      set: function(v) {\n        return parent.wrapS = v\n      }\n    },\n    {\n      get: function() {\n        return parent._wrapT\n      },\n      set: function(v) {\n        return parent.wrapT = v\n      }\n    }\n  ])\n  this._wrapVector = wrapVector\n\n  var shapeVector = [this._shape[0], this._shape[1]]\n  Object.defineProperties(shapeVector, [\n    {\n      get: function() {\n        return parent._shape[0]\n      },\n      set: function(v) {\n        return parent.width = v\n      }\n    },\n    {\n      get: function() {\n        return parent._shape[1]\n      },\n      set: function(v) {\n        return parent.height = v\n      }\n    }\n  ])\n  this._shapeVector = shapeVector\n}\n\nvar proto = Texture2D.prototype\n\nObject.defineProperties(proto, {\n  minFilter: {\n    get: function() {\n      return this._minFilter\n    },\n    set: function(v) {\n      this.bind()\n      var gl = this.gl\n      if(this.type === gl.FLOAT && linearTypes.indexOf(v) >= 0) {\n        if(!gl.getExtension('OES_texture_float_linear')) {\n          v = gl.NEAREST\n        }\n      }\n      if(filterTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown filter mode ' + v)\n      }\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, v)\n      return this._minFilter = v\n    }\n  },\n  magFilter: {\n    get: function() {\n      return this._magFilter\n    },\n    set: function(v) {\n      this.bind()\n      var gl = this.gl\n      if(this.type === gl.FLOAT && linearTypes.indexOf(v) >= 0) {\n        if(!gl.getExtension('OES_texture_float_linear')) {\n          v = gl.NEAREST\n        }\n      }\n      if(filterTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown filter mode ' + v)\n      }\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, v)\n      return this._magFilter = v\n    }\n  },\n  mipSamples: {\n    get: function() {\n      return this._anisoSamples\n    },\n    set: function(i) {\n      var psamples = this._anisoSamples\n      this._anisoSamples = Math.max(i, 1)|0\n      if(psamples !== this._anisoSamples) {\n        var ext = this.gl.getExtension('EXT_texture_filter_anisotropic')\n        if(ext) {\n          this.gl.texParameterf(this.gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, this._anisoSamples)\n        }\n      }\n      return this._anisoSamples\n    }\n  },\n  wrapS: {\n    get: function() {\n      return this._wrapS\n    },\n    set: function(v) {\n      this.bind()\n      if(wrapTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n      }\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, v)\n      return this._wrapS = v\n    }\n  },\n  wrapT: {\n    get: function() {\n      return this._wrapT\n    },\n    set: function(v) {\n      this.bind()\n      if(wrapTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n      }\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, v)\n      return this._wrapT = v\n    }\n  },\n  wrap: {\n    get: function() {\n      return this._wrapVector\n    },\n    set: function(v) {\n      if(!Array.isArray(v)) {\n        v = [v,v]\n      }\n      if(v.length !== 2) {\n        throw new Error('gl-texture2d: Must specify wrap mode for rows and columns')\n      }\n      for(var i=0; i<2; ++i) {\n        if(wrapTypes.indexOf(v[i]) < 0) {\n          throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n        }\n      }\n      this._wrapS = v[0]\n      this._wrapT = v[1]\n\n      var gl = this.gl\n      this.bind()\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this._wrapS)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this._wrapT)\n\n      return v\n    }\n  },\n  shape: {\n    get: function() {\n      return this._shapeVector\n    },\n    set: function(x) {\n      if(!Array.isArray(x)) {\n        x = [x|0,x|0]\n      } else {\n        if(x.length !== 2) {\n          throw new Error('gl-texture2d: Invalid texture shape')\n        }\n      }\n      reshapeTexture(this, x[0]|0, x[1]|0)\n      return [x[0]|0, x[1]|0]\n    }\n  },\n  width: {\n    get: function() {\n      return this._shape[0]\n    },\n    set: function(w) {\n      w = w|0\n      reshapeTexture(this, w, this._shape[1])\n      return w\n    }\n  },\n  height: {\n    get: function() {\n      return this._shape[1]\n    },\n    set: function(h) {\n      h = h|0\n      reshapeTexture(this, this._shape[0], h)\n      return h\n    }\n  }\n})\n\nproto.bind = function(unit) {\n  var gl = this.gl\n  if(unit !== undefined) {\n    gl.activeTexture(gl.TEXTURE0 + (unit|0))\n  }\n  gl.bindTexture(gl.TEXTURE_2D, this.handle)\n  if(unit !== undefined) {\n    return (unit|0)\n  }\n  return gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0\n}\n\nproto.dispose = function() {\n  this.gl.deleteTexture(this.handle)\n}\n\nproto.generateMipmap = function() {\n  this.bind()\n  this.gl.generateMipmap(this.gl.TEXTURE_2D)\n\n  //Update mip levels\n  var l = Math.min(this._shape[0], this._shape[1])\n  for(var i=0; l>0; ++i, l>>>=1) {\n    if(this._mipLevels.indexOf(i) < 0) {\n      this._mipLevels.push(i)\n    }\n  }\n}\n\nproto.setPixels = function(data, x_off, y_off, mip_level) {\n  var gl = this.gl\n  this.bind()\n  if(Array.isArray(x_off)) {\n    mip_level = y_off\n    y_off = x_off[1]|0\n    x_off = x_off[0]|0\n  } else {\n    x_off = x_off || 0\n    y_off = y_off || 0\n  }\n  mip_level = mip_level || 0\n  var directData = acceptTextureDOM(data) ? data : data.raw\n  if(directData) {\n    var needsMip = this._mipLevels.indexOf(mip_level) < 0\n    if(needsMip) {\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, directData)\n      this._mipLevels.push(mip_level)\n    } else {\n      gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, this.format, this.type, directData)\n    }\n  } else if(data.shape && data.stride && data.data) {\n    if(data.shape.length < 2 ||\n       x_off + data.shape[1] > this._shape[1]>>>mip_level ||\n       y_off + data.shape[0] > this._shape[0]>>>mip_level ||\n       x_off < 0 ||\n       y_off < 0) {\n      throw new Error('gl-texture2d: Texture dimensions are out of bounds')\n    }\n    texSubImageArray(gl, x_off, y_off, mip_level, this.format, this.type, this._mipLevels, data)\n  } else {\n    throw new Error('gl-texture2d: Unsupported data type')\n  }\n}\n\n\nfunction isPacked(shape, stride) {\n  if(shape.length === 3) {\n    return  (stride[2] === 1) &&\n            (stride[1] === shape[0]*shape[2]) &&\n            (stride[0] === shape[2])\n  }\n  return  (stride[0] === 1) &&\n          (stride[1] === shape[0])\n}\n\nfunction texSubImageArray(gl, x_off, y_off, mip_level, cformat, ctype, mipLevels, array) {\n  var dtype = array.dtype\n  var shape = array.shape.slice()\n  if(shape.length < 2 || shape.length > 3) {\n    throw new Error('gl-texture2d: Invalid ndarray, must be 2d or 3d')\n  }\n  var type = 0, format = 0\n  var packed = isPacked(shape, array.stride.slice())\n  if(dtype === 'float32') {\n    type = gl.FLOAT\n  } else if(dtype === 'float64') {\n    type = gl.FLOAT\n    packed = false\n    dtype = 'float32'\n  } else if(dtype === 'uint8') {\n    type = gl.UNSIGNED_BYTE\n  } else {\n    type = gl.UNSIGNED_BYTE\n    packed = false\n    dtype = 'uint8'\n  }\n  var channels = 1\n  if(shape.length === 2) {\n    format = gl.LUMINANCE\n    shape = [shape[0], shape[1], 1]\n    array = ndarray(array.data, shape, [array.stride[0], array.stride[1], 1], array.offset)\n  } else if(shape.length === 3) {\n    if(shape[2] === 1) {\n      format = gl.ALPHA\n    } else if(shape[2] === 2) {\n      format = gl.LUMINANCE_ALPHA\n    } else if(shape[2] === 3) {\n      format = gl.RGB\n    } else if(shape[2] === 4) {\n      format = gl.RGBA\n    } else {\n      throw new Error('gl-texture2d: Invalid shape for pixel coords')\n    }\n    channels = shape[2]\n  } else {\n    throw new Error('gl-texture2d: Invalid shape for texture')\n  }\n  //For 1-channel textures allow conversion between formats\n  if((format  === gl.LUMINANCE || format  === gl.ALPHA) &&\n     (cformat === gl.LUMINANCE || cformat === gl.ALPHA)) {\n    format = cformat\n  }\n  if(format !== cformat) {\n    throw new Error('gl-texture2d: Incompatible texture format for setPixels')\n  }\n  var size = array.size\n  var needsMip = mipLevels.indexOf(mip_level) < 0\n  if(needsMip) {\n    mipLevels.push(mip_level)\n  }\n  if(type === ctype && packed) {\n    //Array data types are compatible, can directly copy into texture\n    if(array.offset === 0 && array.data.length === size) {\n      if(needsMip) {\n        gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, array.data)\n      } else {\n        gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, array.data)\n      }\n    } else {\n      if(needsMip) {\n        gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, array.data.subarray(array.offset, array.offset+size))\n      } else {\n        gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, array.data.subarray(array.offset, array.offset+size))\n      }\n    }\n  } else {\n    //Need to do type conversion to pack data into buffer\n    var pack_buffer\n    if(ctype === gl.FLOAT) {\n      pack_buffer = pool.mallocFloat32(size)\n    } else {\n      pack_buffer = pool.mallocUint8(size)\n    }\n    var pack_view = ndarray(pack_buffer, shape, [shape[2], shape[2]*shape[0], 1])\n    if(type === gl.FLOAT && ctype === gl.UNSIGNED_BYTE) {\n      convertFloatToUint8(pack_view, array)\n    } else {\n      ops.assign(pack_view, array)\n    }\n    if(needsMip) {\n      gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, pack_buffer.subarray(0, size))\n    } else {\n      gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, pack_buffer.subarray(0, size))\n    }\n    if(ctype === gl.FLOAT) {\n      pool.freeFloat32(pack_buffer)\n    } else {\n      pool.freeUint8(pack_buffer)\n    }\n  }\n}\n\nfunction initTexture(gl) {\n  var tex = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, tex)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  return tex\n}\n\nfunction createTextureShape(gl, width, height, format, type) {\n  var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if(width < 0 || width > maxTextureSize || height < 0 || height  > maxTextureSize) {\n    throw new Error('gl-texture2d: Invalid texture shape')\n  }\n  if(type === gl.FLOAT && !gl.getExtension('OES_texture_float')) {\n    throw new Error('gl-texture2d: Floating point textures not supported on this platform')\n  }\n  var tex = initTexture(gl)\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, null)\n  return new Texture2D(gl, tex, width, height, format, type)\n}\n\nfunction createTextureDOM(gl, directData, width, height, format, type) {\n  var tex = initTexture(gl)\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, format, type, directData)\n  return new Texture2D(gl, tex, width, height, format, type)\n}\n\n//Creates a texture from an ndarray\nfunction createTextureArray(gl, array) {\n  var dtype = array.dtype\n  var shape = array.shape.slice()\n  var maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if(shape[0] < 0 || shape[0] > maxSize || shape[1] < 0 || shape[1] > maxSize) {\n    throw new Error('gl-texture2d: Invalid texture size')\n  }\n  var packed = isPacked(shape, array.stride.slice())\n  var type = 0\n  if(dtype === 'float32') {\n    type = gl.FLOAT\n  } else if(dtype === 'float64') {\n    type = gl.FLOAT\n    packed = false\n    dtype = 'float32'\n  } else if(dtype === 'uint8') {\n    type = gl.UNSIGNED_BYTE\n  } else {\n    type = gl.UNSIGNED_BYTE\n    packed = false\n    dtype = 'uint8'\n  }\n  var format = 0\n  if(shape.length === 2) {\n    format = gl.LUMINANCE\n    shape = [shape[0], shape[1], 1]\n    array = ndarray(array.data, shape, [array.stride[0], array.stride[1], 1], array.offset)\n  } else if(shape.length === 3) {\n    if(shape[2] === 1) {\n      format = gl.ALPHA\n    } else if(shape[2] === 2) {\n      format = gl.LUMINANCE_ALPHA\n    } else if(shape[2] === 3) {\n      format = gl.RGB\n    } else if(shape[2] === 4) {\n      format = gl.RGBA\n    } else {\n      throw new Error('gl-texture2d: Invalid shape for pixel coords')\n    }\n  } else {\n    throw new Error('gl-texture2d: Invalid shape for texture')\n  }\n  if(type === gl.FLOAT && !gl.getExtension('OES_texture_float')) {\n    type = gl.UNSIGNED_BYTE\n    packed = false\n  }\n  var buffer, buf_store\n  var size = array.size\n  if(!packed) {\n    var stride = [shape[2], shape[2]*shape[0], 1]\n    buf_store = pool.malloc(size, dtype)\n    var buf_array = ndarray(buf_store, shape, stride, 0)\n    if((dtype === 'float32' || dtype === 'float64') && type === gl.UNSIGNED_BYTE) {\n      convertFloatToUint8(buf_array, array)\n    } else {\n      ops.assign(buf_array, array)\n    }\n    buffer = buf_store.subarray(0, size)\n  } else if (array.offset === 0 && array.data.length === size) {\n    buffer = array.data\n  } else {\n    buffer = array.data.subarray(array.offset, array.offset + size)\n  }\n  var tex = initTexture(gl)\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, shape[0], shape[1], 0, format, type, buffer)\n  if(!packed) {\n    pool.free(buf_store)\n  }\n  return new Texture2D(gl, tex, shape[0], shape[1], format, type)\n}\n\nfunction createTexture2D(gl) {\n  if(arguments.length <= 1) {\n    throw new Error('gl-texture2d: Missing arguments for texture2d constructor')\n  }\n  if(!linearTypes) {\n    lazyInitLinearTypes(gl)\n  }\n  if(typeof arguments[1] === 'number') {\n    return createTextureShape(gl, arguments[1], arguments[2], arguments[3]||gl.RGBA, arguments[4]||gl.UNSIGNED_BYTE)\n  }\n  if(Array.isArray(arguments[1])) {\n    return createTextureShape(gl, arguments[1][0]|0, arguments[1][1]|0, arguments[2]||gl.RGBA, arguments[3]||gl.UNSIGNED_BYTE)\n  }\n  if(typeof arguments[1] === 'object') {\n    var obj = arguments[1]\n    var directData = acceptTextureDOM(obj) ? obj : obj.raw\n    if (directData) {\n      return createTextureDOM(gl, directData, obj.width|0, obj.height|0, arguments[2]||gl.RGBA, arguments[3]||gl.UNSIGNED_BYTE)\n    } else if(obj.shape && obj.data && obj.stride) {\n      return createTextureArray(gl, obj)\n    }\n  }\n  throw new Error('gl-texture2d: Invalid arguments for texture2d constructor')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-texture2d/texture.js\n// module id = 123\n// module chunks = 0 1 2","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ndarray/ndarray.js\n// module id = 124\n// module chunks = 0 1 2","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/iota-array/iota.js\n// module id = 125\n// module chunks = 0 1 2","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-buffer/index.js\n// module id = 126\n// module chunks = 0 1 2","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ndarray-ops/ndarray-ops.js\n// module id = 127\n// module chunks = 0 1 2","\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cwise-compiler/compiler.js\n// module id = 128\n// module chunks = 0 1 2","\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cwise-compiler/lib/thunk.js\n// module id = 129\n// module chunks = 0 1 2","\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cwise-compiler/lib/compile.js\n// module id = 130\n// module chunks = 0 1 2","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uniq/uniq.js\n// module id = 131\n// module chunks = 0 1 2","'use strict'\n\nvar bits = require('bit-twiddle')\nvar dup = require('dup')\n\n//Legacy pool support\nif(!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n      UINT8   : dup([32, 0])\n    , UINT16  : dup([32, 0])\n    , UINT32  : dup([32, 0])\n    , INT8    : dup([32, 0])\n    , INT16   : dup([32, 0])\n    , INT32   : dup([32, 0])\n    , FLOAT   : dup([32, 0])\n    , DOUBLE  : dup([32, 0])\n    , DATA    : dup([32, 0])\n    , UINT8C  : dup([32, 0])\n    , BUFFER  : dup([32, 0])\n  }\n}\n\nvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\nvar POOL = global.__TYPEDARRAY_POOL\n\n//Upgrade pool\nif(!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0])\n}\nif(!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0])\n}\n\n//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA    = POOL.DATA\n  , BUFFER  = POOL.BUFFER\n\nexports.free = function free(array) {\n  if(Buffer.isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array)\n  } else {\n    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer\n    }\n    if(!array) {\n      return\n    }\n    var n = array.length || array.byteLength\n    var log_n = bits.log2(n)|0\n    DATA[log_n].push(array)\n  }\n}\n\nfunction freeArrayBuffer(buffer) {\n  if(!buffer) {\n    return\n  }\n  var n = buffer.length || buffer.byteLength\n  var log_n = bits.log2(n)\n  DATA[log_n].push(buffer)\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer)\n}\n\nexports.freeUint8 =\nexports.freeUint16 =\nexports.freeUint32 =\nexports.freeInt8 =\nexports.freeInt16 =\nexports.freeInt32 =\nexports.freeFloat32 = \nexports.freeFloat =\nexports.freeFloat64 = \nexports.freeDouble = \nexports.freeUint8Clamped = \nexports.freeDataView = freeTypedArray\n\nexports.freeArrayBuffer = freeArrayBuffer\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array)\n}\n\nexports.malloc = function malloc(n, dtype) {\n  if(dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n)\n  } else {\n    switch(dtype) {\n      case 'uint8':\n        return mallocUint8(n)\n      case 'uint16':\n        return mallocUint16(n)\n      case 'uint32':\n        return mallocUint32(n)\n      case 'int8':\n        return mallocInt8(n)\n      case 'int16':\n        return mallocInt16(n)\n      case 'int32':\n        return mallocInt32(n)\n      case 'float':\n      case 'float32':\n        return mallocFloat(n)\n      case 'double':\n      case 'float64':\n        return mallocDouble(n)\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n)\n      case 'buffer':\n        return mallocBuffer(n)\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n)\n\n      default:\n        return null\n    }\n  }\n  return null\n}\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var d = DATA[log_n]\n  if(d.length > 0) {\n    return d.pop()\n  }\n  return new ArrayBuffer(n)\n}\nexports.mallocArrayBuffer = mallocArrayBuffer\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocUint8 = mallocUint8\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocUint16 = mallocUint16\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocUint32 = mallocUint32\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocInt8 = mallocInt8\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocInt16 = mallocInt16\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocInt32 = mallocInt32\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n}\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\nfunction mallocUint8Clamped(n) {\n  if(hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n  } else {\n    return mallocUint8(n)\n  }\n}\nexports.mallocUint8Clamped = mallocUint8Clamped\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocDataView = mallocDataView\n\nfunction mallocBuffer(n) {\n  n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var cache = BUFFER[log_n]\n  if(cache.length > 0) {\n    return cache.pop()\n  }\n  return new Buffer(n)\n}\nexports.mallocBuffer = mallocBuffer\n\nexports.clearCache = function clearCache() {\n  for(var i=0; i<32; ++i) {\n    POOL.UINT8[i].length = 0\n    POOL.UINT16[i].length = 0\n    POOL.UINT32[i].length = 0\n    POOL.INT8[i].length = 0\n    POOL.INT16[i].length = 0\n    POOL.INT32[i].length = 0\n    POOL.FLOAT[i].length = 0\n    POOL.DOUBLE[i].length = 0\n    POOL.UINT8C[i].length = 0\n    DATA[i].length = 0\n    BUFFER[i].length = 0\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typedarray-pool/pool.js\n// module id = 132\n// module chunks = 0 1 2","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 133\n// module chunks = 0 1 2","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 134\n// module chunks = 0 1 2","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 135\n// module chunks = 0 1 2","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/~/isarray/index.js\n// module id = 136\n// module chunks = 0 1 2","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bit-twiddle/twiddle.js\n// module id = 137\n// module chunks = 0 1 2","\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dup/dup.js\n// module id = 138\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Particles = exports.defaults = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nfork of [gl-particles](https://github.com/stackgl/gl-particles/blob/master/index.js).\ndds support for different draw modes (as opposed to just POINTS) and a more\nseparated FBO and vertex setup (so you can have different-sized buffer and\nparticles data).\nntodo Ideally, to render more logic than 4 floats (RGBA) in a single pass,\nwe'd like to render to multiple buffers at once - using\ndraw_buffers, as shown [here](https://hacks.mozilla.org/2014/01/webgl-deferred-shading/).\nt the time of writing, that extension has only [57% support across all\ndevices](//webglstats.com/).\no, for now, have to consider other methods (multi-pass,\nencoding/packing more info into each fragment).\nn\n/* global Float32Array */\n\nvar _glGeometry = require('gl-geometry');\n\nvar _glGeometry2 = _interopRequireDefault(_glGeometry);\n\nvar _glShader = require('gl-shader');\n\nvar _glShader2 = _interopRequireDefault(_glShader);\n\nvar _glFbo = require('gl-fbo');\n\nvar _glFbo2 = _interopRequireDefault(_glFbo);\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _isFunction = require('lodash/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _utils = require('./utils');\n\nvar _screen = require('./screen');\n\nvar _screen2 = _interopRequireDefault(_screen);\n\nvar _index = require('./screen/index.vert');\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaults = exports.defaults = function defaults() {\n    return {\n        shape: [64, 64],\n        geomShape: null,\n\n        logic: null,\n        logicVert: _index2.default,\n        logicFrag: null,\n\n        render: null,\n        renderVert: null,\n        renderFrag: null\n    };\n};\n\nvar Particles = exports.Particles = function () {\n    function Particles(gl, options) {\n        _classCallCheck(this, Particles);\n\n        var params = _extends({}, defaults(), options);\n\n        this.gl = gl;\n\n        this.screen = new _screen2.default(this.gl);\n\n        // The dimensions of the state data FBOs. Can be 1:1 with the number of\n        // particle vertices, or\n        this.shape = params.shape;\n        this.geomShape = params.geomShape || [].concat(_toConsumableArray(this.shape));\n\n        var logic = params.logic || [params.logicVert, params.logicFrag];\n\n        this.logic = Array.isArray(logic) ? _glShader2.default.apply(undefined, [gl].concat(_toConsumableArray(logic))) : logic;\n\n        var render = params.render || [params.renderVert, params.renderFrag];\n\n        this.render = Array.isArray(render) ? _glShader2.default.apply(undefined, [gl].concat(_toConsumableArray(render))) : render;\n\n        this.geom = (0, _glGeometry2.default)(gl);\n        this.geom.attr('uv', Particles.generateLUT(this.geomShape), { size: 2 });\n\n        this.buffers = [];\n\n        this.pixels = (0, _ndarray2.default)(new Float32Array(this.shape[0] * this.shape[1] * 4), [this.shape[0], this.shape[1], 4]);\n    }\n\n    _createClass(Particles, [{\n        key: 'setup',\n        value: function setup() {\n            var numBuffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n            // Add any needed new buffers\n            while (this.buffers.length < numBuffers) {\n                this.buffers.push((0, _glFbo2.default)(this.gl, [this.shape[0], this.shape[1]], { float: true }));\n            }\n\n            // Remove any unneeded old buffers\n            while (this.buffers.length > numBuffers) {\n                this.buffers.pop().dispose();\n            }\n        }\n    }, {\n        key: 'spawn',\n        value: function spawn(map) {\n            var pixels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.pixels;\n            var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var data = new Float32Array(4);\n\n            var pixelsShape = pixels.shape;\n            var pixelsData = pixels.data;\n\n            var i = 0;\n\n            for (var x = 0; x < pixelsShape[0]; ++x) {\n                for (var y = 0; y < pixelsShape[1]; ++y) {\n                    data[0] = data[1] = data[2] = data[3] = 0;\n\n                    map(data, x, y);\n\n                    pixelsData[i++] = data[0];\n                    pixelsData[i++] = data[1];\n                    pixelsData[i++] = data[2];\n                    pixelsData[i++] = data[3];\n                }\n            }\n\n            this.buffers.forEach(function (buffer) {\n                return buffer.color[0].setPixels(pixels, offset);\n            });\n        }\n\n        /**\n         * @todo Find a way to use free texture bind units without having to\n         *       manually remember them\n         */\n\n    }, {\n        key: 'step',\n        value: function step(update, buffer) {\n            if (buffer) {\n                buffer.bind();\n            } else {\n                (0, _utils.step)(this.buffers);\n                this.buffers[0].bind();\n            }\n\n            this.gl.viewport(0, 0, this.shape[0], this.shape[1]);\n\n            this.logic.bind();\n\n            Particles.applyUpdate(Object.assign(this.logic.uniforms, {\n                dataRes: this.shape,\n                geomRes: this.geomShape,\n                particles: this.buffers[1].color[0].bind(0)\n            }), update);\n\n            this.screen.render();\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n        }\n    }, {\n        key: 'draw',\n        value: function draw(update) {\n            var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.gl.POINTS;\n\n            this.geom.bind(this.render);\n\n            Particles.applyUpdate(Object.assign(this.render.uniforms, {\n                dataRes: this.shape,\n                geomRes: this.geomShape,\n                particles: this.buffers[0].color[0].bind(0)\n            }), update);\n\n            this.geom.draw(mode);\n        }\n    }, {\n        key: 'updateLogic',\n        value: function updateLogic(logicFrag) {\n            this.logic.update(_index2.default, logicFrag);\n        }\n    }, {\n        key: 'updateRender',\n        value: function updateRender(renderFrag, renderVert) {\n            this.render.update(renderVert, renderFrag);\n        }\n\n        // @todo\n\n    }, {\n        key: 'dispose',\n        value: function dispose() {}\n    }], [{\n        key: 'generateLUT',\n        value: function generateLUT(shape) {\n            var size = shape[0] * shape[1] * 2;\n            var data = new Float32Array(size);\n            var k = 0;\n\n            var w = Math.max(shape[0], 2);\n            var h = Math.max(shape[1], 2);\n\n            var invX = 1 / (w - 1);\n            var invY = 1 / (h - 1);\n\n            for (var i = 0; i < w; ++i) {\n                for (var j = 0; j < h; ++j) {\n                    data[k++] = i * invX;\n                    data[k++] = j * invY;\n                }\n            }\n\n            return data;\n        }\n    }, {\n        key: 'applyUpdate',\n        value: function applyUpdate(state, update) {\n            return (0, _isFunction2.default)(update) ? update(state) : Object.assign(state, update);\n        }\n    }]);\n\n    return Particles;\n}();\n\nexports.default = Particles;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/particles.js\n// module id = 139\n// module chunks = 0 1 2","var normalize = require('./normalize')\nvar glType = require('gl-to-dtype')\nvar createVAO = require('gl-vao')\nvar dtype = require('dtype')\n\nmodule.exports = GLGeometry\n\nfunction GLGeometry (gl) {\n  if (!(this instanceof GLGeometry)) {\n    return new GLGeometry(gl)\n  }\n\n  this._elementsType = 5123\n  this._elementsBytes = 2\n  this._attributes = []\n  this._dirty = true\n  this._attrLength = 0\n  this._facesLength = 0\n  this._index = null\n  this._vao = null\n  this._keys = []\n  this.gl = gl\n}\n\nGLGeometry.prototype.dispose = function () {\n  for (var i = 0; i < this._attributes.length; i++) {\n    this._attributes[i].buffer.dispose()\n  }\n\n  this._attributes = []\n  this._keys = []\n  this._attrLength = 0 // Length of this attribute (the number of vertices it feeds)\n  this._facesLength = 0 // Number of vertices needed to draw all faces\n  this._dirty = true\n\n  if (this._index) {\n    this._index.dispose()\n    this._index = null\n  }\n\n  if (this._vao) {\n    this._vao.dispose()\n    this._vao = null\n  }\n}\n\nGLGeometry.prototype.faces = function faces (attr, opts) {\n  var size = opts && opts.size || 3\n  attr = attr.cells ? attr.cells : attr\n\n  this._dirty = true\n\n  if (this._index) {\n    this._index.dispose()\n  }\n\n  this._index = normalize.create(this.gl\n    , attr\n    , size\n    , this.gl.ELEMENT_ARRAY_BUFFER\n    , 'uint16'\n  )\n\n  this._facesLength = this._index.length * size\n  this._index = this._index.buffer\n\n  return this\n}\n\nGLGeometry.prototype.attr = function (name, attr, opts) {\n  // If we get a simplicial complex\n  if (attr.cells && attr.positions) {\n    return this.attr(name, attr.positions).faces(attr.cells, opts)\n  }\n\n  opts = opts || {}\n  var size = opts.size || 3\n\n  // Is this a known attribute (ie, an update)?\n  var keyIndex = this._keys.indexOf(name)\n  if (keyIndex > -1) {\n    var toUpdate = this._attributes[keyIndex].buffer\n    var offset = opts.offset || undefined\n    normalize.update(toUpdate, attr, size, 'float32', offset)\n    this._attrLength = toUpdate.length / size / 4\n    return this\n  }\n\n  this._dirty = true\n\n  var gl = this.gl\n  var first = !this._attributes.length\n\n  var attribute = normalize.create(gl, attr, size, gl.ARRAY_BUFFER, 'float32')\n  if (!attribute) {\n    throw new Error(\n      'Unexpected attribute format: needs an ndarray, array, typed array, ' +\n      'gl-buffer or simplicial complex'\n    )\n  }\n\n  var buffer = attribute.buffer\n  var length = attribute.length\n\n  this._keys.push(name)\n  this._attributes.push({\n    size: size,\n    buffer: buffer\n  })\n\n  if (first) {\n    this._attrLength = length\n  }\n\n  return this\n}\n\nGLGeometry.prototype.bind = function bind (shader) {\n  this.update()\n  this._vao.bind()\n\n  if (!this._keys) return\n  if (!shader) return\n\n  for (var i = 0; i < this._keys.length; i++) {\n    var attr = shader.attributes[this._keys[i]]\n    if (attr) attr.location = i\n  }\n\n  shader.bind()\n}\n\nGLGeometry.prototype.draw = function draw (mode, start, stop) {\n  start = typeof start === 'undefined' ? 0 : start\n  mode = typeof mode === 'undefined' ? this.gl.TRIANGLES : mode\n\n  this.update()\n\n  if (this._vao._useElements) {\n    stop = typeof stop === 'undefined' ? this._facesLength : stop\n    this.gl.drawElements(mode, stop - start, this._elementsType, start * this._elementsBytes)\n  } else {\n    stop = typeof stop === 'undefined' ? this._attrLength : stop\n    this.gl.drawArrays(mode, start, stop - start)\n  }\n}\n\nGLGeometry.prototype.unbind = function unbind () {\n  this.update()\n  this._vao.unbind()\n}\n\nGLGeometry.prototype.update = function update () {\n  if (!this._dirty) return\n  this._dirty = false\n  if (this._vao) this._vao.dispose()\n\n  this._vao = createVAO(this.gl, this._attributes, this._index)\n  this._elementsType = this._vao._elementsType\n  this._elementsBytes = dtype(\n    glType(this._elementsType) || 'array'\n  ).BYTES_PER_ELEMENT || 2\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-geometry/index.js\n// module id = 140\n// module chunks = 0 1 2","var pack = require('array-pack-2d')\nvar ista = require('is-typedarray')\nvar createBuffer = require('gl-buffer')\nvar isnd = require('isndarray')\nvar dtype = require('dtype')\n\nmodule.exports.create = create\nmodule.exports.update = update\n\nfunction create (gl, attr, size, mode, type) {\n  // if we get a gl-buffer\n  if (attr.handle instanceof WebGLBuffer) {\n    return {\n      buffer: attr,\n      length: attr.length / size / 4\n    }\n  }\n\n  var arr = normalize(attr, size, type)\n  return {\n    buffer: createBuffer(gl, arr.data, mode),\n    length: arr.length\n  }\n}\n\nfunction update (buffer, attr, size, type, offset) {\n  // if we get a gl-buffer\n  if (attr.handle instanceof WebGLBuffer) {\n    throw new Error('Unhandled update case: WebGLBuffer')\n  }\n\n  var arr = normalize(attr, size, type)\n  buffer.update(arr.data, offset)\n}\n\nfunction normalize (attr, size, type) {\n  // if we get a nested 2D array\n  if (Array.isArray(attr) && Array.isArray(attr[0])) {\n    return {\n      data: pack(attr, type),\n      length: attr.length\n    }\n  }\n\n  // if we get a nested 2D array (with the second array being typed)\n  if (Array.isArray(attr) && ista(attr[0])) {\n    return {\n      data: pack(attr, type),\n      length: (attr.length * attr[0].length) / size\n    }\n  }\n\n  // if we get a 1D array\n  if (Array.isArray(attr)) {\n    return {\n      data: new (dtype(type))(attr),\n      length: attr.length / size\n    }\n  }\n\n  // if we get an ndarray\n  if (isnd(attr)) {\n    return {\n      data: attr,\n      length: ndlength(attr.shape) / size\n    }\n  }\n\n  // if we get a typed array\n  if (ista(attr)) {\n    if (type && !(attr instanceof dtype(type))) {\n      attr = convert(attr, dtype(type))\n    }\n\n    return {\n      data: attr,\n      length: attr.length / size\n    }\n  }\n}\n\nfunction ndlength (shape) {\n  var length = 1\n  for (var i = 0; i < shape.length; i++) length *= shape[i]\n  return length\n}\n\nfunction convert (a, B) {\n  var b = new B(a.length)\n  for (var i = 0; i < a.length; i++) b[i] = a[i]\n  return b\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-geometry/normalize.js\n// module id = 141\n// module chunks = 0 1 2","var dtype = require('dtype')\n\nmodule.exports = pack\n\nfunction pack(arr, type) {\n  type = type || 'float32'\n\n  if (!arr[0] || !arr[0].length) {\n    return arr\n  }\n\n  var Arr = typeof type === 'string'\n    ? dtype(type)\n    : type\n\n  var dim = arr[0].length\n  var out = new Arr(arr.length * dim)\n  var k = 0\n\n  for (var i = 0; i < arr.length; i++)\n  for (var j = 0; j < dim; j++) {\n    out[k++] = arr[i][j]\n  }\n\n  return out\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/array-pack-2d/index.js\n// module id = 142\n// module chunks = 0 1 2","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n    case 'generic':\n    case 'data':\n    case 'dataview':\n      return ArrayBuffer\n    case 'buffer':\n      if (typeof Buffer === \"undefined\") return ArrayBuffer\n      return Buffer\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/array-pack-2d/~/dtype/index.js\n// module id = 143\n// module chunks = 0 1 2","module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-typedarray/index.js\n// module id = 144\n// module chunks = 0 1 2","\"use strict\"\n\nvar pool = require(\"typedarray-pool\")\nvar ops = require(\"ndarray-ops\")\nvar ndarray = require(\"ndarray\")\n\nvar SUPPORTED_TYPES = [\n  \"uint8\",\n  \"uint8_clamped\",\n  \"uint16\",\n  \"uint32\",\n  \"int8\",\n  \"int16\",\n  \"int32\",\n  \"float32\" ]\n\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl\n  this.type = type\n  this.handle = handle\n  this.length = length\n  this.usage = usage\n}\n\nvar proto = GLBuffer.prototype\n\nproto.bind = function() {\n  this.gl.bindBuffer(this.type, this.handle)\n}\n\nproto.unbind = function() {\n  this.gl.bindBuffer(this.type, null)\n}\n\nproto.dispose = function() {\n  this.gl.deleteBuffer(this.handle)\n}\n\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT\n  if(offset < 0) {\n    gl.bufferData(type, data, usage)\n    return dataLen\n  }\n  if(dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\")\n  }\n  gl.bufferSubData(type, offset, data)\n  return len\n}\n\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype)\n  var n = array.length\n  for(var i=0; i<n; ++i) {\n    res[i] = array[i]\n  }\n  return res\n}\n\nfunction isPacked(shape, stride) {\n  var n = 1\n  for(var i=stride.length-1; i>=0; --i) {\n    if(stride[i] !== n) {\n      return false\n    }\n    n *= shape[i]\n  }\n  return true\n}\n\nproto.update = function(array, offset) {\n  if(typeof offset !== \"number\") {\n    offset = -1\n  }\n  this.bind()\n  if(typeof array === \"object\" && typeof array.shape !== \"undefined\") { //ndarray\n    var dtype = array.dtype\n    if(SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\"\n    }\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint')\n      if(ext && dtype !== \"uint16\") {\n        dtype = \"uint32\"\n      } else {\n        dtype = \"uint16\"\n      }\n    }\n    if(dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if(array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset)\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype)\n      var ndt = ndarray(tmp, array.shape)\n      ops.assign(ndt, array)\n      if(offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset)\n      }\n      pool.free(tmp)\n    }\n  } else if(Array.isArray(array)) { //Vanilla array\n    var t\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\")\n    } else {\n      t = makeScratchTypeArray(array, \"float32\")\n    }\n    if(offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset)\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset)\n    }\n    pool.free(t)\n  } else if(typeof array === \"object\" && typeof array.length === \"number\") { //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset)\n  } else if(typeof array === \"number\" || array === undefined) { //Number/default\n    if(offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\")\n    }\n    array = array | 0\n    if(array <= 0) {\n      array = 1\n    }\n    this.gl.bufferData(this.type, array|0, this.usage)\n    this.length = array\n  } else { //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\")\n  }\n}\n\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER\n  usage = usage || gl.DYNAMIC_DRAW\n  if(type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\")\n  }\n  if(usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\")\n  }\n  var handle = gl.createBuffer()\n  var result = new GLBuffer(gl, type, handle, 0, usage)\n  result.update(data)\n  return result\n}\n\nmodule.exports = createBuffer\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-buffer/buffer.js\n// module id = 145\n// module chunks = 0 1 2","module.exports = function(arr) {\n  if (!arr) return false\n  if (!arr.dtype) return false\n  var re = new RegExp('function View[0-9]+d(:?' + arr.dtype + ')+')\n  return re.test(String(arr.constructor))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isndarray/index.js\n// module id = 146\n// module chunks = 0 1 2","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dtype/index.js\n// module id = 147\n// module chunks = 0 1 2","module.exports = glToType\nfunction glToType (flag) {\n  switch (flag) {\n    case 5126: return 'float32'   // gl.FLOAT\n    case 5125: return 'uint32'    // gl.UNSIGNED_INT\n    case 5124: return 'int32'     // gl.INT\n    case 5123: return 'uint16'    // gl.UNSIGNED_SHORT\n    case 32819: return 'uint16'   // gl.UNSIGNED_SHORT_4_4_4_4\n    case 32820: return 'uint16'   // gl.UNSIGNED_SHORT_5_5_5_1\n    case 33635: return 'uint16'   // gl.UNSIGNED_SHORT_5_6_5\n    case 5122: return 'int16'     // gl.SHORT\n    case 5121: return 'uint8'     // gl.UNSIGNED_BYTE\n    case 5120: return 'int8'      // gl.BYTE\n    default: return null\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-to-dtype/index.js\n// module id = 148\n// module chunks = 0 1 2","\"use strict\"\n\nvar createVAONative = require(\"./lib/vao-native.js\")\nvar createVAOEmulated = require(\"./lib/vao-emulated.js\")\n\nfunction ExtensionShim (gl) {\n  this.bindVertexArrayOES = gl.bindVertexArray.bind(gl)\n  this.createVertexArrayOES = gl.createVertexArray.bind(gl)\n  this.deleteVertexArrayOES = gl.deleteVertexArray.bind(gl)\n}\n\nfunction createVAO(gl, attributes, elements, elementsType) {\n  var ext = gl.createVertexArray\n    ? new ExtensionShim(gl)\n    : gl.getExtension('OES_vertex_array_object')\n  var vao\n\n  if(ext) {\n    vao = createVAONative(gl, ext)\n  } else {\n    vao = createVAOEmulated(gl)\n  }\n  vao.update(attributes, elements, elementsType)\n  return vao\n}\n\nmodule.exports = createVAO\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-vao/vao.js\n// module id = 149\n// module chunks = 0 1 2","\"use strict\"\n\nvar bindAttribs = require(\"./do-bind.js\")\n\nfunction VertexAttribute(location, dimension, a, b, c, d) {\n  this.location = location\n  this.dimension = dimension\n  this.a = a\n  this.b = b\n  this.c = c\n  this.d = d\n}\n\nVertexAttribute.prototype.bind = function(gl) {\n  switch(this.dimension) {\n    case 1:\n      gl.vertexAttrib1f(this.location, this.a)\n    break\n    case 2:\n      gl.vertexAttrib2f(this.location, this.a, this.b)\n    break\n    case 3:\n      gl.vertexAttrib3f(this.location, this.a, this.b, this.c)\n    break\n    case 4:\n      gl.vertexAttrib4f(this.location, this.a, this.b, this.c, this.d)\n    break\n  }\n}\n\nfunction VAONative(gl, ext, handle) {\n  this.gl = gl\n  this._ext = ext\n  this.handle = handle\n  this._attribs = []\n  this._useElements = false\n  this._elementsType = gl.UNSIGNED_SHORT\n}\n\nVAONative.prototype.bind = function() {\n  this._ext.bindVertexArrayOES(this.handle)\n  for(var i=0; i<this._attribs.length; ++i) {\n    this._attribs[i].bind(this.gl)\n  }\n}\n\nVAONative.prototype.unbind = function() {\n  this._ext.bindVertexArrayOES(null)\n}\n\nVAONative.prototype.dispose = function() {\n  this._ext.deleteVertexArrayOES(this.handle)\n}\n\nVAONative.prototype.update = function(attributes, elements, elementsType) {\n  this.bind()\n  bindAttribs(this.gl, elements, attributes)\n  this.unbind()\n  this._attribs.length = 0\n  if(attributes)\n  for(var i=0; i<attributes.length; ++i) {\n    var a = attributes[i]\n    if(typeof a === \"number\") {\n      this._attribs.push(new VertexAttribute(i, 1, a))\n    } else if(Array.isArray(a)) {\n      this._attribs.push(new VertexAttribute(i, a.length, a[0], a[1], a[2], a[3]))\n    }\n  }\n  this._useElements = !!elements\n  this._elementsType = elementsType || this.gl.UNSIGNED_SHORT\n}\n\nVAONative.prototype.draw = function(mode, count, offset) {\n  offset = offset || 0\n  var gl = this.gl\n  if(this._useElements) {\n    gl.drawElements(mode, count, this._elementsType, offset)\n  } else {\n    gl.drawArrays(mode, offset, count)\n  }\n}\n\nfunction createVAONative(gl, ext) {\n  return new VAONative(gl, ext, ext.createVertexArrayOES())\n}\n\nmodule.exports = createVAONative\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-vao/lib/vao-native.js\n// module id = 150\n// module chunks = 0 1 2","\"use strict\"\n\nfunction doBind(gl, elements, attributes) {\n  if(elements) {\n    elements.bind()\n  } else {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n  }\n  var nattribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS)|0\n  if(attributes) {\n    if(attributes.length > nattribs) {\n      throw new Error(\"gl-vao: Too many vertex attributes\")\n    }\n    for(var i=0; i<attributes.length; ++i) {\n      var attrib = attributes[i]\n      if(attrib.buffer) {\n        var buffer = attrib.buffer\n        var size = attrib.size || 4\n        var type = attrib.type || gl.FLOAT\n        var normalized = !!attrib.normalized\n        var stride = attrib.stride || 0\n        var offset = attrib.offset || 0\n        buffer.bind()\n        gl.enableVertexAttribArray(i)\n        gl.vertexAttribPointer(i, size, type, normalized, stride, offset)\n      } else {\n        if(typeof attrib === \"number\") {\n          gl.vertexAttrib1f(i, attrib)\n        } else if(attrib.length === 1) {\n          gl.vertexAttrib1f(i, attrib[0])\n        } else if(attrib.length === 2) {\n          gl.vertexAttrib2f(i, attrib[0], attrib[1])\n        } else if(attrib.length === 3) {\n          gl.vertexAttrib3f(i, attrib[0], attrib[1], attrib[2])\n        } else if(attrib.length === 4) {\n          gl.vertexAttrib4f(i, attrib[0], attrib[1], attrib[2], attrib[3])\n        } else {\n          throw new Error(\"gl-vao: Invalid vertex attribute\")\n        }\n        gl.disableVertexAttribArray(i)\n      }\n    }\n    for(; i<nattribs; ++i) {\n      gl.disableVertexAttribArray(i)\n    }\n  } else {\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n    for(var i=0; i<nattribs; ++i) {\n      gl.disableVertexAttribArray(i)\n    }\n  }\n}\n\nmodule.exports = doBind\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-vao/lib/do-bind.js\n// module id = 151\n// module chunks = 0 1 2","\"use strict\"\n\nvar bindAttribs = require(\"./do-bind.js\")\n\nfunction VAOEmulated(gl) {\n  this.gl = gl\n  this._elements = null\n  this._attributes = null\n  this._elementsType = gl.UNSIGNED_SHORT\n}\n\nVAOEmulated.prototype.bind = function() {\n  bindAttribs(this.gl, this._elements, this._attributes)\n}\n\nVAOEmulated.prototype.update = function(attributes, elements, elementsType) {\n  this._elements = elements\n  this._attributes = attributes\n  this._elementsType = elementsType || this.gl.UNSIGNED_SHORT\n}\n\nVAOEmulated.prototype.dispose = function() { }\nVAOEmulated.prototype.unbind = function() { }\n\nVAOEmulated.prototype.draw = function(mode, count, offset) {\n  offset = offset || 0\n  var gl = this.gl\n  if(this._elements) {\n    gl.drawElements(mode, count, this._elementsType, offset)\n  } else {\n    gl.drawArrays(mode, offset, count)\n  }\n}\n\nfunction createVAOEmulated(gl) {\n  return new VAOEmulated(gl)\n}\n\nmodule.exports = createVAOEmulated\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-vao/lib/vao-emulated.js\n// module id = 152\n// module chunks = 0 1 2","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isFunction.js\n// module id = 153\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Screen = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _glBigTriangle = require('gl-big-triangle');\n\nvar _glBigTriangle2 = _interopRequireDefault(_glBigTriangle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Extending `gl-big-triangle` to offer a shorthand for `bind`, `draw`, `unbind`\n// (yes, that's what `a-big-triangle` does, but this offers both convenience and\n// optimisation options).\n\nvar Screen = exports.Screen = function (_Triangle) {\n    _inherits(Screen, _Triangle);\n\n    function Screen() {\n        _classCallCheck(this, Screen);\n\n        return _possibleConstructorReturn(this, (Screen.__proto__ || Object.getPrototypeOf(Screen)).apply(this, arguments));\n    }\n\n    _createClass(Screen, [{\n        key: 'render',\n        value: function render() {\n            _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), 'bind', this).call(this);\n            _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), 'draw', this).call(this);\n            _get(Screen.prototype.__proto__ || Object.getPrototypeOf(Screen.prototype), 'unbind', this).call(this);\n        }\n    }]);\n\n    return Screen;\n}(_glBigTriangle2.default);\n\nexports.default = Screen;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/screen/index.js\n// module id = 154\n// module chunks = 0 1 2","var createBuffer = require('gl-buffer')\nvar createVAO = require('gl-vao')\n\nmodule.exports = GLBigTriangle\n\nfunction GLBigTriangle (gl) {\n  if (!(this instanceof GLBigTriangle)) {\n    return new GLBigTriangle(gl)\n  }\n\n  this.gl = gl\n  this.vao = createVAO(gl, [{\n    size: 2,\n    type: gl.FLOAT,\n    buffer: createBuffer(gl, new Float32Array([\n      -1, -1, -1,\n      +4, +4, -1\n    ]))\n  }])\n}\n\nGLBigTriangle.prototype.bind = function () {\n  this.vao.bind()\n}\n\nGLBigTriangle.prototype.draw = function () {\n  this.gl.drawArrays(this.gl.TRIANGLES, 0, 3)\n}\n\nGLBigTriangle.prototype.unbind = function () {\n  this.vao.unbind()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-big-triangle/index.js\n// module id = 155\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\nvarying vec2 uv;\\n\\nvoid main() {\\n    uv = position.xy;\\n\\n    gl_Position = vec4(position, 1.0, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/screen/index.vert\n// module id = 156\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _inert = require('../../const/inert');\n\nvar _inert2 = _interopRequireDefault(_inert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (data) {\n    data[0] = data[1] = _inert2.default;\n    data[2] = data[3] = 0;\n\n    return data;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/spawn/init/cpu.js\n// module id = 157\n// module chunks = 0 1 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// @see `./inert.glsl`\nexports.default = -1000000;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/const/inert.js\n// module id = 158\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.coverAspect = exports.containAspect = exports.aspect = undefined;\n\nvar _glMatrix = require('gl-matrix');\n\nvar aspect = exports.aspect = function aspect(out, size, scale) {\n    return _glMatrix.vec2.scale(out, _glMatrix.vec2.inverse(out, size), scale);\n};\n\nvar containAspect = exports.containAspect = function containAspect(out, size) {\n    return aspect(out, size, Math.min(size[0], size[1]));\n};\n\nvar coverAspect = exports.coverAspect = function coverAspect(out, size) {\n    return aspect(out, size, Math.max(size[0], size[1]));\n};\n\nexports.default = aspect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/aspect.js\n// module id = 159\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D particles;\\nuniform sampler2D flow;\\nuniform sampler2D targets;\\n\\nuniform vec2 dataRes;\\n\\nuniform vec2 viewSize;\\n\\nuniform float time;\\nuniform float dt;\\n\\nuniform float speedLimit;\\nuniform float damping;\\n\\nuniform float forceWeight;\\nuniform float flowWeight;\\nuniform float noiseWeight;\\n\\nuniform float flowDecay;\\n\\nuniform float noiseSpeed;\\nuniform float noiseScale;\\n\\nuniform float target;\\n\\n// These are scaled by the values they correspond to\\nuniform float varyForce;\\nuniform float varyFlow;\\nuniform float varyNoise;\\nuniform float varyNoiseScale;\\nuniform float varyNoiseSpeed;\\nuniform float varyTarget;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nconst vec2 inert = vec2(-1000000.0);\\n\\n/**\\n * @requires {float} levels The number of samples to take at different LODs\\n * @requires {float} stride The step up to take between each LOD\\n */\\n\\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec2 map(vec2 value, vec2 inMin, vec2 inMax, vec2 outMin, vec2 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec3 map(vec3 value, vec3 inMin, vec3 inMax, vec3 outMin, vec3 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec4 map(vec4 value, vec4 inMin, vec4 inMax, vec4 outMin, vec4 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nconst vec4 posRange = vec4(-1.0, -1.0, 1.0, 1.0);\\n\\nconst vec4 uvRange = vec4(0.0, 0.0, 1.0, 1.0);\\n\\nvec2 posToUV(vec2 pos) {\\n    return map(pos, posRange.xy, posRange.zw, uvRange.xy, uvRange.zw);\\n}\\n\\n// Time/decay\\n\\nvec2 get(vec3 data, float time, float decay) {\\n    return data.xy*max(0.0, 1.0-((time-data.z)*decay));\\n}\\n\\nvec2 get(vec4 data, float time, float decay) {\\n    return get(data.xyz, time, decay);\\n}\\n\\n// No time/decay\\n\\nvec2 get(vec2 data) {\\n    return data.xy;\\n}\\n\\nvec2 get(vec3 data) {\\n    return get(data.xy);\\n}\\n\\nvec2 get(vec4 data) {\\n    return get(data.xy);\\n}\\n\\n/**\\n * @return The flow velocity and age for a given screen position, sampling\\n *         several scales.\\n */\\nvec2 flowAtScreenPos(vec2 pos, sampler2D flow, float time, float flowDecay) {\\n    vec2 uv = posToUV(pos);\\n    vec2 flowForce = vec2(0.0);\\n    float flowMax = 0.0;\\n\\n    for(float level = 0.0; level < 1.0*1.0; level += 1.0) {\\n        vec4 flowData = texture2D(flow, uv, level);\\n        float factor = 1.0/(level+1.0);\\n\\n        flowForce += get(flowData, time, flowDecay)*factor;\\n        flowMax += factor;\\n    }\\n\\n    return flowForce/flowMax;\\n}\\n\\nfloat vary(float base, float offset, float variance) {\\n    return base+(offset*variance*base);\\n}\\n\\nvoid main() {\\n    vec2 uv = gl_FragCoord.xy/dataRes;\\n\\n    vec4 state = texture2D(particles, uv);\\n    vec2 pos = state.xy;\\n    vec2 vel = state.zw;\\n\\n    vec2 newPos = pos;\\n    vec2 newVel = vel;\\n\\n    if(pos != inert) {\\n        // The 1D index offset of this pixel\\n        float i = (gl_FragCoord.x+(gl_FragCoord.y*dataRes.x))/\\n                (dataRes.x*dataRes.y);\\n\\n        // Wander force\\n\\n        vec2 noisePos = pos*vary(noiseScale, i, varyNoiseScale);\\n\\n        // @todo This doesn't progress linearly - the speed grows with time...\\n        float noiseTime = time*vary(noiseSpeed, i, varyNoiseSpeed);\\n\\n        vec2 wanderForce = vec2(snoise(vec3(noisePos, uv.x+noiseTime)),\\n                snoise(vec3(noisePos, uv.y+noiseTime+1234.5678)));\\n\\n        // Flow force - left by preceeding particles\\n        // (Ensure this is checked before the next flow step is rendered, to avoid\\n        // self-influence.)\\n\\n        vec2 flowForce = flowAtScreenPos(pos*viewSize, flow, time, flowDecay);\\n\\n        // Accumulate weighted forces and damping\\n        newVel = (vel*damping*dt)+\\n            (vary(forceWeight, i, varyForce)*\\n                ((flowForce*dt*vary(flowWeight, i, varyFlow))+\\n                (wanderForce*dt*vary(noiseWeight, i, varyNoise))));\\n\\n        // Tend towards targets\\n        newVel += (texture2D(targets, uv).xy-pos)*vary(target, i, varyTarget);\\n\\n        // Normalize and clamp the velocity\\n        /**\\n         * @todo This seems to cause some problems when dealing with larger max\\n         *       speeds - the particles no longer follow flow forces somehow...\\n         */\\n        float speed = length(newVel);\\n\\n        newVel *= min(speed, speedLimit)/speed;\\n\\n        // Integrate motion\\n        newPos = pos+newVel;\\n    }\\n\\n    gl_FragColor = vec4(newPos, newVel);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/logic.frag\n// module id = 160\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D previous;\\nuniform sampler2D particles;\\n\\nuniform vec2 dataRes;\\nuniform vec2 geomRes;\\n\\nuniform vec2 viewSize;\\n\\nuniform sampler2D colorMap;\\nuniform float colorMapAlpha;\\n\\nuniform vec4 flowColor;\\nuniform vec4 baseColor;\\n\\nuniform float time;\\nuniform float speedLimit;\\nuniform float flowDecay;\\n\\nuniform float speedAlpha;\\n\\nattribute vec2 uv;\\n\\nvarying vec4 color;\\n\\n/**\\n * Pre-generated constants, equivalent to:\\n *     flowAxisR: `angleToVec(0)`\\n *     flowAxisG: `angleToVec(tau/3.0)`\\n *     flowAxisB: `angleToVec(tau*2.0/3.0)`\\n */\\nconst vec2 flowAxisR = vec2(1.0, 0.0);\\nconst vec2 flowAxisG = vec2(-0.5000000000000004, -0.8660254037844385);\\nconst vec2 flowAxisB = vec2(-0.4999999999999998, 0.8660254037844387);\\n\\nconst vec4 minColor = vec4(0.0);\\nconst vec4 maxColor = vec4(1.0);\\n\\nconst vec4 minAlign = vec4(-1.0);\\nconst vec4 maxAlign = vec4(1.0);\\n\\n// @todo Turn some of these `const`s into `uniform`s\\nconst vec2 center = vec2(0.0);\\nconst vec2 fadeRange = vec2(0.2, 1.0);\\nconst vec3 falloff = vec3(fadeRange.x, fadeRange.y, fadeRange.y);\\n\\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec2 map(vec2 value, vec2 inMin, vec2 inMax, vec2 outMin, vec2 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec3 map(vec3 value, vec3 inMin, vec3 inMax, vec3 outMin, vec3 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nvec4 map(vec4 value, vec4 inMin, vec4 inMax, vec4 outMin, vec4 outMax) {\\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\\n}\\n\\nconst vec2 inert = vec2(-1000000.0);\\n\\nfloat length2(vec2 vec) {\\n    return dot(vec, vec);\\n}\\n\\nfloat length2(vec3 vec) {\\n    return dot(vec, vec);\\n}\\n\\nfloat length2(vec4 vec) {\\n    return dot(vec, vec);\\n}\\n\\n/**\\n * Adapted from `bezier`.\\n */\\n\\nfloat bezier(vec2 cp, float t) {\\n    return cp.x+(cp.y-cp.x)*t;\\n}\\n\\nfloat bezier(vec3 cp, float t) {\\n    float ut = 1.0-t;\\n\\n    return (cp.x*ut+cp.y*t)*ut+(cp.y*ut+cp.z*t)*t;\\n}\\n\\nfloat bezier(vec4 cp, float t) {\\n    float ut = 1.0-t;\\n    float a1 = cp.y*ut+cp.z*t;\\n\\n    return ((cp.x*ut+cp.y*t)*ut+a1*t)*ut+(a1*ut+(cp.z*ut+cp.w*t)*t)*t;\\n}\\n\\n// @todo Remove the `1.0-` here?\\nfloat amount(vec2 point, vec2 mid, float limit) {\\n    return min(1.0-(length(point-mid)/limit), 1.0);\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit) {\\n    return max(0.0, amount(point, mid, limit));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, float curve) {\\n    return max(0.0, curve*amount(point, mid, limit));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, vec2 curve) {\\n    return max(0.0, bezier(curve, amount(point, mid, limit)));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, vec3 curve) {\\n    return max(0.0, bezier(curve, amount(point, mid, limit)));\\n}\\n\\nfloat vignette(vec2 point, vec2 mid, float limit, vec4 curve) {\\n    return max(0.0, bezier(curve, amount(point, mid, limit)));\\n}\\n\\nvec4 preAlpha(vec3 color, float alpha) {\\n    return vec4(color.rgb*alpha, alpha);\\n}\\n\\nvec4 preAlpha(vec4 color) {\\n    return preAlpha(color.rgb, color.a);\\n}\\n\\nconst float frameOffset = 0.25;\\n\\n/**\\n * For every data point, we have two vertices - current and previous state.\\n * Every other vertex looks up previous data. In this way, (vertical)\\n * neighbours alternate from previous to current state.\\n * (Vertical neighbours, because WebGL iterates column-major.)\\n *\\n * @return State data for the vertex, either current or previous.\\n */\\n\\nvec4 stateAtFrame(vec2 uv, vec2 shape, sampler2D previous, sampler2D current) {\\n    float nearIndex = uv.y*shape.y;\\n    float offset = fract(nearIndex);\\n    vec2 lookup = vec2(uv.x, floor(nearIndex)/shape.y);\\n\\n    // @note Some systems comlain about this form of texture lookup:\\n    // return texture2D(((offset > frameOffset)? current : previous), lookup);\\n    return ((offset > frameOffset)?\\n            texture2D(current, lookup)\\n        :   texture2D(previous, lookup));\\n}\\n\\nvoid main() {\\n    vec4 state = stateAtFrame(uv, dataRes, previous, particles);\\n\\n    if(state.xy != inert) {\\n        vec2 pos = state.xy;\\n        vec2 vel = state.zw/speedLimit;\\n        float speedRate = min(length2(vel)/speedAlpha, 1.0);\\n\\n        // Color map\\n\\n        vec4 mappedColor = texture2D(colorMap, uv*geomRes/dataRes);\\n\\n        mappedColor *= colorMapAlpha;\\n\\n        // Flow color\\n        \\n        vec3 alignRGB = vec3(dot(vel, flowAxisR),\\n                dot(vel, flowAxisG), dot(vel, flowAxisB));\\n\\n        vec3 flowAlign = map(mix(alignRGB, alignRGB.gbr*(1.0-flowDecay),\\n                    sin(time*flowDecay)),\\n                minAlign.rgb, maxAlign.rgb, minColor.rgb, maxColor.rgb);\\n\\n        vec4 flowAlignedColor = vec4(flowColor.rgb*flowAlign, flowColor.a);\\n\\n        // Color summation, clamping and pre-multiplying alpha so they don't\\n        // cross over\\n\\n        color = clamp(preAlpha(baseColor), minColor, maxColor)+\\n            clamp(preAlpha(mappedColor), minColor, maxColor)+\\n            clamp(preAlpha(flowAlignedColor), minColor, maxColor);\\n\\n        color.a *= speedRate*clamp(vignette(pos, center, 1.0, falloff),\\n                        fadeRange.x, fadeRange.y);\\n\\n        // Position\\n        gl_Position = vec4(pos*viewSize, 0.0, 1.0);\\n    }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/render/index.vert\n// module id = 161\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec4 color;\\n\\nvoid main() {\\n    gl_FragColor = color;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/render/index.frag\n// module id = 162\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D previous;\\nuniform sampler2D data;\\n\\nuniform vec2 dataRes;\\n\\nuniform vec2 viewSize;\\n\\nuniform float time;\\nuniform float speedLimit;\\nuniform float flowDecay;\\n\\nattribute vec2 uv;\\n\\nvarying vec4 color;\\n\\n/**\\n * @requires {float} time The current time in ms\\n */\\n\\nvec4 flow(vec2 vel) {\\n    // Faster particles leave a greater influence (opacity).\\n    // Linear interpolation - inaccurate for vectors, will it be OK without\\n    // sudden turns, or do we need a per-fragment lookup?\\n    return vec4(vel, time, length(vel));\\n}\\n\\nvec4 flow(vec2 vel, float speedLimit) {\\n    vec4 values = flow(vel);\\n\\n    return vec4(values.xyz, min(values.a/speedLimit, 1.0));\\n}\\n\\n/**\\n * @requires `./head.vert`\\n * @requires {function} apply A function applying a `vec4` state into a `vec3`\\n *                            color to be drawn.\\n */\\n\\nconst vec2 inert = vec2(-1000000.0);\\n\\nconst float frameOffset = 0.25;\\n\\n/**\\n * For every data point, we have two vertices - current and previous state.\\n * Every other vertex looks up previous data. In this way, (vertical)\\n * neighbours alternate from previous to current state.\\n * (Vertical neighbours, because WebGL iterates column-major.)\\n *\\n * @return State data for the vertex, either current or previous.\\n */\\n\\nvec4 stateAtFrame(vec2 uv, vec2 shape, sampler2D previous, sampler2D current) {\\n    float nearIndex = uv.y*shape.y;\\n    float offset = fract(nearIndex);\\n    vec2 lookup = vec2(uv.x, floor(nearIndex)/shape.y);\\n\\n    // @note Some systems comlain about this form of texture lookup:\\n    // return texture2D(((offset > frameOffset)? current : previous), lookup);\\n    return ((offset > frameOffset)?\\n            texture2D(current, lookup)\\n        :   texture2D(previous, lookup));\\n}\\n\\nvoid main() {\\n    vec4 state = stateAtFrame(uv, dataRes, previous, data);\\n\\n    if(state.xy != inert) {\\n        gl_Position = vec4(state.xy*viewSize, 1.0, 1.0);\\n        color = flow(state.zw, speedLimit);\\n    }\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flow/index.vert\n// module id = 163\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec4 color;\\n\\nvoid main() {\\n    // @todo SDF from line, to weaken force further away\\n    gl_FragColor = color.rgba;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flow/index.frag\n// module id = 164\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform vec4 color;\\n\\nvoid main() {\\n    gl_FragColor = color.rgba;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/screen/index.frag\n// module id = 165\n// module chunks = 0 1 2","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D view;\\nuniform vec2 viewRes;\\n\\n// #pragma glslify: fxaa = require(glsl-fxaa)\\n\\nvoid main() {\\n    gl_FragColor = texture2D(view, gl_FragCoord.xy/viewRes);\\n    // gl_FragColor = fxaa(view, gl_FragCoord.xy, viewRes);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/screen/copy.frag\n// module id = 166\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require('.');\n\nObject.keys(_).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _[key];\n    }\n  });\n});\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.main.js\n// module id = 227\n// module chunks = 2"],"sourceRoot":""}